#!/bin/ksh

%manual
  -------------------------------------------------
  INIT_DATA.SMS
  -------------------------------------------------

  This script is part of the ICON SMS suite
  Initial implementation: F. Prill, DWD (2012-05-07)

  Corresponding author:
    Florian Prill, DWD, mailto:florian.prill@dwd.de

  Task objectives:
  - retrieve IFS data from MARS 
%end

# include the header file for remote jobs
%include <init_job.h> 


# -------------------------------------------------

echo "INIT_DATA.SMS"

module load python

# calculate and format starting date of simulation: SMSDATE - 2 days, time: UTC 00 
REQUEST_DATE=`python %SCBASEDIR%/%SUITE_NAME%/def/bin/date_calc.py -a printdate -d %SMSDATE%00 -s 2`

IFSCONFIGFILE="%SCBASEDIR%/%SUITE_NAME%/def/ifs2icon_1279.conf"
IFSDATADIR="%SCBASEDIR%/%SUITE_NAME%/cluster/input/ifs2icon"
IFSDATAOUTDIR="%SCTEMP%/input/%SUITE_NAME%/${REQUEST_DATE}"
GRIDDIR="%SCBASEDIR%/%SUITE_NAME%/cluster/input/grids"
CDOBIN="%SCPERM%/software/cdo-1.5.4_build/bin/cdo"
RUBYBIN="/perm/ms/de/dfi0/software/ruby-1.9.3-p125/ruby"
IFS2ICON="%SCBASEDIR%/%SUITE_NAME%/def/icon_scripts/preprocessing/ifs2icon.rb"

export CDOBIN
# Important: ==================================
# export the DWD GRIB short names:
export GRIB_DEFINITION_PATH="%SCPERM%/software/usr/local/grib_api/release/share-1.9.9/definitions.edzw:/usr/local/lib/metaps/lib/grib_api/1.9.9/share/definitions"
# =============================================


# Change directory ----------------------------
smsevent change_dir
cd ${IFSDATADIR}

# create IFSDATAOUTDIR, if necessary
if [ ! -d ${IFSDATAOUTDIR} ]; then
    mkdir -p ${IFSDATAOUTDIR}
fi

# move grib file to IFS2ICON directory
mv ${IFSDATADIR}/ifs_oper_T255_${REQUEST_DATE}.grb ${IFSDATAOUTDIR}
IFS_FILENAME="${IFSDATAOUTDIR}/ifs_oper_T255_${REQUEST_DATE}.grb"

module unload cdo
module load cdo/1.5.0

# The following environment variable is important for the "cdo splitname" command (Otherwise: "Not enough space")
export LDR_CNTRL=MAXDATA=0xD0000000@DSA

   
# Compute weights for ifs2icon ----------------
if [ -f "${IFSDATADIR}/cellweights/initialized.flag" ];
then
   echo "CDO cell weights already computed!"
else
   smsevent compute_weights
   cd ${IFSDATADIR}/cellweights

   # clean up:
   find ${IFSDATADIR}/cellweights -name "*.nc" -exec rm {} \;

   # Build a temporary shell script for CDO processing

cat > ${IFSDATADIR}/cellweights/create_cellweights << EOF
#!/bin/ksh
set -x
# cut path from file name
CW_FILE_OUT=\`echo \$1 | awk -F/ '{print \$NF}'\`
# process grid file:
echo "Processing \$1..."
# Note: We need a "cdo" here which has GRIB_API
#       support compiled in.
${CDOBIN} gencon,\$1 ${IFS_FILENAME} \${CW_FILE_OUT}
echo "done."
EOF

   chmod +x ${IFSDATADIR}/cellweights/create_cellweights

   find ${GRIDDIR} -name "*.nc" -exec ${IFSDATADIR}/cellweights/create_cellweights {} \;

   rm ${IFSDATADIR}/cellweights/create_cellweights
   touch "initialized.flag"
   cd ${IFSDATADIR}
fi


# Prepare IFS data for ICON -------------------
smsevent ifs2icon 

cd ${TMPDIR}
export INPUTFILE=${IFS_FILENAME}

   # Build a temporary shell script for IFS2ICON processing

cat > run_ifs2icon << EOF
#!/bin/ksh
set -x
# cut path from file name
GRIDFILENAME=\`echo \$1 | awk -F/ '{print \$NF}'\`
# do not process DOM00 (reduced radiation grid):
if [[ "\${GRIDFILENAME}" == *DOM00.nc ]]
then
  echo "Skipping reduced radiation grid \${GRIDFILENAME}"
else
    # set environment variables for Ruby script:
    export INPUTFILE=${IFS_FILENAME}
    export OUTPUTFILE=${IFSDATAOUTDIR}/ifs2icon_\${GRIDFILENAME}
    export GRIDFILE=${GRIDDIR}/\${GRIDFILENAME}
    export CELLWEIGHTFILE=${IFSDATADIR}/cellweights/\${GRIDFILENAME}
    # process grid file:
    echo "IFS2ICON: Processing \$1..."
    ${RUBYBIN} ${IFS2ICON} -c ${IFSCONFIGFILE}
fi
echo "done."
EOF

   chmod +x run_ifs2icon
   find ${GRIDDIR} -name "*.nc" -exec ./run_ifs2icon {} \;

   rm run_ifs2icon


# Rename the resulting files ------------------
# (otherwise ICON does not recognize them)

   # Build a temporary shell script

cat > do_rename << EOF
#!/bin/ksh
set -x
# cut path from file name
GRIDFILENAME=\`echo \$1 | awk -F/ '{print \$NF}'\`
# do not process DOM00 (reduced radiation grid):
if [[ "\${GRIDFILENAME}" == *DOM00.nc ]]
then
  echo "Skipping reduced radiation grid \${GRIDFILENAME}"
else
    # original name of IFS2ICON result
    IFS2ICONNAME="ifs2icon_\${GRIDFILENAME}"
    # generate new file name
    NEW_FILENAME=\`echo \${IFS2ICONNAME} | awk '{str=\$0;sub(/ifs2icon_icon/,"ifs2icon_",str);print str;}'\`
    # rename file
    mv ${IFSDATAOUTDIR}/\${IFS2ICONNAME} ${IFSDATAOUTDIR}/\${NEW_FILENAME}
    # give status output
    ${CDOBIN} infov ${IFSDATAOUTDIR}/\${NEW_FILENAME}
fi
EOF

   chmod +x do_rename
   find ${GRIDDIR} -name "*.nc" -exec do_rename {} \;

   rm do_rename



# -------------------------------------------------


# include the "tail" file for remote jobs
%include <end_job.h>

