#!/bin/ksh

%manual
  -------------------------------------------------
  DUMPSTATE.SMS
  -------------------------------------------------

  This script is part of the ICON SMS suite
  Initial implementation: F. Prill, DWD (2012-05-07)

  Corresponding author:
    Florian Prill, DWD, mailto:florian.prill@dwd.de

  Task objectives:
  - check for/create dump state (containing
    coefficient tables for ICON run)
%end

# include the header file for ICON jobs
%include <init_icon_job.h> 

# -------------------------------------------------

# *************************************************
stage=dump

# *************************************************

echo "DUMPSTATE.SMS"
set -x
module load python

# directory where the case setup is stored
SETDIRTMP=%SCTEMP%/%SUITE%/%EXPNUM%/output/setup
# ifsdir for IFS initial condition
ifsdir=%SCTEMP%/%SUITE%/%EXPNUM%/input/%YMD%%INIHOUR%
# base directory for external data
basedir=%SCPERM%
# base directory for model output
outbasedir=%SCTEMP%/%SUITE%/%EXPNUM%/output
# base name for output and namelist files
basename=%SUITE%_%EXPNUM%_%YMD%%INIHOUR%

# architecture (corresponds to build/<build architecture>/bin/...)
arch=powerpc-ibm-aix5.3.0.0  # compare with init_cp_binary.sms!

# -------------------------------------------------

export MP_WAIT_MODE=poll
export MP_LABELIO=yes
export MP_SHARED_MEMORY=yes
export MP_ADAPTER_USE=shared
export MP_INFOLEVEL=2
export XLFRTEOPTS=err_recovery=no

export ICON_THREADS=%ICONTHREADS%
export OMP_STACKSIZE=400M
export OMP_SCHEDULE="static"
export OMP_DYNAMIC="false"
export NC_BLOCKSIZE=128mb

export F_PROGINF=DETAIL

module unload netcdf
module load netcdf4/4.1.2


# -------------------------------------------------

# set the dump/restore flags according to the different phases.
if [ "${stage}" = "dump" ] ; then
    ldump_states=.TRUE.
    lrestore_states=.FALSE.
fi
if [ "${stage}" = "run" ] ; then
    ldump_states=.FALSE.
    lrestore_states=.TRUE.
fi
if [ "${stage}" = "total" ] ; then
    ldump_states=.FALSE.
    lrestore_states=.FALSE.
fi

# include experiment parameters
smsevent prepare

. ${SETDIRTMP}/case_setup

# copy binary and execute in parallel
smsevent create_dumpstate
cp -p ../setup/control_model ./icon.exe

echo "job::start"
date
./icon.exe
echo "job::end"
date




# ---------------------------------------------

# include the "tail" file for remote jobs
%include <end_job.h>

