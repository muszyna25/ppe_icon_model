#!/bin/ksh
%manual
  - plots for climate experiments
  - selects ensembles of runs initiated in same month
  - initiates plotting after first and last ensemble member
  - cycles over periods (e.g. months, seasons, years)
  - plots difference map against a control and observations,
    zonal means and winds against ERA40
  - plot_opt
    101 (e.g.)
    1  : single month means
     1 : seasons means
      1: whole experiment mean
%end

## include the standard header file
%include <init_ws_submit.h>

#==========================================================================

#metview=metview4_old
metview=metview4_new
#metview=metview4_dev

module swap grib_api grib_api/1.11.0

dwd_grib_api=/home/ms/de/dwd/grib_api
export GRIB_DEFINITION_PATH="${dwd_grib_api}/definitions.edzw-1.11.0-12:/usr/local/apps/grib_api/1.11.0/share/grib_api/definitions"


#-----------------------------------------------------------------------------
# directory

YYYYMM=`echo %YMD% | cut -c 1-6`
EXPDIR=%ECTEMP%/%SUITE%/%EXPNUM%/seasonal
mkdir -p ${EXPDIR}

export TMPDIR=${EXPDIR}
export PLOTDATA=${EXPDIR}
export ECDIR_SEAS="ec:icon/experiments/%SUITE%/%EXPNUM%/seasonal"
cd ${EXPDIR}


# base name for output and namelist files
basename=%SUITE%_%EXPNUM%_%YMD%%INIHOUR%

dirscripts=%ECPERM%/icon-dev/scripts/postprocessing/climplot
cp -f $dirscripts/climplot_batch .
chmod a+x climplot_batch
#cp $dirscripts/dates.met .
#chmod a+x dates.met
#cp $dirscripts/compvar_ens.met .
#chmod a+x compvar_ens.met 
#cp $dirscripts/ttest_thresh.f90 .
#cp $dirscripts/save_mean_diurnal_flux.met .
#cp $dirscripts/plot_amp_phase_clim.met .
#chmod a+x save_mean_diurnal_flux.met plot_amp_phase_clim.met
cp $dirscripts/*.f90 .
cp $dirscripts/*.met .
chmod a+x *.met
cp $dirscripts/zondia* .

######

#set a few variables to what we need
LEVELS=91
##INIDATE1=${INITIME}
#INIDATE1=2000102000/2000102200/2000102400

INIDATE1=%TIME_LIST%
BASETIME=%YMD%%INIHOUR%
FCLENGTH=%FCLENGTH%
PLOT_OPT=011
#-----------------------------------------------------------------------------
# setup

EXPVER=%SUITE%_%EXPNUM%
VERFEXP1=%SUITE%_%EXPNUM%
#VERFEXP2=%SUITE2%_%EXPNUM2%
VERFEXP2=fycq

exp=${EXPVER}
##  if [[ $FSFAMILY = "/climplot" ]] ; then
##    exp=${VERFEXP1:-${EXPVER}}
##    locfcrange=$FCRANGE
##    locnumber=$NUMBER
##    locclass1=$CLASS1
##    lclassan=$CLASS2
##  else
  locfcrange=-99
  locnumber=-99
  locclass1='rd'
  lclassan='ei'
##  fi
if [[ $lclassan != 'ei' ]] && [[ $lclassan != 'e4' ]];then
  print lclassan=$lclassan but must be e4 or ei
  print therefore it is put to default ei
  lclassan='ei'
fi

if [[ $VERFEXP2 = "0001" ]] ; then
  expver2=${exp}   # experiment ID2 - to compare
else
  expver2=${VERFEXP2} # experiment ID2 - to compare
fi

lclimatoplot=0
LCLIM=${LCLIM:-false}
if [[ $LCLIM = true ]] ; then
  lclimatoplot=1   # also plot against climatology
else
  lclimatoplot=0   # only plot for current year (period)
fi

# Plotting options: significance plotting, colour, titles, diurnal ccyle
#NCLIMPL=${NCLIMPL:-21110111}
NCLIMPL=${NCLIMPL:-21100111}
lsigt=$(    print $NCLIMPL| cut -c1 )
lcol=$(     print $NCLIMPL| cut -c2 )
lartic=$(   print $NCLIMPL| cut -c3 )
ldcycle=$(  print $NCLIMPL| cut -c4 )
lmldif=$(   print $NCLIMPL| cut -c5 )
lwavfreq=$( print $NCLIMPL| cut -c6 )
lzonnoml=$( print $NCLIMPL| cut -c7 )
lvdspect=$( print $NCLIMPL| cut -c8 )

integer i



INIDATE1=${INIDATE1}/9999                    # add dummy date
INIDATE1=`echo ${INIDATE1} | sed 's/\// /g'` # Replace / with space
set -A INIDATE1 ${INIDATE1}                  # turn into array


rcorioi=1.0
dayl=24

#  if [[ -f $SMSINCLUDE/ifsnam.fc.h && $FSFAMILY = /gfc ]] ; then
#     rco=$(grep RCORIOI= %SMSINCLUDE%/ifsnam.fc.h | sed 's/RCORIOI=//' |sed 's/.$//')
#     if [[ $rco > 0 ]]; then
#        rcorioi=$rco
#     fi
#  fi

#  dayl=$((dayl * rcorioi))
#  if [[ $dayl -lt 1 ]]; then
#        dayl=1
#  fi

##  if (( $BASETIME == ${INIDATE1[0]} )) ; then
##  #
##  # > 2 because of dummy date added.
##  #
##    if (( ${#INIDATE1[*]} > 2  )) ; then
##  
##      datestr=`echo ${INIDATE1[0]} | cut -c 1-8`
##      timestr=`echo ${INIDATE1[0]} | cut -c 9-10`
##  
##  # ---------------------------------------------------------------
##  # First guess plots: (after first simulation of each ensemble)
##  # ---------------------------------------------------------------
##  
###      PLOT_OPT=010
##  
##      nperiods=`$metview -b dates.met $FCLENGTH $datestr $PLOT_OPT $dayl | grep nmon | sed 's/nmon//' | sed 'y/[],/   /'`
##    # use env to reduce the number of environment variables from ~400 (SMS) to solve Magics plotting issues
##      if (( %PLOTPERIOD% <= ${nperiods} )) ; then
##      # env -i SCRATCH=$SCRATCH ECFS_SYS_PATH=$ECFS_SYS_PATH FSROOT=$FSROOT TMPDIR=$TMPDIR \
##      #  env  SCRATCH=$SCRATCH ECFS_SYS_PATH=$ECFS_SYS_PATH FSROOT=$FSROOT TMPDIR=$TMPDIR \
##      #         ARCH=$ARCH PATH=$PATH PLOTDATA=$PLOTDATA HOME=$HOME EMOSLIB="$EMOSLIB" \
##        env  SCRATCH=$SCRATCH  ECFS_SYS_PATH=$ECFS_SYS_PATH TMPDIR=$TMPDIR \
##               PATH=$PATH PLOTDATA=$PLOTDATA HOME=$HOME \
##               ./climplot_batch -a $exp -b $expver2 -c $locclass1 -l $LEVELS -f $FCLENGTH \
##                              -r $locfcrange -n $locnumber -d $datestr -p $PLOT_OPT  \
##                              -m $lclimatoplot -t %TASK% -x %PLOTPERIOD% -i $timestr -v $lclassan \
##                              -s $lsigt -o $lcol -y $lartic -z $ldcycle -e $lmldif -w $lwavfreq \
##                              -g $lvdspect -q $lzonnoml
##      fi
##  
##  
##  # -----------------------------------------------------------
##  
##    fi
##  fi


i=1
datestr=""
timestr=""
refdate=`echo ${INIDATE1[0]} | cut -c 1-6`

while (( ${i}+1 <= ${#INIDATE1[*]} )) ; do
  datestr=${datestr}"/"`echo ${INIDATE1[${i}-1]} | cut -c 1-8`
  timestr=${timestr}"/"`echo ${INIDATE1[${i}-1]} | cut -c 9-10`
  # NOTE: next date in list
  idate=`echo ${INIDATE1[${i}]} | cut -c 1-6`
  if (( idate != refdate )) ; then
    refdate=${idate}
    datestr=`echo $datestr | cut -c2-` # discard first hash
    timestr=`echo $timestr | cut -c2-` # discard first hash
    if (( $BASETIME == $INIDATE1[${i}-1] )) ; then


# -----------------------------------------------------------
# Final plots: (after last simulation of each ensemble)
# -----------------------------------------------------------

#FCLENGTH=3216    # forecast length in hours it is really 3168

###      PLOT_OPT=011
      nperiods=`$metview -b dates.met $FCLENGTH $datestr $PLOT_OPT $dayl | grep nmon | sed 's/nmon//' | sed 'y/[],/   /'`
    # use env to reduce the number of environment variables from ~400 (SMS) to solve Magics plotting issues
      if (( %PLOTPERIOD% <= ${nperiods} )) ; then
        env  SCRATCH=$SCRATCH  ECFS_SYS_PATH=$ECFS_SYS_PATH TMPDIR=$TMPDIR  \
               PATH=$PATH PLOTDATA=$PLOTDATA HOME=$HOME \
               ./climplot_batch -a $exp -b $expver2 -c $locclass1 -l $LEVELS -f $FCLENGTH \
                              -r $locfcrange -n $locnumber -d $datestr -p $PLOT_OPT \
                              -m $lclimatoplot -t %TASK% -x %PLOTPERIOD% -i $timestr -v $lclassan \
                              -s $lsigt -o $lcol -y $lartic -z $ldcycle -e $lmldif -w $lwavfreq \
                              -g $lvdspect -q $lzonnoml
    fi

# -----------------------------------------------------------

    fi
    datestr="" # reset the datestr
    timestr="" # reset the datestr
  fi
  i=i+1
done




# include the standard "tail" file
%include <end_ws.h>
