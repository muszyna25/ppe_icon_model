#!/bin/ksh

%manual
  -------------------------------------------------
  SEASONAL_MEAN.SMS
  ------------------------------------------------- 
  This script is part of the ICON SMS CLIM suite

 
  Task objectives:
  - seasonal means 
%end

# include the header file for ICON jobs
%include <init_job.h> 

# -------------------------------------------------


echo "SEASONAL_MEAN.SMS" 

module load python

module load cdo
module unload grib_api
module load grib_api/1.10.4



lsplitdata=1
lseasmean=0
lmonthmean=0
lcpdata=0
ldeldata=0
lseldate=0
lsel2D=0
lyearmean=0
case %SIMMODE% in
  1) lcpdata=1        # pre-operations     
     ldeldata=1  ;;
  2) lcpdata=0        # monthly mean 10day forecasts
     ldeldata=0  ;;
  3) lseasmean=1
     lmonthmean=0
     lyearmean=1
     lseldate=1
     lcpdata=1  
     ldeldata=1
     lsel2D=1    
     dout=5    ;     # 2 days output interval
esac
    # lsplitdata=0
    # lseasmean=0
    # lmonthmean=0
    # lyearmean=1
    # lseldate=0
    # lcpdata=1  
     ldeldata=0
    # lsel2D=0  

#-----------------------------------------------------------------------------
# directories

outdir=%SCTEMP%/%SUITE%/%EXPNUM%/output/%YMD%%INIHOUR%
gatedir=%ECTEMP%/%SUITE%/%EXPNUM%/%YMD%%INIHOUR%
ssh ecgb mkdir -p ${gatedir}
cd ${outdir}
ecfsdir="ec:icon/experiments/%SUITE%/%EXPNUM%/%YMD%%INIHOUR%"
emkdir -p $ecfsdir

# base name for output and namelist files
basename=%SUITE%_%EXPNUM%_%YMD%%INIHOUR%

#-----------------------------------------------------------------------------
# namelist and icon_rev.txt: copy to ecfs

if [[ -f   NAMELIST_${basename} ]] ; then
 ecp -o NAMELIST_${basename} $ecfsdir
else
 ecp  $ecfsdir/NAMELIST_${basename}  .
fi 
bindir=%SCTEMP%/%SUITE%/%EXPNUM%/output/bin
if [[ -f ${bindir}/icon_rev.txt ]] ; then
 ecp -o ${bindir}/icon_rev.txt $ecfsdir
else
 ecp ${ecfsdir}/icon_rev.txt ${bindir}
fi
#-----------------------------------------------------------------------------
# GRIB: copy to ecfs

for levtype in ML PL HL ; do
  if [[ -f   ${outdir}/${basename}_DOM01_${levtype}_0001.grb ]] ; then
   ecp -o ${outdir}/${basename}_DOM01_${levtype}_0001.grb $ecfsdir
   ls ${outdir}/${basename}_DOM01_${levtype}_0001.grb
  else
    ecp     $ecfsdir/${basename}_DOM01_${levtype}_0001.grb ${outdir}
  fi
done
#-----------------------------------------------------------------------------

#-----------------------------------------------------------------------------
# In all files, select the dates 

if [[ $lseldate = 1 ]] ; then

for levtype in ML PL HL ; do

 cdo seldate,%FDATE_S%,%LDATE_S% ${outdir}/${basename}_DOM01_${levtype}_0001.grb out.grb
 cp out.grb ${outdir}/${basename}_DOM01_${levtype}_0001.grb
 rm out.grb

done
fi
#-----------------------------------------------------------------------------
# In _ML_ file, select the 2D fields

if [[ $lsel2D = 1 ]] ; then

MLFILE=${basename}_DOM01_ML_0001.grb 
cdo selzaxis,surface           ${MLFILE}  ${MLFILE%%.grb}_sfc.grb 
cdo selzaxis,top_of_atmosphere ${MLFILE}  ${MLFILE%%.grb}_toa.grb 
cdo selzaxis,height            ${MLFILE}  ${MLFILE%%.grb}_height.grb
fi


#-----------------------------------------------------------------------------
dwd_grib_api=/home/ms/de/dwd/grib_api

  export GRIB_DEFINITION_PATH="/usr/local/lib/metaps/lib/grib_api/1.10.4/share/definitions:${dwd_grib_api}/definitions.edzw-1.9.16"

if [[ $lsplitdata = 1 ]] ; then

 dwd_grib_api=/home/ms/de/dwd/grib_api

 export GRIB_DEFINITION_PATH="/usr/local/lib/metaps/lib/grib_api/1.10.4/share/definitions:${dwd_grib_api}/definitions.edzw-1.9.16"
 mkdir -p grb_data
 rm -f grb_data/*
 grib_copy  ${basename}_DOM01_HL_0001.grb  \
        grb_data/${basename}_DOM01_0001_[shortName]_zl.grb 
 grib_copy  ${basename}_DOM01_PL_0001.grb  \
        grb_data/${basename}_DOM01_0001_[shortName]_[typeOfFirstFixedSurface].grb
 for lev2D in sfc toa height ; do
 grib_copy  ${basename}_DOM01_ML_0001_${lev2D}.grb  \
        grb_data/${basename}_DOM01_0001_[shortName]_[typeOfFirstFixedSurface].grb
 done

# fixes
  for levtype2 in sfc ml pl zl ; do
    for bad in unknown '~' ; do
      grib_copy grb_data/${basename}_DOM01_0001_${bad}_${levtype2}.grb \
                grb_data/${basename}_DOM01_0001_[discipline].[parameterCategory].[parameterNumber]_${levtype2}.grb || true
      \rm -rf   grb_data/${basename}_DOM01_0001_${bad}_${levtype2}.grb
    done
  done

fi
 # ls -l grb_data
#-----------------------------------------------------------------------------

if [[ $lsplitdata = 1 ]] ; then

# Split seasons and months
for file in `ls grb_data/*.grb`
do
 cdo splitseas ${file} ${file%%.grb}_S_
 cdo splitmon ${file} ${file%%.grb}_M_
done

 for sfile in `ls grb_data/*_S_*.g2`
 do
  mv ${sfile} ${sfile%%.g2}.grb
 done
 for mfile in `ls grb_data/*_M_*.g2`
 do
  #YEAR=`cdo showyear ${mfile}`
  #MONTH=`cdo showmon ${mfile}`
  mv ${mfile} ${mfile%%.g2}.grb
 done
fi
#-----------------------------------------------------------------------------
# Calculate seasonal means and standard deviation

if [[ $lseasmean = 1 ]] ; then
 rm -f grb_data/*_S_???_mean.grb
 rm -f grb_data/*_S_???_std.grb
 for sfile in `ls grb_data/*_S_???.grb`
 do
  NAME=`cdo showname ${sfile}`
  NAME=${NAME#" "}                   #remove the leading blank 
case $NAME in 
  tp|param76.1.0|param77.1.0|lssrwe|csrwe)
   nsteps=`cdo ntime ${sfile}`
   nintv=`expr ${nsteps}  \- 1 `
   numdays=`expr ${nintv}  \* ${dout}`
   cdo sub -seltimestep,$nsteps ${sfile} -seltimestep,1 ${sfile} out.grb
   cdo divc,${numdays} out.grb ${sfile%%.grb}_mean.grb
   rm out.grb
  ;;
  ttr|nswrf|ssr|str|sshf|slhf)
   nsteps=`cdo ntime ${sfile}`
   nintv=`expr ${nsteps}  \- 1 `
   numdays=`expr ${nintv}  \* ${dout}`
   numsec=`expr ${numdays}  \* 86400 `
   cdo sub -seltimestep,$nsteps ${sfile} -seltimestep,1 ${sfile} out.grb
   cdo divc,${numsec} out.grb ${sfile%%.grb}_mean.grb
   rm out.grb
  ;;
  *)
   cdo seasmean ${sfile} ${sfile%%.grb}_mean.grb
   cdo seasstd ${sfile} ${sfile%%.grb}_std.grb
  ;;
esac
 done

fi
#-----------------------------------------------------------------------------
# Calculate monthly means and standard deviation

if [[ $lmonthmean = 1 ]] ; then

 rm -f grb_data/*_M_??_mean.grb
 rm -f grb_data/*_M_??_std.grb
 for mfile in `ls grb_data/*_M_??.grb`
 do

  NAME=`cdo showname ${mfile}`
  NAME=${NAME#" "}                   #remove the leading blank
  case $NAME in 
  tp|param76.1.0|param77.1.0|lssrwe|csrwe)
   nsteps=`cdo ntime ${mfile}`
   nintv=`expr ${nsteps}  \- 1 `
   numdays=`expr ${nintv}  \* ${dout}`
   cdo sub -seltimestep,$nsteps ${mfile} -seltimestep,1 ${mfile} out.grb
   cdo divc,${numdays} out.grb  ${mfile%%.grb}_mean.grb
   rm out.grb
  ;;
  ttr|nswrf|ssr|str|sshf|slhf)
   nsteps=`cdo ntime ${mfile}`
   nintv=`expr ${nsteps}  \- 1 `
   numdays=`expr ${nintv}  \* ${dout}`
   numsec=`expr ${numdays}  \* 86400 `
   cdo sub -seltimestep,$nsteps ${mfile} -seltimestep,1 ${mfile} out.grb
   cdo divc,${numsec} out.grb ${mfile%%.grb}_mean.grb
   rm out.grb
  ;;

  *)
  cdo monmean ${mfile} ${mfile%%.grb}_mean.grb
  cdo monstd  ${mfile} ${mfile%%.grb}_std.grb
  esac
 done
fi
#-----------------------------------------------------------------------------
# Calculate monthly means and standard deviation

if [[ $lyearmean = 1 ]] ; then

 rm -f grb_data/*_Y_mean.grb
 rm -f grb_data/*_Y_std.grb
 for levt in sfc pl zl ; do
 for yfile in `ls grb_data/*_${levt}.grb`
 do

  NAME=`cdo showname ${yfile}`
  NAME=${NAME#" "}                   #remove the leading blank

  case $NAME in 
  tp|param76.1.0|param77.1.0|lssrwe|csrwe)
   nsteps=`cdo ntime ${yfile}`
   nintv=`expr ${nsteps}  \- 1 `
   numdays=`expr ${nintv}  \* ${dout}`
   cdo sub -seltimestep,$nsteps ${yfile} -seltimestep,1 ${yfile} out.grb
   cdo divc,${numdays} out.grb ${yfile%%.grb}_Y_mean.grb
   rm out.grb
  ;;
  ttr|nswrf|ssr|str|sshf|slhf)
   nsteps=`cdo ntime ${yfile}`
   nintv=`expr ${nsteps}  \- 1 `
   numdays=`expr ${nintv}  \* ${dout}`
   numsec=`expr ${numdays}  \* 86400 `
   cdo sub -seltimestep,$nsteps ${yfile} -seltimestep,1 ${yfile} out.grb
   cdo divc,${numsec} out.grb  ${yfile%%.grb}_Y_mean.grb
   rm out.grb
  ;;

  *)
  cdo fldmean ${yfile} ${yfile%%.grb}_Y_mean.grb
  cdo fldstd  ${yfile} ${yfile%%.grb}_Y_std.grb
  esac



 done
 done
fi
#-----------------------------------------------------------------------------

# Calculate monthly means and standard deviation
# move data to ecgate

if [[ $lcpdata = 1 ]] ; then
  ssh ecgb mkdir -p ${gatedir}/grb_data
  scp grb_data/* ecgb:${gatedir}/grb_data
fi

#-----------------------------------------------------------------------------
# delete data

if [[ $ldeldata = 1 ]] ; then
  \rm -rf grb_data 
  for levtype in ML PL HL ; do
    \rm -rf ${outdir}/${basename}_DOM01_${levtype}_0001.grb
  done
fi


# -------------------------------------------------
# include the "tail" file for remote jobs
%include <end_job.h>
