#!/bin/ksh

%manual
  -------------------------------------------------
  POST_PREPARE.SMS
  -------------------------------------------------

  This script is part of the ICON SMS suite
  Initial implementation: F. Prill, DWD (2012-05-07)

  Corresponding author:
    Florian Prill, DWD, mailto:florian.prill@dwd.de

  Task objectives:
  - extract output
  - generate plots 
%end

# include the header file for remote jobs
%include <init_sc.h>

# -------------------------------------------------

echo "POST_PREPARE.SMS" 

module load python
module load cdo/1.7.2

module unload eccodes
module load grib_api/1.14.5 

dwd_grib_api=/home/ms/de/dwd/grib_api
export GRIB_DEFINITION_PATH="/usr/local/apps/grib_api/1.14.5/CRAY/82/share/grib_api/definitions:${dwd_grib_api}/definitions.edzw-1.14.5"

lsplitdata=1
lcpdata=1 
ldeldata=1
lcatdata=0
lmeteo=1
levtypes="ML PL HL"

lreprocess=1           # after new model results reprocess - eithere in eom_prepare.sms or post_prepare.sms (normally)

case %SIMMODE% in
  1)              ;;  # pre-operations (use defaults)   
  2) lcpdata=0        # monthly mean 10day forecasts
     ldeldata=0  
     lcatdata=1
     levtypes="ML PL" ;;
  3) lsplitdata=0 ;;  # climate
  4) lsplitdata=0     # B-matrix 
     lcpdata=0        
     lmeteo=0        
     levtypes="ML" ;;
esac

###
#lsplitdata=0
#lcatdata=0
#lcpdata=1
###


#-----------------------------------------------------------------------------
# directories

outdir=%SCTEMP%/%SUITE%/%EXPNUM%/output/%YMD%%INIHOUR%
gatedir=%ECTEMP%/%SUITE%/%EXPNUM%/%YMD%%INIHOUR%
ssh ecgb mkdir -p ${gatedir}
cd ${outdir}
ecfsdir="ec:icon/experiments/%SUITE%/%EXPNUM%/%YMD%%INIHOUR%"
emkdir -p $ecfsdir

# base name for output and namelist files
basename=%SUITE%_%EXPNUM%_%YMD%%INIHOUR%


#-----------------------------------------------------------------------------
# namelist and icon_rev.txt: copy to ecfs

if [[ %NENS% -gt 0 ]] ; then
  for nmem in 001 002 003 004 005 006 007 008 009 010 ; do
    ecp -o     ${nmem}/NAMELIST_${basename}_${nmem} \
      $ecfsdir/${nmem}/NAMELIST_${basename}_${nmem}
  done
else
  ecp -o NAMELIST_${basename} $ecfsdir
fi
bindir=%SCTEMP%/%SUITE%/%EXPNUM%/output/bin
ecp -o ${bindir}/icon_rev.txt $ecfsdir


#-----------------------------------------------------------------------------
# ensemble mean for EPS run

if [[ %NENS% -gt 0 ]] ; then
  for levtype in ${levtypes} ; do
    \rm -f ${outdir}/${basename}_DOM01_${levtype}_0001.grb
    cdo -P 2 ensmean ${outdir}/001/${basename}_001_DOM01_${levtype}_0001.grb \
                     ${outdir}/002/${basename}_002_DOM01_${levtype}_0001.grb \
                     ${outdir}/003/${basename}_003_DOM01_${levtype}_0001.grb \
                     ${outdir}/004/${basename}_004_DOM01_${levtype}_0001.grb \
                     ${outdir}/005/${basename}_005_DOM01_${levtype}_0001.grb \
                     ${outdir}/006/${basename}_006_DOM01_${levtype}_0001.grb \
                     ${outdir}/007/${basename}_007_DOM01_${levtype}_0001.grb \
                     ${outdir}/008/${basename}_008_DOM01_${levtype}_0001.grb \
                     ${outdir}/009/${basename}_009_DOM01_${levtype}_0001.grb \
                     ${outdir}/010/${basename}_010_DOM01_${levtype}_0001.grb \
                     ${outdir}/${basename}_DOM01_${levtype}_0001.grb
  done
  if [[ $lmeteo = 1 ]] ; then
    \rm -f ${outdir}/METEOGRAM_patch001.nc
    cdo -P 2 ensmean ${outdir}/001/METEOGRAM_patch001.nc \
                     ${outdir}/002/METEOGRAM_patch001.nc \
                     ${outdir}/003/METEOGRAM_patch001.nc \
                     ${outdir}/004/METEOGRAM_patch001.nc \
                     ${outdir}/005/METEOGRAM_patch001.nc \
                     ${outdir}/006/METEOGRAM_patch001.nc \
                     ${outdir}/007/METEOGRAM_patch001.nc \
                     ${outdir}/008/METEOGRAM_patch001.nc \
                     ${outdir}/009/METEOGRAM_patch001.nc \
                     ${outdir}/010/METEOGRAM_patch001.nc \
                     ${outdir}/METEOGRAM_patch001.nc
  fi
fi


#-----------------------------------------------------------------------------
# meteogram: rename and copy to ecfs

if [[ $lmeteo = 1 ]] ; then
  outfile_mtg1=${outdir}/METEOGRAM_patch001.nc
  outfile_mtg2=${outdir}/${basename}_meteogram.nc
  mv  $outfile_mtg1 $outfile_mtg2 || true
  if [[ -f $outfile_mtg2 ]] ; then
    ecp -o $outfile_mtg2 $ecfsdir
  else
    ecp $ecfsdir/$outfile_mtg2 .
  fi
  if [[ $lcpdata = 1 ]] ; then
    scp $outfile_mtg2 ecgb:${gatedir}
  fi
  smsevent meteogram_data
fi


#-----------------------------------------------------------------------------
# GRIB: copy to ecfs
#   - accumulate files written to ECFS to copy all at the end for efficiency

if [[ %SIMMODE% != 3 ]] ; then
  for levtype in ${levtypes} ; do
    if [[ -f ${outdir}/${basename}_DOM01_${levtype}_0001.grb ]] ; then
      set -A ecp_files ${ecp_files[*]} ${outdir}/${basename}_DOM01_${levtype}_0001.grb
    else
      ecp     $ecfsdir/${basename}_DOM01_${levtype}_0001.grb ${outdir}
    fi
  done
else
  for levtype in ${levtypes} ; do
    if [[ -f ${outdir}/${basename}_DOM01_${levtype}_0001.nc ]] ; then
      set -A ecp_files ${ecp_files[*]} ${outdir}/${basename}_DOM01_${levtype}_0001.nc
    else
      ecp     $ecfsdir/${basename}_DOM01_${levtype}_0001.nc ${outdir}
    fi
  done
  for str in so1 so2 ; do
    if [[ -f ${outdir}/${basename}_${str}_DOM01_ML_0001.nc ]] ; then
      set -A ecp_files ${ecp_files[*]} ${outdir}/${basename}_${str}_DOM01_ML_0001.nc
    fi
  done
fi

if [[ -n ${ecp_files} ]] ; then
  ecp -o ${ecp_files[*]} $ecfsdir
fi

if [[ %NENS% -gt 0 ]] ; then
  for nmem in 001 002 003 004 005 006 007 008 009 010 ; do
    for levtype in ${levtypes} ; do
      if [[ -f ${outdir}/${nmem}/${basename}_${nmem}_DOM01_${levtype}_0001.grb ]] ; then
        ecp -o ${outdir}/${nmem}/${basename}_${nmem}_DOM01_${levtype}_0001.grb $ecfsdir/${nmem}
      else
        ecp     $ecfsdir/${nmem}/${basename}_${nmem}_DOM01_${levtype}_0001.grb ${outdir}
      fi
    done
  done
fi


#-----------------------------------------------------------------------------
#  split full model data files in one file per variable

if [[ $lsplitdata = 1 ]] ; then

  mkdir -p grb_data

  for levtype1 in ${levtypes} ; do

      if [[ ${levtype1} = 'HL' ]] ; then
        grib_copy  ${basename}_DOM01_HL_0001.grb  \
          grb_data/${basename}_DOM01_0001_[shortName]_zl.grb
      else
        grib_copy  ${basename}_DOM01_${levtype1}_0001.grb  \
          grb_data/${basename}_DOM01_0001_[shortName]_[typeOfFirstFixedSurface].grb
      fi

# HCC, MCC, LCC:
      if [[ ${levtype1} = 'ML' ]] ; then
        grib_copy grb_data/${basename}_DOM01_0001_unknown_pl.grb \
                  grb_data/${basename}_DOM01_0001_cc.[topLevel]_sfc.grb
        \rm -f    grb_data/${basename}_DOM01_0001_unknown_pl.grb
# change 150 to ml:
        for ml_file in grb_data/${basename}_DOM01_0001_*_150.grb ; do
          mv ${ml_file} `echo ${ml_file} | sed 's/150.grb/ml.grb/'`
        done
      fi

  done

# fixes
  for levtype2 in sfc ml pl zl 114; do    # 114: multi-level snow variables
    for bad in unknown '~' ; do
      grib_copy grb_data/${basename}_DOM01_0001_${bad}_${levtype2}.grb \
                grb_data/${basename}_DOM01_0001_[discipline].[parameterCategory].[parameterNumber]_${levtype2}.grb || true
      \rm -rf   grb_data/${basename}_DOM01_0001_${bad}_${levtype2}.grb
    done
  done

  ls -l grb_data

fi


#-----------------------------------------------------------------------------
# move data to ecgate
if [[ $lsplitdata = 1 ]] ; then

  if [[ $lcpdata = 1 ]] ; then
    ssh ecgb mkdir -p ${gatedir}/grb_data
    scp grb_data/* ecgb:${gatedir}/grb_data
    if [[ %SIMMODE% = 1 ]] ; then
      VERDATEHOUR=`python %SCBASEDIR%/gen/date_calc.py -a printdate -d %YMD%%INIHOUR% -s +1`
      gatedir_1=%ECTEMP%/%SUITE%/%EXPNUM%/${VERDATEHOUR}
      ssh ecgb mkdir -p ${gatedir_1}/grb_data
      ssh ecgb \cp -f ${gatedir}/grb_data/*.grb ${gatedir_1}/grb_data
    fi
  fi

fi

#-----------------------------------------------------------------------------
# delete data

if [[ $ldeldata = 1 ]] ; then
  \rm -rf grb_data 
  for levtype in ${levtypes} ; do
    \rm -rf ${outdir}/${basename}_DOM01_${levtype}_0001.grb
  done
fi


#-----------------------------------------------------------------------------
# pre-processing for eom_prepare - for speed
# split variable files in STEPs if variable file available -------------------

if [[ $lcatdata = 1 ]] ; then

  YYYYMM=`echo %YMD% | cut -c 1-6`
  basenameMM=%SUITE%_%EXPNUM%_${YYYYMM}

  mondir=%SCTEMP%/%SUITE%/%EXPNUM%/output/${YYYYMM}
  mkdir -p ${mondir}/tmp_dir

  varlist=`ls grb_data/${basename}_DOM01_0001_*.grb | \
      sed "s/grb_data\/${basename}_DOM01_0001_//"   | \
      sed "s/.grb//"`
  varlist=`echo $varlist | sed "s/h_ml//"`
  echo $varlist

  for var in $varlist ; do
    mkdir -p ${mondir}/tmp_dir
  
    if [[     -f           grb_data/${basename}_DOM01_0001_${var}.grb  ]] ; then
      if [[ ! -f  ${mondir}/tmp_dir/${basename}_DOM01_0001_${var}_48.grb  ||  $lreprocess = 1 ]] ; then
        grib_copy          grb_data/${basename}_DOM01_0001_${var}.grb            \
                                    ${basename}_DOM01_0001_${var}_[endStep].grb
        if [[ $ldeldata = 1 ]] ; then
          \rm -rf          grb_data/${basename}_DOM01_0001_${var}.grb
        fi
        for time in 0 24 48 72 96 120 144 168 192 216 240 ; do
          cp -f ${basename}_DOM01_0001_${var}_${time}.grb ${mondir}/tmp_dir
        done
        rm -f   ${basename}_DOM01_0001_${var}_*.grb
      fi
    fi 
    
  done

fi


# -------------------------------------------------
# include the "tail" file for remote jobs
%include <end_sc.h>
