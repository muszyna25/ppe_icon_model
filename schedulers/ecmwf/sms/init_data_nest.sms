#!/bin/ksh

%manual
  -------------------------------------------------
  INIT_DATA.SMS
  -------------------------------------------------

  This script is part of the ICON SMS suite
  Initial implementation: F. Prill, DWD (2012-05-07)
  2012-12-19: upgrade to prepicon instead of IFS2ICON (Martin Koehler)

  Corresponding author:
    Florian Prill, DWD, mailto:florian.prill@dwd.de

  Task objectives:
  - convert IFS data to ICON input
%end

# include the header file for remote jobs
%include <init_sc_model.h> 

# -------------------------------------------------


echo "INIT_DATA.SMS"


if [[ %NENS% -gt 0 ]]
  then DIRENS=/%NMEM%
  else DIRENS=''
fi
if [[ %NENS% -gt 0 ]]
  then TXTENS=_%NMEM%
  else TXTENS=''
fi


# grid directory
#GRIDDIR=%SCPERM%/icon_input/grids
GRIDDIR='/scratch/ms/de/dei2/icon_input/grids/pacific_-5-30N_100-160E'
# ifsdir for IFS initial condition
IFSDATADIR=%SCTEMP%/%SUITE%/%EXPNUM%/input/%YMD%%INIHOUR%${DIRENS}
# base directory for model output
outbasedir=%SCTEMP%/%SUITE%/%EXPNUM%/output
# base name for output and namelist files
basename=%SUITE%_%EXPNUM%_%YMD%%INIHOUR%${TXTENS}

mkdir -p ${IFSDATADIR}
cd ${IFSDATADIR}

# Important: ==================================
# export the DWD GRIB short names:
dwd_grib_api=/home/ms/de/dwd/grib_api
#dwd_grib_api=/home/ms/de/dei4
export GRIB_DEFINITION_PATH="${dwd_grib_api}/definitions.edzw-1.12.3:/usr/local/apps/grib_api/1.12.3/CRAY/82/share/grib_api/definitions"
# =============================================

IFS_FILENAME_GRB="ifs_oper_*_%YMD%%INIHOUR%.grb"
ifs_res=`ls ${IFS_FILENAME_GRB} | awk -F '_' '{print $3}'`
IFS_FILENAME_GRB="ifs_oper_${ifs_res}_%YMD%%INIHOUR%.grb"

for grid in R02B08_DOM01 R02B09_DOM02 R02B10_DOM03
#for grid in R03B07_DOM01 R03B08_DOM02
do

#IFS_FILENAME_NC="ifs2icon_%RES%_DOM01.nc"
#ICON_GRIDFILE="icon_grid_%RES%_G.nc"
#ln -sf ${GRIDDIR}/icon_grid_*_%RES%_G.nc ${ICON_GRIDFILE}

IFS_FILENAME_NC="ifs2icon_${grid}.nc"
ICON_GRIDFILE="icon${grid}.nc"
ln -sf ${GRIDDIR}/icon${grid}.nc ${ICON_GRIDFILE}


#set +x

# -------------------------------------------------


export MP_WAIT_MODE=poll
export MP_LABELIO=yes
export MP_SHARED_MEMORY=yes
export MP_ADAPTER_USE=shared
export MP_INFOLEVEL=2
export XLFRTEOPTS=err_recovery=no

export ICON_THREADS=%ICONTHREADS%
export OMP_NUM_THREADS=$EC_threads_per_task
export OMP_STACKSIZE=400M
export OMP_SCHEDULE="static"
export OMP_DYNAMIC="false"
export NC_BLOCKSIZE=128mb

export F_PROGINF=DETAIL

# -------------------------------------------------


# global timing
start_date="2008-09-01T00:00:00Z"
ndays_restart=60
dt_restart=`expr ${ndays_restart} \* 86400`

# the namelist filename
atmo_namelist=NAMELIST_${basename}


# ------------------------------
# write ICON namelist parameters
# ------------------------------

# For a complete list see Namelist_overview and Namelist_overview.pdf

cat > NAMELIST_PREPICON << EOF
! interpolation regular grid-> ICON
&remap_nml
 in_grid_filename  = "${IFS_FILENAME_GRB}"
 in_filename       = "${IFS_FILENAME_GRB}"
 in_type           = 1
 out_grid_filename = "${ICON_GRIDFILE}"
 out_filename      = "${IFS_FILENAME_NC}"	
 out_type          = 2
 s_maxsize         = 5000000
 l_have3dbuffer    = .false.
 out_filetype      = 4
! rbf_vec_scale     = 0.01
/
! DEFINITIONS FOR IFS INPUT DATA
!
&input_field_nml  ! temperature
 inputname      = "T"         
 outputname     = "T"          
 code           = 130          
!intp_method    = 3     
/
EOF
if [ %SIMMODE% -ne 3  ] ; then

cat >> NAMELIST_PREPICON << EOF
&input_field_nml  ! horiz. wind comp. u and v
 inputname      = "U", "V"         
 outputname     = "VN"  
/
EOF
else

cat >> NAMELIST_PREPICON << EOF
&input_field_nml  ! horiz. wind comp. u and v
 inputname      = "U"
 outputname     = "U"  
 code           = 131 
/
&input_field_nml  ! horiz. wind comp. u and v
 inputname      = "V"         
 outputname     = "V" 
 code           = 132  
/
EOF

fi

cat >> NAMELIST_PREPICON << EOF
&input_field_nml  ! vertical velocity
 inputname      = "OMEGA" 
 outputname     = "W"
 code           = 135
!intp_method    = 3     
/
&input_field_nml  ! surface pressure
 inputname      = "LNSP"
 outputname     = "LNPS" 
 code           = 152
!intp_method    = 3     
/
&input_field_nml  ! geopotential
 inputname      = "Z"
 outputname     = "GEOP_SFC"
 code           = 129
!intp_method    = 3     
/
&input_field_nml  ! geopotential
 inputname      = "FI"
 outputname     = "GEOP_ML"
 code           = 129
!intp_method    = 3     
/
&input_field_nml  ! specific humidity
 inputname      = "QV"
 outputname     = "QV" 
 code           = 133
!intp_method    = 3     
/
&input_field_nml  ! cloud liquid water content
 inputname      = "CLWC"
 outputname     = "QC" 
 code           = 246
!intp_method    = 3     
/
&input_field_nml  ! cloud ice content
 inputname      = "CIWC"
 outputname     = "QI" 
 code           = 247 
!intp_method    = 3     
/
&input_field_nml  ! ozone mixing ratio
 inputname      = "O3"
 outputname     = "O3" 
 code           = 203
!intp_method    = 3     
/
&input_field_nml  ! snow temperature
 inputname      = "TSN"
 outputname     = "T_SNOW" 
 code           = 238
!intp_method    = 3     
/
&input_field_nml  ! water content of snow
 inputname      = "SD"
 outputname     = "W_SNOW" 
 code           = 141
!intp_method    = 3     
/
&input_field_nml  ! density of snow
 inputname      = "RSN"
 outputname     = "RHO_SNOW" 
 code           = 33
!intp_method    = 3     
/
&input_field_nml  ! snow albedo
 inputname      = "ASN"
 outputname     = "ALB_SNOW" 
 code           = 32
!intp_method    = 3     
/
&input_field_nml  ! skin temperature
 inputname      = "SKT"
 outputname     = "SKT" 
 code           = 235
!intp_method    = 3     
/
&input_field_nml  ! sea surface temperature
 inputname      = "SST"
 outputname     = "SST" 
 code           = 34
!intp_method    = 3     
/
&input_field_nml  ! soil temperature level 1
 inputname      = "STL1"
 outputname     = "STL1" 
 code           = 139
!intp_method    = 3     
/
&input_field_nml  ! soil temperature level 2
 inputname      = "STL2"
 outputname     = "STL2" 
 code           = 170
!intp_method    = 3     
/
&input_field_nml  ! soil temperature level 3
 inputname      = "STL3"
 outputname     = "STL3" 
 code           = 183
!intp_method    = 3     
/
&input_field_nml  ! soil temperature level 4
 inputname      = "STL4"
 outputname     = "STL4" 
 code           = 236
!intp_method    = 3     
/
&input_field_nml  ! sea-ice cover
 inputname      = "CI"
 outputname     = "CI" 
 code           = 31
!intp_method    = 3     
/
&input_field_nml  ! water cont. of interception storage
 inputname      = "SRC"
 outputname     = "W_I" 
 code           = 198 
!intp_method    = 3     
/
&input_field_nml  ! surface roughness
 inputname      = "SR"
 outputname     = "Z0" 
 code           = 173
!intp_method    = 3     
/
&input_field_nml  ! Land/sea mask
 inputname      = "LSM"
 outputname     = "LSM" 
!intp_method    = 3     
 code           = 172 
/
&input_field_nml  ! soil moisture index layer 1
 inputname      = "SWVL1"
 outputname     = "SMIL1" 
 code           = 39
!intp_method    = 3     
/
&input_field_nml  ! soil moisture index layer 2
 inputname      = "SWVL2"
 outputname     = "SMIL2" 
 code           = 40
!intp_method    = 3     
/
&input_field_nml  ! soil moisture index layer 3
 inputname      = "SWVL3"
 outputname     = "SMIL3" 
 code           = 41
!intp_method    = 3     
/
&input_field_nml  ! soil moisture index layer 4
 inputname      = "SWVL4"
 outputname     = "SMIL4" 
 code           = 42
!intp_method    = 3     
/
EOF

# 80-83 changed to 39-42!!!
 
if [ %SIMMODE% -ne 3  -a  %YMD% -ge 20101109 ] ; then

cat >> NAMELIST_PREPICON << EOF
&input_field_nml  ! rain water content
 inputname      = "CRWC"
 outputname     = "QR" 
 code           = 75 
!intp_method    = 3     
/
&input_field_nml  ! snow water content
 inputname      = "CSWC"
 outputname     = "QS" 
 code           = 76
!intp_method    = 3     
/
EOF

fi

# -------------------------------------------------

IFSDATADIR2=%SCTEMP%/%SUITE%/%EXPNUM2%/input/%YMD%%INIHOUR%${DIRENS}

#rm -f ${IFSDATADIR2}/${IFS_FILENAME_NC} 
if [ -f ${IFSDATADIR2}/${IFS_FILENAME_NC}  -a  %EXPNUM% -ne %EXPNUM2% ] ; then
  echo 'ifs2icon file can be copied - no prepicon!'
  ls -l ${IFSDATADIR2}/${IFS_FILENAME_NC}
  sleep 120
  ls -l ${IFSDATADIR2}/${IFS_FILENAME_NC}
  cp    ${IFSDATADIR2}/${IFS_FILENAME_NC} .     # copy old ifs2icon file
else
  cp -p ${outbasedir}/bin/iconremap_mpi .
  export USE_SIGNAL_HANDLING=yes
# ./iconremap_mpi --remap_nml=NAMELIST_PREPICON -vv

# "aprun" command:
# -n xx   : number of MPI tasks
# -N xx   : number of MPI tasks/node
# -d  x   : number of threads/MPI task
# -j 2    : Hyperthreading enabled: 20 physical cores -> 40 "virtual" cores
# -m 3g   : 3G memory/task

 #aprun  -n 40 -N 10 -j 2 -d 4 -m 3g iconremap_mpi --remap_nml=NAMELIST_PREPICON -vv
 #aprun  -N $EC_tasks_per_node -n $EC_total_tasks -j $EC_hyperthreads iconremap_mpi --remap_nml=NAMELIST_PREPICON -vvv
  aprun -N $EC_tasks_per_node -n $EC_total_tasks -d $EC_threads_per_task -j $EC_hyperthreads iconremap_mpi --remap_nml=NAMELIST_PREPICON -vv

# fractional job: 
 #module load cray-snplauncher
 #mpiexec -n $EC_total_tasks iconremap_mpi --remap_nml=NAMELIST_PREPICON -vv

fi

ls -l ${IFS_FILENAME_NC}

# -------------------------------------------------

done

# include the "tail" file for remote jobs
%include <end_sc.h>
