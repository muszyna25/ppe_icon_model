#!/bin/ksh

%manual
  -------------------------------------------------
  INIT_BUILD.SMS
  -------------------------------------------------

  This script is part of the ICON SMS suite
  Initial implementation: F. Prill, DWD (2012-05-07)

  Corresponding author:
    Florian Prill, DWD, mailto:florian.prill@dwd.de

  Task objectives:
  - build ICON binary 
%end

# include the header file for remote jobs
%include <init_sc.h> 

# -------------------------------------------------

echo "INIT_BUILD.SMS"

# Change directory --------------------------------
cd %SCPERMIII%
ls -lrt
cd %DEIA_ICON_DIR%

# Compiler setup and configure --------------------

compiler='cray'    # 'cray' or 'gcc' or 'intel'

#arch=rs6000-ibm-aix
arch=x86_64-unknown-linux-gnu
#toolstag=tags/icontools-1.4.0       # recent tag - synchronize with init_cp_binary.sms!
#toolstag=trunk                      # alternative: choose trunk

case ${compiler} in
  cray)
    #---IBM
    #module swap fortran fortran/xlf/14.1.0.3
    
    #---CRAY 8.3.1
    export CRAY_ADD_RPATH=yes 
    module swap cce cce/8.4.5
   #module swap PrgEnv-cray PrgEnv-cray/5.1.29
    
   #module load subversion
    module unload eccodes
    module load grib_api/1.15.0
   #module swap grib_api grib_api/1.13.1
   #module load hdf5/1.8.13
   #module load netcdf4/4.3
   #module load netcdf
    module load cray-netcdf/4.4.0                 # netcdf4/4.3.2
    module load cray-hdf5/1.8.16                  # cray-hdf5/1.8.12, hdf5/1.8.13
    module load craype-hugepages2M                # better memory speed on broadwell CPU

    ./configure --with-fortran=cray  #--with-openmp     # --with-flags=hiopt
    ;;
  gcc)
    module swap PrgEnv-cray PrgEnv-gnu
    module load netcdf
    ./configure --with-fortran=gcc   --with-openmp
    ;;
  intel)
    module swap PrgEnv-cray PrgEnv-intel
    module load netcdf
    ./configure --with-fortran=intel --with-openmp 
esac

smsevent configure


# Submit ''Make'' ---------------------------------
gmake clean    # distclean
gmake -j%SCTOTALTASKS%
smsevent make

# ICON: store branch and revision number of successful compilation 
echo '--- ICON revision ---' > %SCPERMIII%/%DEIA_ICON_DIR%/build/${arch}/bin/icon_rev.txt
git status | grep -i branch >> %SCPERMIII%/%DEIA_ICON_DIR%/build/${arch}/bin/icon_rev.txt
git log -1 | cat            >> %SCPERMIII%/%DEIA_ICON_DIR%/build/${arch}/bin/icon_rev.txt


# Compile dwd_icon_tools for remap_mpi ------------
cd %SCPERMIII%/dwd_icon_tools
git pull --quiet
cd icontools

case ${compiler} in
  cray)
    module swap cce/8.4.1
   #module swap grib_api grib_api/1.12.3
    module swap grib_api grib_api/CY41R2.1
   #module unload cray-netcdf
    module swap netcdf4 netcdf4/4.3.0
    module unload cray-hdf5
    module load hdf5/1.8.13
   #module swap PrgEnv-cray/5.1.29
    gmake clean
    gmake cray_mpi             #-j%SCTOTALTASKS%   
    ;;
  intel)
    module swap PrgEnv-cray PrgEnv-intel
    gmake clean
    gmake
    ;;
esac

# DWD_ICON_TOOLS: store branch and revision number of successful compilation 
echo ''                       >> %SCPERMIII%/%DEIA_ICON_DIR%/build/${arch}/bin/icon_rev.txt
echo '--- icon_dwd_tools ---' >> %SCPERMIII%/%DEIA_ICON_DIR%/build/${arch}/bin/icon_rev.txt
git status | grep -i branch   >> %SCPERMIII%/%DEIA_ICON_DIR%/build/${arch}/bin/icon_rev.txt
git log -1 | cat              >> %SCPERMIII%/%DEIA_ICON_DIR%/build/${arch}/bin/icon_rev.txt


# -------------------------------------------------

# include the "tail" file for remote jobs
%include <end_sc.h>
