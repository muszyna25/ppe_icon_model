#!/bin/ksh

%manual
  -------------------------------------------------
  INIT_DATA.SMS
  -------------------------------------------------

  This script is part of the ICON SMS suite
  Initial implementation: F. Prill, DWD (2012-05-07)
  2012-12-19: upgrade to prepicon instead of IFS2ICON (Martin Koehler)

  Corresponding author:
    Florian Prill, DWD, mailto:florian.prill@dwd.de

  Task objectives:
  - convert IFS data to ICON input
%end

# include the header file for remote jobs
%include <init_job.h> 

# -------------------------------------------------


echo "INIT_DATA.SMS"


if [ %NENS% -gt 0 ]
  then DIRENS=/%NMEM%
  else DIRENS=''
fi
if [ %NENS% -gt 0 ]
  then TXTENS=_%NMEM%
  else TXTENS=''
fi

if [ %SIMMODE% -eq 3  -o  %YMD% -lt 20110518 ]
  then in_file_gribedition=1
  else in_file_gribedition=2
fi


# grid directory
GRIDDIR=%SCPERM%/icon_input/grids
# ifsdir for IFS initial condition
IFSDATADIR=%SCTEMP%/%SUITE%/%EXPNUM%/input/%YMD%%INIHOUR%${DIRENS}
# base directory for model output
outbasedir=%SCTEMP%/%SUITE%/%EXPNUM%/output
# base name for output and namelist files
basename=%SUITE%_%EXPNUM%_%YMD%%INIHOUR%${TXTENS}

mkdir -p ${IFSDATADIR}
cd ${IFSDATADIR}

# Important: ==================================
# export the DWD GRIB short names:
# export GRIB_DEFINITION_PATH="%SCSOFT%/software/grib_api/release/share-1.9.9/definitions.edzw:/usr/local/lib/metaps/lib/grib_api/1.9.9/share/definitions"
export GRIB_DEFINITION_PATH="%SCSOFT%/software/grib_api/release/share-1.9.9/definitions.edzw:/usr/local/lib/metaps/lib/grib_api/current/share/definitions"
# =============================================

IFS_FILENAME_GRB="ifs_oper_*_%YMD%%INIHOUR%.grb"
ifs_res=`ls ${IFS_FILENAME_GRB} | awk -F '_' '{print $3}'`
IFS_FILENAME_GRB="ifs_oper_${ifs_res}_%YMD%%INIHOUR%.grb"

IFS_FILENAME_NC="ifs2icon_%RES%_DOM01.nc"
ICON_GRIDFILE="icon%RES%_DOM01.nc"

ln -sf ${GRIDDIR}/${ICON_GRIDFILE} .

#set +x

# -------------------------------------------------


export MP_WAIT_MODE=poll
export MP_LABELIO=yes
export MP_SHARED_MEMORY=yes
export MP_ADAPTER_USE=shared
export MP_INFOLEVEL=2
export XLFRTEOPTS=err_recovery=no

export ICON_THREADS=%ICONTHREADS%
export OMP_STACKSIZE=400M
export OMP_SCHEDULE="static"
export OMP_DYNAMIC="false"
export NC_BLOCKSIZE=128mb

export F_PROGINF=DETAIL

# -------------------------------------------------


# global timing
start_date="2008-09-01T00:00:00Z"
ndays_restart=60
dt_restart=`expr ${ndays_restart} \* 86400`

# the namelist filename
atmo_namelist=NAMELIST_${basename}


# ---------------------------
# create ICON master namelist
# ---------------------------

# For a complete list see Namelist_overview and Namelist_overview.pdf

cat > icon_master.namelist << EOF
&master_nml
 lrestart                     = .FALSE.
/
&time_nml
 ini_datetime_string          = "$start_date"
 dt_restart                   = $dt_restart
/
&master_model_nml
  model_type                  = 1
  model_name                  = "ATMO"
  model_namelist_filename     = "$atmo_namelist"
  model_restart_info_filename = ""
  model_min_rank              = 1
  model_max_rank              = 65536
  model_inc_rank              = 1
/
EOF


# ------------------------------
# write ICON namelist parameters
# ------------------------------

# For a complete list see Namelist_overview and Namelist_overview.pdf

cat > NAMELIST_PREPICON << EOF
&parallel_nml
 nproma                       = 10
/
&prepicon_nml
 i_oper_mode                  = 4
/
! interpolation regular grid-> ICON
&remap_nml
 in_grid_filename             = "${IFS_FILENAME_GRB}"
 in_filename                  = "${IFS_FILENAME_GRB}"
 in_type                      = 1
 out_grid_filename            = "${ICON_GRIDFILE}"
 out_filename                 = "${IFS_FILENAME_NC}"	
 out_type                     = 2
 s_maxsize                    = 500000
 l_have3dbuffer               = .false.
 in_file_gribedition          = ${in_file_gribedition}
/
! DEFINITIONS FOR IFS INPUT DATA
!
&input_field_nml  ! temperature
 inputname      = "T"         
 outputname     = "T"          
 code           = 130          
 type_of_layer  = "hybridLayer" 
/
&input_field_nml  ! horiz. wind comp. u
 inputname      = "U"         
 outputname     = "U"
 code           = 131          
 type_of_layer  = "hybridLayer" 
/
&input_field_nml  ! horiz. wind comp. v
 inputname      = "V"         
 outputname     = "V"
 code           = 132          
 type_of_layer  = "hybridLayer" 
/
&input_field_nml  ! vertical velocity
 inputname      = "OMEGA" 
 outputname     = "W"
 code           = 135
 type_of_layer  = "hybridLayer" 
/
&input_field_nml  ! surface pressure
 inputname      = "LNSP"
 outputname     = "LNPS" 
 code           = 152
 type_of_layer  = "hybridLayer" 
/
&input_field_nml  ! geopotential
 inputname      = "Z"
 outputname     = "GEOP_SFC"
 code           = 129
 type_of_layer  = "surface"
/
&input_field_nml  ! geopotential
 inputname      = "FI"
 outputname     = "GEOP_ML"
 code           = 129
 type_of_layer  = "hybridLayer"
/
&input_field_nml  ! specific humidity
 inputname      = "QV"
 outputname     = "QV" 
 code           = 133
 type_of_layer  = "hybridLayer" 
/
&input_field_nml  ! cloud liquid water content
 inputname      = "CLWC"
 outputname     = "QC" 
 code           = 246
 type_of_layer  = "hybridLayer" 
/
&input_field_nml  ! cloud ice content
 inputname      = "CIWC"
 outputname     = "QI" 
 code           = 247 
 type_of_layer  = "hybridLayer" 
/
&input_field_nml  ! ozone mixing ratio
 inputname      = "O3"
 outputname     = "O3" 
 code           = 203
 type_of_layer  = "hybridLayer" 
/
&input_field_nml  ! snow temperature
 inputname      = "TSN"
 outputname     = "T_SNOW" 
 code           = 238
 type_of_layer  = "surface" 
/
&input_field_nml  ! water content of snow
 inputname      = "SD"
 outputname     = "W_SNOW" 
 code           = 141
 type_of_layer  = "surface" 
/
&input_field_nml  ! density of snow
 inputname      = "RSN"
 outputname     = "RHO_SNOW" 
 code           = 33
 type_of_layer  = "surface" 
/
&input_field_nml  ! snow albedo
 inputname      = "ASN"
 outputname     = "ALB_SNOW" 
 code           = 32
 type_of_layer  = "surface" 
/
&input_field_nml  ! skin temperature
 inputname      = "SKT"
 outputname     = "SKT" 
 code           = 235
 type_of_layer  = "surface" 
/
&input_field_nml  ! sea surface temperature
 inputname      = "SST"
 outputname     = "SST" 
 code           = 34
 type_of_layer  = "surface" 
/
&input_field_nml  ! soil temperature level 1
 inputname      = "STL1"
 outputname     = "STL1" 
 code           = 139
 type_of_layer  = "surface" 
/
&input_field_nml  ! soil temperature level 2
 inputname      = "STL2"
 outputname     = "STL2" 
 code           = 170
 type_of_layer  = "surface" 
/
&input_field_nml  ! soil temperature level 3
 inputname      = "STL3"
 outputname     = "STL3" 
 code           = 183
 type_of_layer  = "surface" 
/
&input_field_nml  ! soil temperature level 4
 inputname      = "STL4"
 outputname     = "STL4" 
 code           = 236
 type_of_layer  = "surface" 
/
&input_field_nml  ! sea-ice cover
 inputname      = "CI"
 outputname     = "CI" 
 code           = 31
 type_of_layer  = "surface" 
/
&input_field_nml  ! water cont. of interception storage
 inputname      = "SRC"
 outputname     = "W_I" 
 code           = 198 
 type_of_layer  = "surface" 
/
&input_field_nml  ! surface roughness
 inputname      = "SR"
 outputname     = "Z0" 
 code           = 173
 type_of_layer  = "surface" 
/
&input_field_nml  ! Land/sea mask
 inputname      = "LSM"
 outputname     = "LSM" 
 code           = 172 
 type_of_layer  = "surface" 
/
&input_field_nml  ! soil moisture index layer 1
 inputname      = "SWVL1"
 outputname     = "SMIL1" 
 code           = 39
 type_of_layer  = "surface" 
/
&input_field_nml  ! soil moisture index layer 2
 inputname      = "SWVL2"
 outputname     = "SMIL2" 
 code           = 40
 type_of_layer  = "surface" 
/
&input_field_nml  ! soil moisture index layer 3
 inputname      = "SWVL3"
 outputname     = "SMIL3" 
 code           = 41
 type_of_layer  = "surface" 
/
&input_field_nml  ! soil moisture index layer 4
 inputname      = "SWVL4"
 outputname     = "SMIL4" 
 code           = 42
 type_of_layer  = "surface" 
/
EOF

# 80-83 changed to 39-42!!!
 
if [ %SIMMODE% -ne 3  -a  %YMD% -ge 20101109 ] ; then

cat >> NAMELIST_PREPICON << EOF
&input_field_nml  ! rain water content
 inputname      = "CRWC"
 outputname     = "QR" 
 code           = 75 
 type_of_layer  = "hybridLayer" 
/
&input_field_nml  ! snow water content
 inputname      = "CSWC"
 outputname     = "QS" 
 code           = 76
 type_of_layer  = "hybridLayer" 
/
EOF

fi

# -------------------------------------------------

IFSDATADIR2=%SCTEMP%/%SUITE%/%EXPNUM2%/input/%YMD%%INIHOUR%${DIRENS}

if [ -f ${IFSDATADIR2}/${IFS_FILENAME_NC} ] ; then
  echo 'ifs2icon file can be copied - no prepicon!'
  ls -l ${IFSDATADIR2}/${IFS_FILENAME_NC}
  sleep 120
  ls -l ${IFSDATADIR2}/${IFS_FILENAME_NC}
  if [ %EXPNUM% -ne %EXPNUM2% ] ; then
   cp    ${IFSDATADIR2}/${IFS_FILENAME_NC} .     # copy old ifs2icon file
  fi
else
  cp -p ${outbasedir}/bin/prep_icon ./prep_icon
  export USE_SIGNAL_HANDLING=yes
  ./prep_icon
fi

ls -l ${IFS_FILENAME_NC}

# -------------------------------------------------


# include the "tail" file for remote jobs
%include <end_job.h>

