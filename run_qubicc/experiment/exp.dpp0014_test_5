#--------------------------------------------------------------------------------------------------
#
# MPI-AES Dyamond-Winter experiment
#
author_list="Monika Esch, Rene Redler, Daniel Klocke"
#
# Modified by Marco Giorgetta to be used as a test case on Daint-GPU
# - 1 month only
# - monthly mean SST and SIC files instead of the 6-hr file
# - output reduced to atm_2d and atm_3d files
# - daily restart files, monthly restart
# - used RTE-RRTMGP instead of PSRAD
# - without aerosols, because this cannot be used yet in RTE-RRTMGP
#
# - use the 191 level grid of qubicc instead of the 90 level grid of dyamond
# - namelists for the model configuration are adjusted to those of the hc11 experiment
# - script variables and formatting are adjusted to those of the hc11 experiment
#
# Setup on Daint:
# - 967 nodes = 960 comp. nodes + 7 ouput nodes
# - 1 task/node
# - nproma = 23332
#
#--------------------------------------------------------------------------------------------------
#
# This file describes the experiment based on the non-hydrostatic atmosphere and the
# Sapphire physics. The experiment is intialized from IFS analysis files and uses transient
# boundary conditions for:
# - SST and sea ice
# - spectral solar irradiation
# - well mixed greenhouse gases CO2, CH4, N2O, CFCs
# - O3 concentration
#
# Aerosols are neglected for now
#
#--------------------------------------------------------------------------------------------------

# (1) Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory of the ICON repository, where bin/ and run/ exist
# icon_data_rootFolder          = root directory for ICON grids, initial and boundary conditions. 
# nproma                        = blocking length for array dimensioning and inner loop lengths

#--------------------------------------------------------------------------------------------------

# (2) Set variables

# horizontal grid for global domain
atm_grid_id=0015
atm_grid_refinement=R02B09
atm_grid_label=G
atm_grid_file=icon_grid_${atm_grid_id}_${atm_grid_refinement}_${atm_grid_label}.nc

# start and end date+time
start_date="2020-01-20T00:00:00Z"
  end_date="2020-02-20T00:00:00Z"

# restart intervals
checkpoint_interval="P1D"
   restart_interval="P1M"

# output intervals
atm_output_interval="PT6H"
  atm_file_interval="PT6H"

# namelist files
atmo_namelist=NAMELIST_${EXPNAME}_atm
 lnd_namelist=NAMELIST_${EXPNAME}_lnd

# JSBACH variables
run_jsbach=yes
jsbach_usecase=jsbach_lite    # jsbach_lite or jsbach_pfts
jsbach_with_lakes=yes
jsbach_with_hd=no
jsbach_with_carbon=no         # yes needs jsbach_pfts usecase
jsbach_check_wbal=no          # check water balance

# surface variables
ljsbach=$([ "${run_jsbach:=no}" == yes ] && echo .TRUE. || echo .FALSE. )
llake=$([ "${jsbach_with_lakes:=yes}" == yes ] && echo .TRUE. || echo .FALSE. )
lcarbon=$([ "${jsbach_with_carbon:=yes}" == yes ] && echo .TRUE. || echo .FALSE. )
#
if [[ $jsbach_usecase == *pfts* ]]
then
  pft_file_tag="11pfts_"
else
  pft_file_tag=""
fi

#--------------------------------------------------------------------------------------------------

# (3) Define the model configuration

# atmospheric dynamics and physics
# --------------------------------

htop_cloudy=22500. # [m] top height for processing cloud condensates

cat > ${atmo_namelist} << EOF
!
&parallel_nml
 nproma             = ${nproma}
 num_io_procs       = 7
 io_proc_chunk_size = 16
/
&grid_nml
 dynamics_grid_filename = "${atm_grid_file}",
/
&run_nml
 num_lev          = 191         ! number of full levels
 modelTimeStep    = "PT40S"
 ltestcase        = .FALSE.     ! run testcase
 ldynamics        = .TRUE.      ! dynamics
 ltransport       = .TRUE.      ! transport
 iforcing         = 2           ! 0: none, 1: HS, 2: ECHAM, 3: NWP
 output           = 'nml'
 msg_level        = 15          ! level of details report during integration 
 restart_filename = "${EXPNAME}_restart_atm_<rsttime>.mfr"
 activate_sync_timers = .TRUE.
/
&extpar_nml
 itopo            = 1           ! 1: read topography from the grid file
 itype_lwemiss    = 0
/
&initicon_nml
 init_mode        = 2           ! 2: initialize from IFS analysis
 ifs2icon_filename= "ifs2icon.nc"
/
&nonhydrostatic_nml
 ndyn_substeps    = 5           ! dtime/dt_dyn
 damp_height      = 50000.      ! [m]
 rayleigh_coeff   = 5.0
 vwind_offctr     = 0.2
 divdamp_order    = 24
 divdamp_type     = 32
 divdamp_fac      = 0.004
 thslp_zdiffu     = 0.02
 thhgtd_zdiffu    = 125.
 htop_moist_proc  = ${htop_cloudy}
 hbot_qvsubstep   = ${htop_cloudy}
/
&sleve_nml
 min_lay_thckn    = 40.         ! [m]
 top_height       = 83000.      ! [m]
 stretch_fac      = 0.9
 decay_scale_1    = 4000.       ! [m]
 decay_scale_2    = 2500.       ! [m]
 decay_exp        = 1.2
 flat_height      = ${htop_cloudy}
/
&diffusion_nml
 hdiff_efdt_ratio = 24.0        ! change from default 36.0 to 24.0
 hdiff_smag_fac   = 0.025       ! change from default 0.015 to 0.025
/
&transport_nml
 tracer_names     = 'hus','clw','cli', 'qr', 'qs', 'qg'
 ivadv_tracer     =    3 ,   3 ,   3 ,   3 ,   3 ,   3
 itype_hlimit     =    3 ,   4 ,   4 ,   4 ,   4 ,   4
 ihadv_tracer     =   22 ,   2 ,   2 ,   2 ,   2 ,   2
/
&echam_phy_nml
!
! domain 1
! --------
!
! atmospheric physics (""=off)
 echam_phy_config(1)%dt_rad = "PT12M"
 echam_phy_config(1)%dt_vdf = "PT40S"
 echam_phy_config(1)%dt_mig = "PT40S"
!
! surface (.TRUE. or .FALSE.)
 echam_phy_config(1)%ljsb   = ${ljsbach}
 echam_phy_config(1)%lamip  = .TRUE.
 echam_phy_config(1)%lice   = .TRUE.
 echam_phy_config(1)%lmlo   = .FALSE.
 echam_phy_config(1)%llake  = ${llake}
!
! top height for cloud processes
 echam_phy_config(1)%zmaxcloudy = ${htop_cloudy}
!
! fix negative humidity
 echam_phy_config(1)%iqneg_d2p  = 2     ! after dynamics: set neg. humidity to 0
 echam_phy_config(1)%iqneg_p2d  = 2     ! after physics : set neg. humidity to 0
/
&echam_cov_nml
 echam_cov_config(1)%icov       = 3     ! 0/1 scheme based on cloud condensate
 echam_cov_config(1)%cqx        = 1.e-6
/
&echam_cop_nml
 echam_cop_config(1)%cn1lnd     =  50.0
 echam_cop_config(1)%cn2lnd     = 220.0
 echam_cop_config(1)%cn1sea     =  50.0
 echam_cop_config(1)%cn2sea     = 100.0
 echam_cop_config(1)%cinhomi    =   1.0
 echam_cop_config(1)%cinhoml1   =   1.0
 echam_cop_config(1)%cinhoml2   =   1.0
 echam_cop_config(1)%cinhoml3   =   1.0
/
&echam_rad_nml
!
! domain 1
! --------
!
 echam_rad_config(1)%isolrad    =  1
 echam_rad_config(1)%irad_h2o   =  1
 echam_rad_config(1)%irad_co2   =  3
 echam_rad_config(1)%irad_ch4   =  13
 echam_rad_config(1)%irad_n2o   =  13
 echam_rad_config(1)%irad_o3    =  5
 echam_rad_config(1)%irad_o2    =  2
 echam_rad_config(1)%irad_cfc11 =  3
 echam_rad_config(1)%irad_cfc12 =  3
 echam_rad_config(1)%irad_aero  =  0
 echam_rad_config(1)%rrtmgp_columns_chunk = 100
/
&echam_vdf_nml
 echam_vdf_config(1)%pr0        =  0.7
/
&echam_mig_nml
 echam_mig_config(1)%mu_rain        = 0.5
 echam_mig_config(1)%rain_n0_factor = 0.1
 echam_mig_config(1)%v0snow         = 25.
/
&sea_ice_nml
/
EOF

# land surface and soil
# ---------------------
cat > ${lnd_namelist} << EOF
&jsb_model_nml
  usecase         = "${jsbach_usecase}"
  use_lakes       = ${llake}
  fract_filename  = 'bc_land_frac.nc'
/
&jsb_seb_nml
  bc_filename     = 'bc_land_phys.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_rad_nml
  use_alb_veg_simple = .TRUE.           ! Use TRUE for jsbach_lite, FALSE for jsbach_pfts
  bc_filename     = 'bc_land_phys.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_turb_nml
  bc_filename     = 'bc_land_phys.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_sse_nml
  l_heat_cap_map  = .FALSE.
  l_heat_cond_map = .FALSE.
  l_heat_cap_dyn  = .FALSE.
  l_heat_cond_dyn = .FALSE.
  l_snow          = .TRUE.
  l_dynsnow       = .TRUE.
  l_freeze        = .TRUE.
  l_supercool     = .TRUE.
  bc_filename     = 'bc_land_soil.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_hydro_nml
  l_organic       = .FALSE.
  bc_filename     = 'bc_land_soil.nc'
  ic_filename     = 'ic_land_soil.nc'
  bc_sso_filename = 'bc_land_sso.nc'
/
&jsb_assimi_nml
  active          = .FALSE.             ! Use FALSE for jsbach_lite, TRUE for jsbach_pfts
/
&jsb_pheno_nml
  scheme          = 'climatology'       ! scheme = logrop / climatology; use climatology for jsbach_lite
  bc_filename     = 'bc_land_phys.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_carbon_nml
  active                 = ${lcarbon}
  bc_filename            = 'bc_land_carbon.nc'
  ic_filename            = 'ic_land_carbon.nc'
  read_cpools            = .FALSE.
  !fire_frac_wood_2_atmos = 0.2
/
&jsb_fuel_nml
  active                 = ${lcarbon}
  fuel_algorithm         = 1
/
&jsb_disturb_nml
  active                  = .FALSE.
  ic_filename             = 'ic_land_soil.nc'
  bc_filename             = 'bc_land_phys.nc'
  fire_algorithm          = 1
  windbreak_algorithm     = 1
  lburn_pasture           = .FALSE.
  !fire_litter_threshold  = 16.67
  !fire_rel_hum_threshold = 70.0
  !fire_minimum_woody     = 0.002
  !fire_minimum_grass     = 0.006
  !fire_tau_woody         = 6.0
  !fire_tau_grass         = 2.0
  !wnd_threshold          = 2.25
  !wnd_damage_scale       = 5.e-03
/
EOF

#--------------------------------------------------------------------------------------------------

# (4) Define the input

# model files
#
add_link_file ${basedir}/data/rrtmgp-data-lw-g256-2018-12-04.nc         ./coefficients_lw.nc
add_link_file ${basedir}/data/rrtmgp-data-sw-g224-2018-12-04.nc         ./coefficients_sw.nc
add_link_file ${basedir}/data/ECHAM6_CldOptProps_rrtmgp_lw.nc           ./rrtmgp-cloud-optics-coeffs-lw.nc
add_link_file ${basedir}/data/ECHAM6_CldOptProps_rrtmgp_sw.nc           ./rrtmgp-cloud-optics-coeffs-sw.nc

# namelist files
#
add_required_file ${basedir}/run/${atmo_namelist}                       ./
add_required_file ${basedir}/run/${lnd_namelist}                        ./

# dictionary file for output variable names
#
dict_file=dict.iconam.mpim
add_required_file ${basedir}/run/${dict_file}                           ./

# atmosphere grid
#
datadir=${icon_data_rootFolder}/grids/public/mpim/${atm_grid_id}
add_required_file ${datadir}/${atm_grid_file}                           ./

# initial conditions
#
# - atmosphere: ECMWF analysis for ${start_date}
inidate=${start_date%T*} # remove time of day
inidate=${inidate//-}    # short format: yyyy-mm-dd -> yyyymmdd
inidate=${inidate}00     # add hour
inifile=ifs2icon_${inidate}_${atm_grid_refinement}_${atm_grid_label}.nc
datadir=${icon_data_rootFolder}/dyamond-winter/grids/private/rene/mpim/${atm_grid_id}/initial_condition
add_link_file ${datadir}/${inifile}                                     ./ifs2icon.nc
#
# - land: source?, date+time?
datadir=${icon_data_rootFolder}/dyamond-winter/grids/private/rene/mpim/${atm_grid_id}/land
add_link_file ${datadir}/ic_land_soil_1992.nc                           ./ic_land_soil.nc

# boundary conditions
#
# range of years for yearly files
# assume start_date and end_date have the format yyyy-...
start_year=$(( ${start_date%%-*} - 1 ))
end_year=$(( ${end_date%%-*} + 1 ))
#
# - well mixed greenhouse gases
datadir=${icon_data_rootFolder}/dyamond-winter/grids/private/rene/mpim/independent/greenhouse_gases
add_link_file $datadir/greenhouse_ssp245.nc                             ./bc_greenhouse_gases.nc
#
# - ozone
datadir=${icon_data_rootFolder}/dyamond-winter/grids/private/rene/mpim/${atm_grid_id}/ozone
year=$start_year
while [[ $year -le $end_year ]]
do
  if [[ $year -le 2014 ]]
  then
    yyyy=$year
  else
    yyyy=2014
  fi
  add_link_file $datadir/bc_ozone_historical_${yyyy}.nc                 ./bc_ozone_${year}.nc
  (( year = year+1 ))
done
#
# - ssi and tsi
datadir=${icon_data_rootFolder}/dyamond-winter/grids/private/rene/mpim/independent/solar_radiation/3.2
add_link_file $datadir/swflux_14band_cmip6_1850-2299-v3.2.nc            ./bc_solar_irradiance_sw_b14.nc
#
# - sst and seasic
datadir=${icon_data_rootFolder}/dyamond-winter/grids/private/rene/mpim/${atm_grid_id}/sst_and_seaice
add_link_file $datadir/bc_sic_2020.nc                                   ./bc_sic.nc
add_link_file $datadir/bc_sst_2020.nc                                   ./bc_sst.nc
#
# - topography and sso parameters
datadir=${icon_data_rootFolder}/dyamond-winter/grids/private/rene/mpim/${atm_grid_id}/land
add_link_file $datadir/bc_land_sso_1992.nc                              ./bc_land_sso.nc
#
# - land parameters
datadir=${icon_data_rootFolder}/dyamond-winter/grids/private/rene/mpim/${atm_grid_id}/land
add_link_file $datadir/bc_land_frac_${pft_file_tag}1992.nc              ./bc_land_frac.nc
add_link_file $datadir/bc_land_phys_1992.nc                             ./bc_land_phys.nc
add_link_file $datadir/bc_land_soil_1992.nc                             ./bc_land_soil.nc
#
# - lctlib file for JSBACH
add_link_file ${basedir}/externals/jsbach/data/lctlib_nlct21.def        ./lctlib_nlct21.def

#--------------------------------------------------------------------------------------------------

# (5) Define the output

# Parameters for all output files
# -------------------------------
cat >> ${atmo_namelist} << EOF
&io_nml
 output_nml_dict  = "${dict_file}"
 netcdf_dict      = "${dict_file}"
 itype_pres_msl   = 4
 restart_file_type= 5
 restart_write_mode = "joint procs multifile"
/
EOF

# Define output files
# -------------------
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>
#
output_atm_vgrid=no                # produces 1 atm file 
output_atm_3d=yes                  # produces 6 atm file 
output_atm_2d=yes                  # produces 1 atm file 
output_phy_3d=no                   # produces 1 atm file
output_lnd=no                      # produces 1 lnd file
#
# 3-dimensional files include 'ps' and 'pfull' to allow the vertical
# interpolation to pressure levels by cdo ap2pl.
#
if [[ "$output_atm_vgrid" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_vgrid"
 filename_format  = "<output_filename>_<levtype_l>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"               ! output_start = output_end
 output_end       = "${start_date}"               ! --> write once only irrespective of
 output_interval  = "${atm_output_interval}"      !     the output interval and
 file_interval    = "${atm_file_interval}"        !     the file interval
 ml_varlist       = 'zghalf'  , 'zg'      , 'dzghalf'
/
EOF
fi


if [[ "$output_atm_3d" == "yes" ]]; then
  #
  # split file in high number of files for speedup
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_3d_1"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'pfull'   ,'ta'
/
&output_nml
 output_filename  = "${EXPNAME}_atm_3d_2"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ua'      , 'va'
/
&output_nml
 output_filename  = "${EXPNAME}_atm_3d_3"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'wap'     , 'cl'
/
&output_nml
 output_filename  = "${EXPNAME}_atm_3d_4"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'hus'     , 'clw'
/
&output_nml
 output_filename  = "${EXPNAME}_atm_3d_5"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'cli'
/
&output_nml
 output_filename  = "${EXPNAME}_atm_3d_6"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'rsd'     , 'rsu'
/
EOF
fi


if [[ "$output_atm_2d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'      , 'psl'     ,
                    'rsdt'    ,
                    'rsut'    , 'rsutcs'  , 'rlut'    , 'rlutcs'  ,
                    'rsds'    , 'rsdscs'  , 'rlds'    , 'rldscs'  ,
                    'rsus'    , 'rsuscs'  , 'rlus'    ,
                    'ts'      ,
                    'sic'     , 'sit'     ,
                    'clt'     ,
                    'prlr'    , 'prls'    ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'qgvi'    , 'qrvi'    , 'qsvi'    ,
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'tauu'    , 'tauv'    ,
                    'sfcwind' , 'uas'     , 'vas'     ,
                    'tas'
/
EOF
fi


if [[ "$output_phy_3d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_phy_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'           , 'pfull'        ,
                    'tend_ta'      , 'tend_qhus'    ,
                    'tend_ta_dyn'  , 'tend_qhus_dyn',
                    'tend_ta_phy'  , 'tend_qhus_phy',
                    'tend_ta_rlw'  , 'tend_ta_rsw'  ,
                    'tend_ta_vdf'  , 'tend_qhus_vdf',
                    'tend_ta_mig'  , 'tend_qhus_mig',
                    'tend_qclw_mig', 'tend_qcli_mig',
                    'tend_qqr_mig' , 'tend_qqs_mig' , 'tend_qqg_mig'
/
EOF
fi


# minimal jsbach output for running atm_amip experiment
# for more jsbach output see exp.atm_amip_les
#
if [[ "$output_lnd" == "yes" ]]; then
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_lnd"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'pheno_lai_box'             , 'pheno_fract_fpc_veg'  , 'hydro_fract_water_box' ,
                    'hydro_fract_snow_box'      , 'hydro_w_skin_box'     , 'hydro_w_snow_box'      ,
                    'hydro_w_soil_column_box'   ,
                    'hydro_runoff_box'          , 'hydro_drainage_box'   ,
                    'hydro_discharge_ocean_box' , 'hydro_discharge_box' 
/
EOF
fi

#--------------------------------------------------------------------------------------------------
