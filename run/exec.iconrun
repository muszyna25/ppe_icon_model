#!/bin/ksh
#=============================================================================
#
# This section of the run script prepares and starts the model integration. 
#
# bindir and START must be defined as environment variables or
# they must be substituted with appropriate values.
#
# Marco Giorgetta, MPI-M, 2010-04-21
#
#-----------------------------------------------------------------------------
#
# directories definition
#
DIR=$(pwd -P)
ICONDIR=${DIR%/*}
HGRIDDIR=${ICONDIR}/grids
EXPDIR=${ICONDIR}/experiments/${EXPNAME}
# data directories
DATADIR=${ICONDIR}/data
#-----------------------------------------------------------------------------
#
# experiment directory, with plenty of space, create if new
#
if [ ! -d ${EXPDIR} ]; then
  mkdir -p ${EXPDIR}
fi
#
ls -ld ${EXPDIR}
if [ ! -d ${EXPDIR} ]; then
    mkdir ${EXPDIR}
#else
#   rm -rf ${EXPDIR}
#   mkdir  ${EXPDIR}
fi
ls -ld ${EXPDIR}
check_error $? "${EXPDIR} does not exist?"

#-----------------------------------------------------------------------------
#
# get grid files
#
atmo_grids="${atmo_dyn_grids} ${atmo_rad_grids}"
all_grids="${atmo_grids} ${ocean_grids}"
for gridfile in ${all_grids}; do
  ls -l ${HGRIDDIR}/$gridfile
  check_error $? "${HGRIDDIR}/$gridfile does not exist."
  rm ${EXPDIR}/$gridfile
  ln -s ${HGRIDDIR}/${gridfile} ${EXPDIR}/${gridfile}  
done

#-----------------------------------------------------------------------------
case ${model_equations} in
    0 | 1 | 2 )
        # shallow water | hydrost. atm. T| hydrost. atm. theta dp 
        # =======================================================
        #
        # model constants
        # ---------------
        cp -f ${DATADIR}/rrtmg_lw.nc           ${EXPDIR} # LW radiation constants
        cp -f ${DATADIR}/ECHAM6_CldOptProps.nc ${EXPDIR} # cloud optical properties
        #
        # vertical grid
        # -------------
        VGRIDDIR=${ICONDIR}/vertical_coord_tables
        VGRIDNAME=atm_hyb_sp_${nlev}
        #
        rm ${EXPDIR}/${VGRIDNAME}
        ln -s ${VGRIDDIR}/${VGRIDNAME} ${EXPDIR}/${VGRIDNAME}
        check_error $? "ln -s ${VGRIDDIR}/${VGRIDNAME}"
        #
        ;;
     3 )
        #  non-hydrost. atm.
        # ==================
        #
        # model constants
        # ---------------
        cp -f ${DATADIR}/rrtmg_lw.nc           ${EXPDIR} # LW radiation constants
        cp -f ${DATADIR}/ECHAM6_CldOptProps.nc ${EXPDIR} # cloud optical properties
        
        # vertical grid
        # -------------
        VGRIDDIR=${ICONDIR}/vertical_coord_tables
        VGRIDNAME=atm_hyb_sz_${nlev}
        #
        rm  ${EXPDIR}/${VGRIDNAME}
        ln -s ${VGRIDDIR}/${VGRIDNAME} ${EXPDIR}/${VGRIDNAME}
        warning $? "ln -s ${VGRIDDIR}/${VGRIDNAME} failed"
        #
        ;;
    -1 )
        # hydrost. ocean
        # ==============
        ;;
esac
#
#-----------------------------------------------------------------------------
#
# create ICON master namelist
# ------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf

cd ${EXPDIR}


if [[ x$atmo_namelist != x ]]; then
  run_atmo=${run_atmo:=".true."}
fi

if [[ x$ocean_namelist != x ]]; then
  run_ocean=${run_ocean:=".true."}
fi

restart=${restart:=".false."}
run_ocean=${run_ocean:=".false."}
run_atmo=${run_atmo:=".false"}
atmo_namelist=${atmo_namelist:="none"}
ocean_namelist=${ocean_namelist:="none"}
master_namelist=icon_master.namelist

cat > $master_namelist << EOF
&master_nml
 lrestart               = $restart
/
&time_nml
 ini_datetime_string = "$start_date"
 dt_restart          = $dt_restart
/
EOF
#-----------------------------------------------------------------------------


#-----------------------------------------------------------------------------
# create master_model_nml
if [[ $run_atmo == '.true.' ]]; then
cat >> $master_namelist << EOF
&master_model_nml
  model_name="ATMO"
  model_namelist_filename="$atmo_namelist"
  model_restart_info_filename=""
  model_type=1
  model_min_rank=1
  model_max_rank=65536
  model_inc_rank=1
/
EOF
fi

if [[ $run_ocean == '.true.' ]]; then
cat >> $master_namelist << EOF
&master_model_nml
  model_name="OCEAN"
  model_namelist_filename="$ocean_namelist"
  model_restart_info_filename=""
  model_type=2
  model_min_rank=1
  model_max_rank=65536
  model_inc_rank=1
/
EOF
fi
#-----------------------------------------------------------------------------


#-----------------------------------------------------------------------------
# get namelist
#
if [[ x$atmo_namelist != xnone  && x$atmo_namelist != x ]] ; then
  if [[ -f ${DIR}/$atmo_namelist ]] ; then
    mv -f ${DIR}/$atmo_namelist ${EXPDIR}/$atmo_namelist
    check_error $? "cp -f ${DIR}/$atmo_namelist"
  else
    check_error 1 "${DIR}/$atmo_namelist does not exist"
  fi  
fi

if [[ x$ocean_namelist != xnone  && x$ocean_namelist != x ]] ; then
  if [[ -f ${DIR}/$ocean_namelist ]] ; then
    mv -f ${DIR}/$ocean_namelist ${EXPDIR}/$ocean_namelist
    check_error $? "mv -f ${DIR}/$ocean_namelist"
  else
    check_error 1 "${DIR}/$ocean_namelist does not exist"
  fi  
fi

#-----------------------------------------------------------------------------
#
# model
#
MODEL=${bindir}/control_model
#
ls -l ${MODEL}
check_error $? "${MODEL} does not exist?"
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
#
# start experiment
#
cd ${EXPDIR}
#
${START} ${MODEL}
#
check_error $? "${START} ${MODEL}"
#
#-----------------------------------------------------------------------------
#
echo "============================"
echo "Script run successfully"
echo "============================"
exit 0
#-----------------------------------------------------------------------------
