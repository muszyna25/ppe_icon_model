#=============================================================================
#
# This section of the run script containes the specifications of the ocean experiment.
# The specifications are passed by namelist to the program.
# For a complete list see Namelist_overview.pdf
#
# Default EXPNAME is the suffix of this script after "exp."
#
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# Basic specifications for the ICON ocean model: comparison to MPIOM
# --------------------------------------
# Stephan Lorenz, MPI-M, 2011-01 / 2013-07
#
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
#
# These variables are set in the header section of the completed run script:
#
# EXPNAME = experiment name
# NPROMA  = array blocking length / inner loop length
#-----------------------------------------------------------------------------
#
#-----------------------------------------------------------------------------
# The following values must be set here as shell variables so that they can be used
# also in the executing section of the completed run script
#
#-----------------------------------------------------------------------------
# the namelist filename
ocean_namelist=NAMELIST_${EXPNAME}
#
#-----------------------------------------------------------------------------
# global resolution
R=2   # nroot
B=7   # number of bisections applied
#
#-----------------------------------------------------------------------------
# ocean initialization, forcing, and grid file location specifics:
  LOC='POOL'   # all ocean files needed for running are found on pool
# LOC='othr'   # else all ocean files needed for running are found on local 'grids' directory
# specific path of input data is set by exec.iconrun
# 
#-----------------------------------------------------------------------------
# ocean initialization (init_oce=1) needs an additional file for prognostic variables
init_oce=1     # 1: use ocean initialization file; 0: init analytically
# prognostic ocean initialization file must match the vertical levels
#   ts_phc_annual-iconR${R}B0{B}-L10x500m.nc      # 10 levels, 500m each
#   ts_phc_annual-iconR${R}B0{B}-L10_50-1000m.nc  # 10 levels, 10-1000m varying thickness
# provide name suffix for vertical resolution
#init_oce_suff='L10_50-1000m.nc'
#init_oce_suff='L40_12-600m.nc'
init_oce_suff='L20_20-700m.nc'
#
#-----------------------------------------------------------------------------
# surface relaxation initialization (init_relax=1) needs an additional file for temperature/salinity
init_relax=1   # 1: use relaxation initialization file
#init_rel_suff='50m.nc'  # 50m thickness
#init_rel_suff='12m.nc'  # 12m thickness
init_rel_suff='20m.nc'  # 20m thickness
# surface relaxation file must match the thickness of the surface level
#   ts_surf_annual-iconR${R}B0{B}-50m.nc          # 50m thickness
#
#-----------------------------------------------------------------------------
# ocean forcing (iforc=12) needs an additional flux file 
# NO_FORCING                 = 10
# ANALYT_FORC                = 11  - dependent on testcase
# FORCING_FROM_FILE_FLUX     = 12  - OMIP or NCEP type forcing
# FORCING_FROM_FILE_FIELD    = 13  - not yet
# FORCING_FROM_COUPLED_FLUX  = 14  - coupled experiments
# FORCING_FROM_COUPLED_FIELD = 15  - not yet
iforc=12
#
# type of OMIP or NCEP forcing to read (iforc=12 only)
#  1 = u/v-stress [and temperature relaxation, depending on "temperature_relaxation" below]
#  2 = use all 12 datasets of full OMIP forcing
#  5 = use full NCEP datasets; read monthly mean data of consecutive years, set iforc_len=12 !
iforc_type=2
iforc_len=365  # length of OMIP/NCEP dataset: 1 = annual; 12 = monthly data; 365/else = daily data
# surface flux file must match the length given by iforc_len
#   omip4icon-R${R}B0{B}-monmean.nc  # 12 monthly mean datasets
#   omip4icon-R${R}B0{B}-annual.nc   #  1 annual mean dataset
#   ncep4icon-R${R}B0{B}.nc          # consecutive 12 monthly mean datasets (iforc_len=12)
#
#-----------------------------------------------------------------------------
# global timing
start_date="2001-01-01T00:00:00Z"
  end_date="2001-01-02T00:00:00Z"
#
#-----------------------------------------------------------------------------
# model timing
nhours_data=1        # ocean model output interval hours [hours]
ndays_file=3750      # new output file generation interval [days]
ndays_checkp=1       # write restart file interval [days]
ndays_restart=100      # stop model for restart [days]
#
#-----------------------------------------------------------------------------
# calculate model timesteps using $ndays
(( dt_data       = nhours_data   * 3600 ))
(( dt_file       = ndays_file    * 86400 ))
(( dt_checkpoint = ndays_checkp  * 86400 ))
(( dt_restart    = ndays_restart * 86400 ))
(( simLength = dt_restart > dt_file ? dt_file : dt_restart ))
(( steps_per_file = simLength / dt_data )) # output intervals per file interval
#
#-----------------------------------------------------------------------------
# model parameters
ocean_model_equations=-1 # equation system: -1=hydrost. ocean
#
#-----------------------------------------------------------------------------
# provide an ocean horizontal grid file
  grid_ext="etopo40_planet"  # mapped from ETOPO-file with 2/3 deg resolution, variable bottom bathymetry
#
ocean_grids="iconR${R}B0${B}-ocean_${grid_ext}.nc"
# 
#-----------------------------------------------------------------------------
#
# write ICON namelist parameters
# ------------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#
cat > ${ocean_namelist} << EOF
!
&parallel_nml
 nproma         = ${nproma}
 l_fast_sum     = .true.          ! false: results are reproducable, gmres_oce_old is used
/
&grid_nml
 dynamics_grid_filename = "${ocean_grids}",
/
&dynamics_nml
 iequations  = ${ocean_model_equations}       ! -1: hydrost. ocean model
/
&run_nml
 dtime       = 450                ! model timestep in seconds
 output      = 'nml'              ! output mechanism via namelist
 activate_sync_timers = .TRUE.
 write_timer_files    = .FALSE.
 msg_timestamp        = .FALSE.
/
&output_nml
  output_bounds    = ${dt_data}, ${dt_restart}, ${dt_data}   !start, end, increment
  steps_per_file   = ${steps_per_file}
  include_last     = .TRUE.
  output_grid      = .TRUE.
  output_filename  = "${EXPNAME}_R${R}B0${B}_oce"
  ml_varlist       =  'group:oce_default','group:ice_default'
!/
! no complete sea ice
!&output_nml
!  output_bounds    = ${dt_data},${dt_restart},${dt_data}   !start, end, increment
!  steps_per_file   = ${steps_per_file}
!  include_last     = .TRUE.
!  output_grid      = .TRUE.
!  output_filename  = "${EXPNAME}_R${R}B0${B}_ice"
!  ml_varlist       = 'wet_c','group:ice_default','group:ice_diag'
/
&dbg_index_nml
  idbg_mxmn=2                     ! initialize MIN/MAX  debug output
  idbg_val =0                     ! initialize one cell debug output
  idbg_slev=1                     ! initialize start level for debug output
  idbg_elev=5                     ! initialize end level for debug output
  dbg_lat_in=   30.0              ! latitude location of one cell debug output
  dbg_lon_in=  -30.0              ! longitude location of one cell debug output
  str_mod_tst='all'               ! define modules to print out in debug mode
/
&ocean_dynamics_nml
! 20 unevenly spaced levels used by MPIOM/GR60, limited to 700m at bottom
! n_zlev             =   20      ! number of vertical levels and (dzlev_m) thicknesses
! dzlev_m(1:20)      =   20.0,   20.0,   20.0,   30.0,   40.0,   50.0,   70.0,   90.0,  120.0,  150.0,
!                       180.0,  210.0,  250.0,  300.0,  400.0,  500.0,  600.0,  700.0,  700.0,  700.0
! 40 unevenly spaced levels used by MPIOM/GR30
 n_zlev             =   40
 dzlev_m(1:40)      =   12.0,   10.0,   10.0,   10.0,   10.0,   10.0,   13.0,   15.0,   20.0,   25.0,
                        30.0,   35.0,   40.0,   45.0,   50.0,   55.0,   60.0,   70.0,   80.0,   90.0,
                       100.0,  110.0,  120.0,  130.0,  140.0,  150.0,  170.0,  180.0,  190.0,  200.0,
                       220.0,  250.0,  270.0,  300.0,  350.0,  400.0,  450.0,  500.0,  500.0,  600.0
  l_edge_based    = .TRUE.       ! edge- or cell-based mimetic discretization
  l_partial_cells = .FALSE.      ! partial bottom cells=true: local varying bottom depth
  FLUX_CALCULATION_HORZ = 1      ! 1=upwind, 2=central, 4=mimetic_miura
  FLUX_CALCULATION_VERT = 1      ! 1=upwind, 2=central, 4=mimetic_miura, 5=adpo
  !veloc_diffusion_order = 1      ! 1=harmonic, 2=biharmonic friction
  !veloc_diffusion_form  = 1      ! 1: graddiv, 2: curlcurl form of laplacian horizontal velocity diffusion
  select_solver      = 2               !  1=gmres_oce_old; 2=ocean_restart_gmres
  solver_tolerance   = 1.0E-14         !  absolute (new) or relative (gmres_oce_old) - to be checked
  solver_max_iter_per_restart   = 30   !  inner solver loop without syncing (default: 200)
  solver_max_restart_iterations = 50   !  outer (restart solver) loop with syncing (default: 100)
  use_continuity_correction = .true.
  i_bc_veloc_bot     = 1         !  0/1=bottom friction off/on
/
&ocean_physics_nml
  !i_sea_ice          =    1      ! 0 = no sea ice; 1 = Winton; 2 = Semtner
  !no_tracer          =    2      ! tracer-transport: 0=no transport, 1=temperature, 2=temp. and salinity
  !k_veloc_h          = 7.5E+4    ! [m2/s] constant horizontal viscosity coefficient for velocity
  HORZ_VELOC_DIFF_TYPE = 3       ! 3: calculate varying horizontal viscosity coefficient according to Munk criterion
  k_veloc_v          = 2.5E-5    ! [m/s]  vertical background viscosity coefficient for velocity
  richardson_veloc   = 2.0e-3    ! factor for vertical viscosity coefficient in PP scheme
  MAX_VERT_DIFF_VELOC= 1.0E-5    ! max vertical velocity viscosity for convection used in case of instability
  k_pot_temp_h       = 50.0     ! [m2/s] constant horizontal diffusion coefficient for temperature
  k_pot_temp_v       = 1.25E-6    ! [m/s]  vertical background diffusion coefficient for temperature
  k_sal_h            = 50.0     ! [m2/s] constant horizontal diffusion coefficient for salinity
  k_sal_v            = 1.25E-6    ! [m/s]  vertical background diffusion coefficient for salinity
  richardson_tracer  = 2.0e-3    ! factor for vertical diffusion coefficient in PP scheme
  MAX_VERT_DIFF_TRAC = 0.1       ! max vertical tracer diffusion for convection used in case of instability
/
&sea_ice_nml
  i_ice_therm   = 1
  i_ice_dyn     = 1
/
&ocean_forcing_and_init_nml
  idiag_oce          = 1              ! 1: write standard ocean diagnostics to stderr
  iforc_oce          = ${iforc}       ! ocean forcing
  iforc_type         = ${iforc_type}  ! type of ocean forcing, see above
  iforc_len          = ${iforc_len}   ! length of ocean forcing data set, see above
  init_oce_prog      = ${init_oce}    ! read ocean initialization file, see above
  init_oce_relax     = ${init_relax}  ! read ocean surface relaxation file, see above
  itestcase_oce      =   50      ! 50=zonally homogen temperature for APE SST (Williamson)
  temperature_relaxation= 0      !  0: no relaxation used
                                 !  1: relaxation switched on for reading (init_oce_relax=1) or some testcases only
  relaxation_param   =    1.0    ! strength of 2-dim relaxation for temperature (months)
                                 ! this value is divided by number of seconds per month (=30*24*3600)
  irelax_2d_S        =    1      ! 2-dim relaxation of salinity - see "temperature_relaxation" for parameter values
  relax_2d_mon_S     =    3.0    ! strength of 2-dim relaxation for salinity (months)
  l_forc_freshw      = .TRUE.    ! apply freshwater forcing boundary condition (OMIP only)
/
&ocean_diagnostics_nml
! vertex list for R2B04 only
!  gibraltar(1:10)              = 2371,2374
!  denmark_strait(1:10)         = 2436,2471
!  drake_passage(1:10)          = 9285,9319,9321,9412,9414,9655
!  indonesian_throughflow(1:20) = 3554,3558,3557,3560,5778,5781,5900,5906,5897,5907,5786,6206,6202,6207
!  scotland_iceland(1:10)       = 2240,2467,2238,2249,2248
/
&io_nml
  dt_checkpoint = ${dt_checkpoint}
  lkeep_in_sync = .TRUE.         ! sync after each timestep
/
EOF
#-----------------------------------------------------------------------------
# add required standard input files
. ${thisdir}/add_required_ocean_files
#-----------------------------------------------------------------------------
