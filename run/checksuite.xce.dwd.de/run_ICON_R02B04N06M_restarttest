#! /bin/ksh
# ----------------------------------------------------------------------------
#PBS -q xc_normal
#PBS -l select=4:ompthreads=4
#PBS -l place=scatter
#PBS -l walltime=01:00:00
#PBS -j oe
#PBS -W umask=022
# ----------------------------------------------------------------------------
# ============================================================================
#
# Cray batch script for the ICON model
#
# Initializes the Jablonowski Williamson test case with a 
# mountain instead of the wind perturbation. 
# Setup with multiple nests.
# ----------------------------------------
# VARIANT WITH RESTART (and patch weights)
# ----------------------------------------
#
# Platform: Cray XC30
#           xce.dwd.de
#
# 05/2014 : G. Zaengl, F. Prill, DWD
#
# ----------------------------------------------------------------------------
# ============================================================================


set -x

# OpenMP settings
export OMP_SCHEDULE="static"
export OMP_DYNAMIC="false"
# MPI: use DMAPP for off-node data movement
export MPICH_RMA_OVER_DMAPP=1
# disable core dumps
export RLIMIT_CORE=0
export ATP_MAX_CORES=0


# ----------------------------------------------------------------------------
# path definitions
# ----------------------------------------------------------------------------

# directory with input grids:
GRIDDIR=/e/uhome/gzaengl/icon-dev/experiments/GRF_R2B4N6M

# base directory for ICON sources and binary:
ICONDIR=${PBS_O_WORKDIR}/../../

# absolute path to directory with plenty of space:
EXPDIR=$TMPDIR/../experiments/exp14

# path to model binary, including the executable:
MODEL=${ICONDIR}/build/x86_64-unknown-linux-gnu/bin/control_model


# ----------------------------------------------------------------------------
# copy input data: grids, external parameters, model
# ----------------------------------------------------------------------------

# the directory for the experiment will be created, if not already there
if [ ! -d $EXPDIR ]; then
    mkdir -p $EXPDIR
fi
cd ${EXPDIR}

# grid files
ln -sf ${GRIDDIR}/iconR2B03_DOM00.nc iconR2B03_DOM00.nc
ln -sf ${GRIDDIR}/iconR2B04_DOM01.nc iconR2B04_DOM01.nc
ln -sf ${GRIDDIR}/iconR2B05_DOM02.nc iconR2B05_DOM02.nc
ln -sf ${GRIDDIR}/iconR2B06_DOM03.nc iconR2B06_DOM03.nc
ln -sf ${GRIDDIR}/iconR2B05_DOM04.nc iconR2B05_DOM04.nc
ln -sf ${GRIDDIR}/iconR2B06_DOM05.nc iconR2B06_DOM05.nc

# files needed for radiation
ln -sf ${ICONDIR}/data/ECHAM6_CldOptProps.nc .
ln -sf ${ICONDIR}/data/rrtmg_lw.nc .

# copy binary
cp -p $MODEL icon


# ----------------------------------------------------------------------------
# grid namelist settings
# ----------------------------------------------------------------------------

# the grid parameters
atmo_dyn_grids="iconR2B04_DOM01.nc iconR2B05_DOM02.nc iconR2B06_DOM03.nc iconR2B05_DOM04.nc iconR2B06_DOM05.nc"
atmo_rad_grids="iconR2B03_DOM00.nc"

# reconstruct the grid parameters in namelist form
dynamics_grid_filename=""
for gridfile in ${atmo_dyn_grids}; do
  dynamics_grid_filename="${dynamics_grid_filename} '${gridfile}',"
done
radiation_grid_filename=""
for gridfile in ${atmo_rad_grids}; do
  radiation_grid_filename="${radiation_grid_filename} '${gridfile}',"
done


# ----------------------------------------------------------------------------
# ============================================================================
#                        LOOP: MODEL IS EXECUTED TWO TIMES
# ============================================================================
for iter in 1 2 ; do


if [ $iter -eq 1 ] ; then

restart="       .FALSE.  "
nsteps="           250   "
checkpoint="     57600.0 "
nrest_procs="        1   "

else

restart="        .TRUE.  "
nsteps="           300   "
checkpoint="   4320000.0 "
nrest_procs="        0   "

fi


# ----------------------------------------------------------------------------
# create ICON master namelist
# ----------------------------------------------------------------------------

cat > icon_master.namelist << EOF

! master_nml: ----------------------------------------------------------------
&master_nml
 lrestart                   =                   ${restart}        ! .TRUE.=current experiment is resumed
/

! master_model_nml: repeated for each model ----------------------------------
&master_model_nml
 model_type                  =                          1         ! identifies which component to run (atmosphere,ocean,...)
 model_name                  =                      "ATMO"        ! character string for naming this component.
 model_namelist_filename     =              "NAMELIST_NWP"        ! file name containing the model namelists
 model_min_rank              =                          1         ! start MPI rank for this model
 model_max_rank              =                      65536         ! end MPI rank for this model
 model_inc_rank              =                          1         ! stride of MPI ranks
/

! time_nml: specification of date and time------------------------------------
&time_nml
 ini_datetime_string         =      "2011-01-01T00:00:00Z"        ! initial date and time of the simulation
/

EOF


# ----------------------------------------------------------------------------
# model namelists
# ----------------------------------------------------------------------------
# For a complete list see doc/Namelist_overview.pdf

cat > NAMELIST_NWP << EOF

! parallel_nml: MPI parallelization -------------------------------------------
&parallel_nml
 nproma                      =                          8         ! loop chunk length
 p_test_run                  =                     .FALSE.        ! .TRUE. means verification run for MPI parallelization
 num_io_procs                =                          1         ! number of I/O processors
 num_restart_procs           =              ${nrest_procs}        ! number of restart processors
 iorder_sendrecv             =                          3         ! sequence of MPI send/receive calls
/

! run_nml: general switches ---------------------------------------------------
&run_nml
 ltestcase                   =                      .TRUE.        ! idealized testcase runs
 num_lev                     =         90, 60, 54, 60, 54         ! number of full levels (atm.) for each domain
 lvert_nest                  =                      .TRUE.        ! vertical nesting
 nsteps                      =                  ${nsteps}         ! number of time steps of this run
 dtime                       =                        288         ! timestep in seconds
 ldynamics                   =                      .TRUE.        ! compute adiabatic dynamic tendencies
 ltransport                  =                      .TRUE.        ! compute large-scale tracer transport
 ntracer                     =                          5         ! number of advected tracers
 iforcing                    =                          3         ! forcing of dynamics and transport by parameterized processes
 msg_level                   =                          7         ! controls how much printout is written during runtime
 ltimer                      =                     .FALSE.        ! timer for monitoring the runtime of specific routines
 timers_level                =                         10         ! performance timer granularity
 output                      =                       "nml"        ! main switch for enabling/disabling components of the model output
/

! diffusion_nml: horizontal (numerical) diffusion ----------------------------
&diffusion_nml
 hdiff_order                 =                          5         ! order of nabla operator for diffusion
 itype_vn_diffu              =                          1         ! reconstruction method used for Smagorinsky diffusion
 itype_t_diffu               =                          2         ! discretization of temperature diffusion
 hdiff_efdt_ratio            =                         36.0       ! ratio of e-folding time to time step 
 hdiff_smag_fac              =                          0.015     ! scaling factor for Smagorinsky diffusion
 lhdiff_vn                   =                      .TRUE.        ! diffusion on the horizontal wind field
 lhdiff_temp                 =                      .TRUE.        ! diffusion on the temperature field
/

! dynamics_nml: dynamical core -----------------------------------------------
&dynamics_nml
 iequations                  =                          3         ! type of equations and prognostic variables
 idiv_method                 =                          1         ! method for divergence computation
 divavg_cntrwgt              =                          0.50      ! weight of central cell for divergence averaging
 lcoriolis                   =                      .TRUE.        ! Coriolis force
/

! extpar_nml: external data --------------------------------------------------
&extpar_nml
 extpar_filename             =                         ""         ! filename of external parameter input file
 itopo                       =                          0         ! topography (0:analytical)
/

! grid_nml: horizontal grid --------------------------------------------------
&grid_nml
 dynamics_grid_filename      =  ${dynamics_grid_filename}         ! array of the grid filenames for the dycore
 radiation_grid_filename     = ${radiation_grid_filename}         ! array of the grid filenames for the radiation model
 dynamics_parent_grid_id     =              0, 1, 2, 1, 4         ! array of the indexes of the parent grid filenames
 lredgrid_phys               = .TRUE.,.TRUE.,.TRUE.,.TRUE.,.TRUE. ! .true.=radiation is calculated on a reduced grid
 lfeedback                   =                      .TRUE.        ! specifies if feedback to parent grid is performed
 ifeedback_type              =                          2         ! feedback type (incremental/relaxation-based)
 patch_weight                =      0., 0.33, 0., 0.67, 0.        ! perform processor splitting
/

! gridref_nml: grid refinement and nesting -----------------------------------
&gridref_nml
 grf_intmethod_e             =                          6         ! interpolation method for grid refinement
 grf_scalfbk                 =                          2         ! feedback method for dynamical scalar variables
 grf_tracfbk                 =                          2         ! feedback method for tracer variables
 denom_diffu_v               =                        150.0       ! Deniminator for lateral boundary diffusion of velocity
/

! io_nml: general switches for model I/O -------------------------------------
&io_nml
 dt_diag                     =                      21600.0       ! diagnostic integral output interval
 dt_checkpoint               =               ${checkpoint}        ! time interval for writing restart files.
 itype_pres_msl              =                          2         ! method for computation of mean sea level pressure
/

! nh_testcase_nml: idealized testcase specification --------------------------
&nh_testcase_nml
 nh_test_name                =                    'jabw_m'        ! testcase selection
 mount_height                =                       7500.0       ! maximum mount height
 mount_half_width            =                    2000000.0       ! half width of mountain
 rh_at_1000hpa               =                          0.99      ! relative humidity at 1000 hPa
 qv_max                      =                         35.e-3     ! specific humidity in the tropics
/

! nonhydrostatic_nml: nonhydrostatic model -----------------------------------
&nonhydrostatic_nml
 iadv_rhotheta               =                          2         ! advection method for rho and rhotheta
 ivctype                     =                          2         ! type of vertical coordinate
 itime_scheme                =                          4         ! time integration scheme
 exner_expol                 =                          0.333     ! temporal extrapolation of Exner function
 vwind_offctr                =                          0.2       ! off-centering in vertical wind solver
 damp_height                 =                      50000.0       ! height at which Rayleigh damping of vertical wind starts
 rayleigh_coeff              =                          0.10      ! Rayleigh damping coefficient
 iadv_rcf                    =                          5         ! calling frequency for transport/diffusion/physics
 lhdiff_rcf                  =                      .TRUE.        ! .TRUE.=compute diffusion only at advection time steps
 divdamp_order               =                          4         ! order of divergence damping
 l_open_ubc                  =                     .FALSE.        ! .TRUE.=use open upper boundary condition
 l_nest_rcf                  =                      .TRUE.        ! synchronize interpolation/feedback calls with advection
 igradp_method               =                          3         ! discretization of horizontal pressure gradient
 l_zdiffu_t                  =                      .TRUE.        ! specifies computation of Smagorinsky temperature diffusion
 thslp_zdiffu                =                          0.02      ! slope threshold (temperature diffusion)
 thhgtd_zdiffu               =                        125.0       ! threshold of height difference (temperature diffusion)
 htop_moist_proc             =                      22500.0       ! max. height for moist physics
 hbot_qvsubstep              =                      22500.0       ! height above which QV is advected with substepping scheme
/

! nwp_phy_nml: switches for the physics schemes ------------------------------
&nwp_phy_nml
 inwp_gscp                   =                          1         ! cloud microphysics and precipitation
 inwp_convection             =                          1         ! convection
 inwp_radiation              =                          1         ! radiation
 inwp_cldcover               =                          1         ! cloud cover scheme for radiation
 inwp_turb                   =                         10         ! vertical diffusion and transfer
 inwp_satad                  =                          1         ! saturation adjustment
 inwp_sso                    =                          0         ! subgrid scale orographic drag
 inwp_gwd                    =                          1         ! non-orographic gravity wave drag
 inwp_surface                =                          0         ! surface scheme
 latm_above_top              =              .FALSE.,.TRUE.        ! take into account atmosphere above model top for radiation computation
 efdt_min_raylfric           =                       7200.0       ! minimum e-folding time of Rayleigh friction
 itype_z0                    =                          2         ! type of roughness length data
/

! output_nml: specifies an output stream --------------------------------------
&output_nml
 filetype                    =                          4         ! output format: 2=GRIB2, 4=NETCDFv2
 dom                         =                         -1         ! write all domains
 output_bounds               =       0., 10000000., 21600.        ! output: start, end, increment
 steps_per_file              =                          2         ! number of output steps in one output file
 mode                        =                          1         ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
 include_last                =                      .TRUE.        ! flag whether to include the last time step
 output_filename             =                       'NWP'        ! file name base
 output_grid                 =                      .TRUE.        ! flag whether grid information is added to output.
 !
 ml_varlist                  =  'u', 'v', 'w', 'temp', 'pres','topography_c', 'pres_msl', &
                                'qv', 'qc', 'qi', 'qr', 'qs', 'tke',                      &
                                'group:precip_vars', 'group:additional_precip_vars'
/

! sleve_nml: vertical level specification -------------------------------------
&sleve_nml
 min_lay_thckn               =                         20.0       ! layer thickness of lowermost layer
 top_height                  =                      75000.0       ! height of model top
 stretch_fac                 =                          0.9       ! stretching factor to vary distribution of model levels
 decay_scale_1               =                       4000.0       ! decay scale of large-scale topography component
 decay_scale_2               =                       2500.0       ! decay scale of small-scale topography component
 decay_exp                   =                          1.2       ! exponent of decay function
 flat_height                 =                      16000.0       ! height above which the coordinate surfaces are flat
/

! radiation_nml: radiation scheme ---------------------------------------------
&radiation_nml
 irad_o3                     =                          6         ! ozone climatology
 irad_aero                   =                          5         ! aerosols
/

! transport_nml: tracer transport ---------------------------------------------
&transport_nml
 ctracer_list                =                     '12345'        ! list of tracer names
 ivadv_tracer                =              3, 3, 3, 3, 3         ! tracer specific method to compute vertical advection
 itype_hlimit                =           3, 4, 4, 4, 4, 0         ! type of limiter for horizontal transport
 ihadv_tracer                =          52, 2, 2, 2, 2, 0         ! tracer specific method to compute horizontal advection
 llsq_svd                    =                      .TRUE.        ! use SV decomposition for least squares design matrix
 beta_fct                    =                          1.005     ! factor of allowed over-/undershooting in monotonous limiter
/

! turbdiff_nml: turbulent diffusion -------------------------------------------
&turbdiff_nml
 tkhmin                      =                          0.2       ! scaling factor for minimum vertical diffusion coefficient
 tkmmin                      =                          0.2       ! scaling factor for minimum vertical diffusion coefficient
 pat_len                     =                        100.0       ! 
 c_diff                      =                          0.2       !
 rat_sea                     =                         10         !
/

EOF


# ----------------------------------------------------------------------------
# run the model!
# ----------------------------------------------------------------------------

# "aprun" command:
# -n xx   : number of MPI tasks
# -N xx   : number of MPI tasks/node
# -d  x   : number of threads/MPI task
# -j 2    : Hyperthreading enabled: 20 physical cores -> 40 "virtual" cores
# -m 3g   : 3G memory/task

aprun  -n 40 -N 10 -j 2 -d 4 -m 3g icon


# ----------------------------------------------------------------------------
done # iterations for restart testing
# ----------------------------------------------------------------------------
