#!/bin/ksh
   # =======================================================
   #
   # Main pool directories to provide ocean input data:
   #   all files for ocean init/forcing from pool will be copied to $HGRIDDIR
   #
   # use add_required_file ${in_path_file} ./${new_name} 
   # --------------------------------------------------
   pool_icon_folder=/pool/data/ICON
   local_grid_folder=${ICONDIR}/grids
   # if not defined, get them from the pool
   if [ "x${LOC}" = 'xPOOL' ] ; then
     grids_folder=${pool_icon_folder}/ocean_data/ocean_grid
     ocean_forcing_folder=${pool_icon_folder}/ocean_data/ocean_forcing
     ocean_init_folder=${pool_icon_folder}/ocean_data/ocean_init
   else
     grids_folder=${local_grid_folder}
     ocean_forcing_folder=${local_grid_folder}
     ocean_init_folder=${local_grid_folder}
   fi
   ocean_forcing_folder=${ocean_forcing_folder:=${pool_icon_folder}/ocean_data/ocean_forcing}
   ocean_init_folder=${ocean_init_folder:=${pool_icon_folder}/ocean_data/ocean_init}
   ocean_grid_desc=R${R}B0${B}
   # =======================================================
   #
   # provide netcdf file for reading ocean forcing fluxes
   # ----------------------------------------------------
   if [[ "x$iforc" = "x12" ]] ; then
     # filename on EXPDIR read by ocean model
     ocean_flux_filename=iconR${R}B0${B}-flux.nc

     # general filename: OMIP annual file
     if [[ "x$iforc_len" = "x1" ]] ; then
       ocean_force_filename=omip4icon-${ocean_grid_desc}-annual.nc
     # filename for OMIP 12 sets of monthly means
     elif [[ "x$iforc_len" = "x12" ]] ; then
       ocean_force_filename=omip4icon-${ocean_grid_desc}-monmean.nc
       # provide netcdf file for NCEP ocean forcing - length of 12 months for annual reading
       if [[ "x$iforc_type" = "x5" ]] ; then
         ocean_force_filename=ncep4icon_${ocean_grid_desc}.nc
       fi
     # filename for OMIP 365 sets of daily data
     elif [[ "x$iforc_len" = "x365" ]] ; then
       ocean_force_filename=omip4icon-${ocean_grid_desc}-daily.nc
     fi

     # copy file from pool to grids directory $HGRIDDIR
     ocean_flux_file=${ocean_forcing_folder}/$ocean_force_filename     
     ls -l $ocean_flux_file
     if [ $? -eq 0 ]; then
       add_required_file ${ocean_flux_file}          $ocean_flux_filename
     else
       echo "WARNING: $ocean_flux_file does not exist - proceed from local disk"
     fi
   fi

   # =======================================================
   # provide netcdf file for initialization of ocean prognostic variables
   # --------------------------------------------------------------------
   if [[ "x$init_oce" = "x1" ]] ; then

     ocean_prog_filename=iconR${R}B0${B}-prog.nc
     ocean_oini_filename=ts_phc_annual-icon${ocean_grid_desc}-${init_oce_suff}
     ocean_restart_filename=restart_500y_dailyOmip_noIce_icon${ocean_grid_desc}-${init_oce_suff}

     ocean_init_filename=${ocean_init_folder}/$ocean_oini_filename
     ls -l $ocean_init_filename
     if [ $? -eq 0 ]; then
       add_required_file ${ocean_init_filename}          ./$ocean_prog_filename
     else
       echo "WARNING: $ocean_init_filename does not exist - proceed from local disk"
     fi

     # link to fixed restart file for buildbot:
     if [ -f ${ocean_init_folder}/${ocean_restart_filename} ]; then
       add_link_file ${ocean_init_folder}/${ocean_restart_filename} ./restart_oce.nc
     else
       echo "WARNING: Cannot find restart file: ${ocean_restart_filename}"
     fi
   fi
   
   # =======================================================
   # provide netcdf file for initialization of temperature/salinity relaxation
   # -------------------------------------------------------------------------
   if [[ "x$init_relax" = "x1" ]] ; then

     ocean_relax_filename=iconR${R}B0${B}-relax.nc
     ocean_orel_filename=ts_surf_annual-iconR${R}B0${B}-${init_rel_suff}

#      ocean_relax_file=${ocean_init_folder}/$ocean_relax_filename
#      ls -l $ocean_relax_file
#      if [ $? -eq 0 ]; then
#        add_required_file ${ocean_relax_file} ./
#      else
#        echo "WARNING: Cannot find relax file: ${ocean_relax_file}"     
#      fi

     ocean_orel_file=${ocean_init_folder}/$ocean_orel_filename
     ls -l $ocean_orel_file
     if [ $? -eq 0 ]; then
       add_required_file ${ocean_orel_file} ./$ocean_relax_filename
     else
       echo "WARNING: Cannot find restart file: ${ocean_orel_file}"     
     fi
          
   fi
#-----------------------------------------------------------------------------
