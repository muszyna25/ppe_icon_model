#!/bin/ksh
#=============================================================================
#
# This section of the run script defines the experiment.
# The specifications are passed by namelist to the program.
# For a complete list see Namelist_overview.pdf
#
# Marco Giorgetta, MPI-M, 2011-01-29
# Hui Wan,         MPI-M, 2010-08-17
# Leonidas Linardakis, MPI-M, 2011-07-20
#
#-----------------------------------------------------------------------------
#
# Basic specifications of the simulation
# --------------------------------------
#
# These variables are set in the header section of the completed run script:
#   EXPNAME = experiment name
#   nproma  = array blocking length / inner loop length
# They may be overwritten here
#
#-----------------------------------------------------------------------------
# The following information is included to present some information on the buildbot-html main page
#
# _bb_table_Description_  coupled aqua planet, ocean with flat bottom
# _bb_table_Model_        hydrost. atm + ocean
# _bb_table_Grid_         triangle
#-----------------------------------------------------------------------------
#
# Number of ocean processes
#
mpi_ocean_procs=${mpi_ocean_procs:=1}
#
#-----------------------------------------------------------------------------
if [ $mpi_total_procs -lt `expr $mpi_ocean_procs + 1` ] ; then
   echo "The coupled runs require at least 2 mpi procs. Exiting."
   check_error 0
   exit
fi
#if [ $OMP_NUM_THREADS -gt 1 ] ; then
#   echo "The coupled runs will not run in OpenMP mode . Exiting."
#   check_error 0
#   exit
#fi

#-----------------------------------------------------------------------------
# ATMO
#-----------------------------------------------------------------------------
# The following values must be set here as shell variables so that they can be used
# also in the executing section of the completed run script
#-----------------------------------------------------------------------------
# the namelist filename
#
atmo_namelist=NAMELIST_${EXPNAME}_atmo
#
#-----------------------------------------------------------------------------
# global timing
#
start_date="2000-01-01T00:00:00Z"
  end_date="3000-01-01T00:00:00Z"
# global resolution
#
R=2   # nroot
B=3   # number of bisections applied
#
#time stepping
#
dtime_atmo=${dtime_atmo:=600}
dtime_ocean=$hour
dt_coupling=$hour
(( dt_rad        = 2 * hour ))  # radiation time step
#
#---------------------------------------------------------------------------
#model timing
# calculate model timesteps using $ndays
restart_months=156   # 13 years
(( dt_checkpoint = restart_months * month )) # checkpointing not yet supported for coupling fields
(( dt_restart    = restart_months * month ))
#
atmo_output_interval="PT06H"
atmo_steps_per_file=720   # 6 months
ocean_output_interval="PT12H"
ocean_steps_per_file=360   # 6 months
 
#-----------------------------------------------------------------------------
#
# model parameters
#
atmo_model_equations=1   # equation system
#                        1=hydrost. atm.
#                        2=non-hydrost. atm., 
#                       -1=shallow water model
#                       -2=hydrost. ocean
nlev=31                  # nlev = number of full levels
iforcing=2               # ECHAM physics
#
#-----------------------------------------------------------------------------
ocean_grids="iconR${R}B0${B}-ocean_aqua_planet.nc"
# atmo_dyn_grids="$ocean_grids" atmo uses the ocean grids
#-----------------------------------------------------------------------------
ozon_file="ape_o3_${ocean_grids}"
nproma=${nproma:=32}
#-----------------------------------------------------------------------------
#
#-----------------------------------------------------------------------------
# write ICON namelist parameters
# ------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#  
cat > $atmo_namelist << EOF
&coupling_mode_nml
  debug_coupler_level = 0
/
&coupling_nml
  name                = 'TAUX'
  dt_model            =  ${dtime_atmo}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'TAUY'
  dt_model            =  ${dtime_atmo}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'SFWFLX'
  dt_model            =  ${dtime_atmo}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'SFTEMP'
  dt_model            =  ${dtime_atmo}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'THFLX'
  dt_model            =  ${dtime_atmo}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'ICEATM'
  dt_model            =  ${dtime_atmo}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'SST'
  dt_model            =  ${dtime_atmo}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'OCEANU'
  dt_model            =  ${dtime_atmo}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'OCEANV'
  dt_model            =  ${dtime_atmo}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'ICEOCE'
  dt_model            =  ${dtime_atmo}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&parallel_nml
 nproma         = ${nproma}
 p_test_run     = .FALSE.
 l_test_openmp  = .FALSE.
 l_log_checks   = .FALSE.
 ! use_icon_comm  = .TRUE.
 l_fast_sum   = .TRUE.
 max_send_recv_buffer_size = 262144
 /
&grid_nml
 cell_type = 3             ! triangular cells
 dynamics_grid_filename = "${ocean_grids}",
 grid_angular_velocity = 7.29212e-5  !default earth angular velocity is 7.29212e-5
/
&run_nml
 output      = 'nml'
 num_lev     = ${nlev}      ! number of full levels of vertical grid
 dtime       = ${dtime_atmo}     ! [s] timestep in seconds
 ltestcase   = .TRUE.       ! run testcase                 --> testcase_ctl
 ldynamics   = .TRUE.       ! dynamics                     --> dynamics_ctl, diffusion_ctl
 ltransport  = .TRUE.       ! switch on tracer transport   --> transport_ctl
 ntracer     = 5            ! number of tracers
 iforcing    = ${iforcing}  ! ECHAM physics                --> echam_phy_nml
 msg_level   = 1           ! detailed report during integration 
 ltimer = .TRUE.
 timers_level = 10
 activate_sync_timers = .TRUE.
 write_timer_files  = .TRUE.
 ! msg_timestamp = .TRUE.
/
&ha_testcase_nml
 ctest_name  = 'APEc'  ! test case identifier
 ape_sst_case = 'sst_qobs'
 lrh_linear_pres = .TRUE.   ! initial RH is a linear function of pressure
 rh_at_1000hpa   = 0.30     ! [] initial rel. humidity at 1000 hPa 
/
&io_nml
  dt_checkpoint    = ${dt_checkpoint} ! [s] trigger new restart file
  use_set_event_to_simstep = .false.   
/
/
&output_nml
 filename_format  = "<output_filename>_<datetime2>"
 output_start     = "${start_date}"                  ! start in ISO-format
 output_end       = "${end_date}"                    ! end in ISO-format
 output_interval  = "${atmo_output_interval}"                 ! interval in ISO-format
 steps_per_file   = ${atmo_steps_per_file}
 ! include_last     = .TRUE.
 output_grid      = .TRUE.
 output_filename  = "${EXPNAME}_atmo"
 ml_varlist       = 'ha_prog_out_pres_sfc', 
                    'prm_vo'          , 'prm_t'         ,
                    'prm_swflxtoa'    , 'prm_lwflxtoa'  ,
                    'prm_tsfc'        , 'prm_ghm'       , 
                    'prm_aclcov'      , 'prm_qvi'
/                    
&dynamics_nml
 iequations  = ${atmo_model_equations}    ! 1: hydrost. atmosphere
/
&ha_dyn_nml
 ldry_dycore = .FALSE.  ! moist dynamical core
 ! itime_scheme=12   si 2t
 ! si_rtol     = 1.e-4
/
&diffusion_nml
 hdiff_order = 24       ! 2nd order near model top, 4th order on the other levels
 k2_klev_max = 3        ! the 3 highest model levels use 2nd order diffusion
/
&transport_nml
 ctracer_list = 'vwi45' ! water vapour, cloud water, cloud ice, constant field, dummy for ozone
/
&echam_phy_nml
 lcover    = .FALSE.
 lcond     = .TRUE.
 lconv     = .TRUE.
 lvdiff    = .TRUE.
 lrad      = .TRUE.
 lgw_hines = .TRUE.
 dt_rad     = ${dt_rad} ! [s] compute radiative transfer every other hour
/
&echam_conv_nml
/
&radiation_nml
 irad_h2o   = 1         ! prognostic vapor, liquid and ice
 irad_co2   = 2         ! constant co2 vmr
 irad_ch4   = 0         ! switch off ch4
 irad_n2o   = 0         ! switch off n2o
 irad_o3    = 4         ! switch off o3
 irad_o2    = 0         ! switch off o2
 irad_cfc11 = 0         ! switch off cfc11
 irad_cfc12 = 0         ! switch off cfc12
 irad_aero  = 0         ! switch off aerosols
 izenith    = 3         ! circular orbit, no seasonal cycle but with diurnal cycle 
/
!&output_nml
! filename_format  = "<output_filename>_<datetime2>"
! output_start     = "${start_date}"                  ! start in ISO-format
! output_end       = "${end_date}"                    ! end in ISO-format
! output_interval  = "${atmo_output_interval}"                 ! interval in ISO-format
! steps_per_file   = ${atmo_steps_per_file}
! ! include_last     = .TRUE.
! output_grid      = .TRUE.
! output_filename  = "${EXPNAME}_atm_dyn"
! ml_varlist       = 'ha_prog_out_pres_sfc'      , 'ha_prog_out_temp'      ,
!                    'ha_prog_out_qv'     , 'ha_prog_out_qw'     , 'ha_prog_out_qi'     ,
!                    'ha_diag_out_u'      , 'ha_diag_out_v'      , 'ha_diag_out_wpres_mc'     ,
!                    'ha_diag_out_pres_mc' , 'ha_diag_out_geo_mc' ,
!                      'ha_diag_rel_vort_c'  ,'ha_diag_div' , 'prm_omega' , 'prm_vo' 
!&output_nml
! filename_format  = "<output_filename>_<datetime2>"
! output_start     = "${start_date}"                  ! start in ISO-format
! output_end       = "${end_date}"                    ! end in ISO-format
! output_interval  = "${output_interval}"                 ! interval in ISO-format
! steps_per_file   = ${steps_per_file}
! include_last     = .TRUE.
! output_grid      = .TRUE.
! output_filename  = "${EXPNAME}_atm_phy"
! ml_varlist       = 'prm_cosmu0'  , 'prm_flxdwswtoa'    , 'prm_t' ,
!                    'prm_swflxsfc'    , 'prm_lwflxsfc'  , 'prm_swflxtoa'    , 'prm_lwflxtoa'    ,
!                    'prm_tsfc'        , 'prm_seaice'    , 'prm_o3', 'prm_ghm'   , 'prm_ghi' ,
!                    'prm_aclcov'      , 'prm_aclc'      , 
!                    'prm_rsfl'    , 'prm_ssfl'    , 'prm_rsfc'    , 'prm_ssfc'  ,
!                    'prm_totprec' , 'prm_qvi'     , 'prm_xlvi'    , 'prm_xivi'  ,
!                    'prm_evap'    , 'prm_lhflx'   , 'prm_shflx'   ,
!                    'prm_u_stress', 'prm_v_stress'
!/
EOF
#-----------------------------------------------------------------------------
# OCEAN
#-----------------------------------------------------------------------------
#
# The following values must be set here as shell variables so that they can be used
# also in the executing section of the completed run script
#
#-----------------------------------------------------------------------------
# the namelist filename
#
ocean_namelist=NAMELIST_${EXPNAME}_ocean
#
#-----------------------------------------------------------------------------
#
# prognostic ocean initialization files are named $HGRIDDIR/ts_phc_season-iconR${R}B0{B}-L11.nc
#
#-----------------------------------------------------------------------------
# ocean forcing = 14 is for coupling with the atmosphere, no forcing to be read
#
iforc_oce=14
#
# flux files are named $HGRIDDIR/omip4icon-R${R}B0{B}-monmean.nc
#
#-----------------------------------------------------------------------------
# model parameters
ocean_model_equations=-1 # equation system
#
#-----------------------------------------------------------------------------
#
# write ICON namelist parameters
# ------------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#
cat > ${ocean_namelist} << EOF
!
&coupling_mode_nml
  debug_coupler_level = 0
/
&coupling_nml
  name                = 'TAUX'
  dt_model            =  ${dtime_ocean}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'TAUY'
  dt_model            =  ${dtime_ocean}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'SFWFLX'
  dt_model            =  ${dtime_ocean}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'SFTEMP'
  dt_model            =  ${dtime_ocean}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'THFLX'
  dt_model            =  ${dtime_ocean}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'ICEATM'
  dt_model            =  ${dtime_ocean}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'SST'
  dt_model            =  ${dtime_ocean}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'OCEANU'
  dt_model            =  ${dtime_ocean}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'OCEANV'
  dt_model            =  ${dtime_ocean}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'ICEOCE'
  dt_model            =  ${dtime_ocean}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
!
&parallel_nml
 nproma         = ${nproma}
 p_test_run     = .FALSE.
 l_test_openmp  = .FALSE.
 l_log_checks   = .FALSE.
 l_fast_sum   = .TRUE.
/
&grid_nml
 dynamics_grid_filename = "${ocean_grids}",
 grid_angular_velocity = 7.29212e-5  !default earth angular velocity is 7.29212e-5
/
&run_nml
 output      = 'nml'
 dtime       = ${dtime_ocean}     ! [s] timestep in seconds
 ltimer      = .TRUE. 
 activate_sync_timers = .TRUE.
 write_timer_files  = .TRUE.
 msg_timestamp = .TRUE.
 msg_level     = 8
/
&output_nml
 filename_format  = "<output_filename>_<datetime2>"
 output_start     = "${start_date}"                  ! start in ISO-format
 output_end       = "${end_date}"                    ! end in ISO-format
 output_interval  = "${ocean_output_interval}"       ! interval in ISO-format
 steps_per_file   = ${ocean_steps_per_file}
 output_grid      = .TRUE.
 output_filename  = "${EXPNAME}_ocean"
 ml_varlist       =  'group:oce_essentials', 'group:oce_force_essentials','hi'
/
&dbg_index_nml
  idbg_mxmn=1                     ! initialize MIN/MAX  debug output
  idbg_val =0                     ! initialize one cell debug output
  ! dbg_lat_in=30.0 dbg_lon_in=-20. ! lat/lon-location of one cell debug output
  str_mod_tst='all', 'module'     ! define modules to print out in debug mode
  idbg_slev=1                     ! initialize MIN/MAX  debug output
  idbg_elev=5                     ! initialize MIN/MAX  debug output
/
&dynamics_nml
 iequations  = ${ocean_model_equations}       ! 1: hydrost. atmosphere
/
&ocean_dynamics_nml
  n_zlev             =   20      ! number of vertical levels and (dzlev_m) thicknesses
  dzlev_m(1:20)      =   20.0, 20.0 , 20.0 , 30.0,  40.0,  50.0,  70.0, 90.0,  120.0,  150.0,  180.0,  210.0,
                        250.0,  300.0,  400.0,  500.0,  550.0,  600.0,  700.0,  700.0
  !l_edge_based    = .TRUE.       ! edge- or cell-based mimetic discretization
  !l_partial_cells = .FALSE.      ! partial bottom cells=true: local varying bottom depth
  FLUX_CALCULATION_HORZ = 1      ! 1=upwind, 2=central, 3=mimetic, 4=mimetic_miura
  FLUX_CALCULATION_VERT = 1      ! 1=upwind, 2=central, 3=mimetic, 4=mimetic_miura
  select_solver      = 2               !  1=gmres_oce_old; 2=ocean_restart_gmres
  solver_tolerance   = 1.0E-14         !  absolute (new) or relative (gmres_oce_old) - to be checked
  solver_max_iter_per_restart   = 18   !  inner solver loop without syncing (default: 200)
  solver_max_restart_iterations = 50   !  outer (restart solver) loop with syncing (default: 100)
  use_continuity_correction = .TRUE.
  i_bc_veloc_bot     = 1         !  0/1=bottom friction off/on
/
&ocean_physics_nml
  !i_sea_ice          =    1      ! 0 = no sea ice; 1 = Winton; 2 = Semtner
  !no_tracer          =    2      ! tracer-transport: 0=no transport, 1=temperature, 2=temp. and salinity
  !k_veloc_h          = 1.0E+5    ! [m2/s] horizontal viscosity coefficient for velocity
  HORZ_VELOC_DIFF_TYPE = 3       ! 3: calculate varying horizontal viscosity coefficient according to Munk criterion
  k_veloc_v          = 1.0E-2    ! [m/s]  vertical viscosity coefficient for velocity
  richardson_veloc   = 2.0e-3    ! factor for vertical viscosity coefficient in PP scheme
  MAX_VERT_DIFF_VELOC= 1.0E-5    ! max diffusion coeff, used in implicit vertical velocity diffusion (before =1)
  k_pot_temp_h       = 5.0E+3    ! [m2/s] horizontal viscosity coefficient for temperature
  k_pot_temp_v       = 3.0E-5    ! [m/s]  vertical viscosity coefficient for temperature
  k_sal_h            = 5.0E+3    ! [m2/s] horizontal viscosity coefficient for salinity
  k_sal_v            = 3.0E-5    ! [m/s]  vertical viscosity coefficient for salinity
  richardson_tracer  = 2.0e-3    ! factor for vertical diffusion coefficient in PP scheme
  MAX_VERT_DIFF_TRAC = 0.1       ! max diffusion coeff, used in implicit vertical tracer diffusion (before=3.0E-3)
/
&ocean_forcing_nml
  iforc_oce          = ${iforc_oce}   ! ocean forcing:
                                 ! NO_FORCING                 = 10
                                 ! FORCING_FROM_COUPLED_FLUX  = 14
  temperature_relaxation= -1     !  0: no relaxation used
                                 !  1: relaxation switched on for reading (init_oce_relax=1) or some testcases only
                                 !  2: use SST read from OMIP/bulk forcing (iforc=12);
                                 !     use atmospheric temperature in case of coupling (iforc=14)
                                 !  3: use initial prognostic T as 2-dim relax, copy SST on tracer_relax(1)
                                 ! -1: use net surface heat flux from atmosphere as boundary condition
  relaxation_param   =    3.0    ! strength of 2-dim relaxation for temperature (months)
                                 ! this value is divided by number of seconds per month (=30*24*3600)
  irelax_2d_S        =    0      ! 2-dim relaxation of salinity - see "temperature_relaxation" for parameter values
  relax_2d_mon_S     =    3.0    ! strength of 2-dim relaxation for salinity (months)
  irelax_3d_T        =    0      ! 3-dim relaxation of temperature (0: no relax) 1-2: not yet used
                                 ! 3: use initial T read with init_oce=1
&ocean_initialConditions_nml
  itestcase_oce      =   50      ! 50=zonally homogen temperature for APE SST (Williamson)
  initial_salinity_type      = 402
  initial_temperature_type   = 207
  initial_sst_type           = 'sst1'
  initial_temperature_top    = 27.0 
  initial_temperature_bottom = 0.0
/
&sea_ice_nml
  i_ice_therm   = 1
  i_ice_dyn     = 1
/
&ocean_diagnostics_nml
  diagnostics_level  = 1
/
&io_nml
  dt_checkpoint=${dt_checkpoint}
  lkeep_in_sync = .TRUE.          ! sync after each timestep
  use_set_event_to_simstep = .false.   
/
EOF
#-----------------------------------------------------------------------------

if [ $mpi_total_procs -lt 2 ] ; then
  check_error 0 "This setup requires at least 2 mpi processes. Exit"
fi

#-----------------------------------------------------------------------------
#split the number of procs in two for each of the dummy component
ocean_min_rank=`expr ${mpi_total_procs} - ${mpi_ocean_procs}`
ocean_max_rank=`expr ${ocean_min_rank} + ${mpi_ocean_procs} - 1`
ocean_inc_rank=1
atmo_min_rank=0
atmo_max_rank=`expr ${ocean_min_rank} - 1`
atmo_inc_rank=1
#-----------------------------------------------------------------------------
# fill model list
#namelist_list=( "$atmo_namelist"  "$ocean_namelist" )
#modelname_list=(   "atmo"           "ocean"         )
#modeltype_list=(     1                 2            )
#minrank_list=(  $atmo_min_rank   $ocean_min_rank    )
#maxrank_list=(  $atmo_max_rank   $ocean_max_rank    )
#incrank_list=(  $atmo_inc_rank   $ocean_inc_rank    )

namelist_list[0]="$atmo_namelist"
modelname_list[0]="atmo"
modeltype_list[0]=1
minrank_list[0]=$atmo_min_rank
maxrank_list[0]=$atmo_max_rank
incrank_list[0]=$atmo_inc_rank

namelist_list[1]="$ocean_namelist"
modelname_list[1]="ocean"
modeltype_list[1]=2
minrank_list[1]=$ocean_min_rank
maxrank_list[1]=$ocean_max_rank
incrank_list[1]=$ocean_inc_rank
#-----------------------------------------------------------------------------
# add standard atmo_hydrostatic_files
. ${thisdir}/add_required_atmo_hydrostatic_files
#-----------------------------------------------------------------------------
