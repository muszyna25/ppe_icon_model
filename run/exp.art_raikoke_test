#______________________________________________________________________________
#
# ART point source volcano test experiment
#
author_list="Ulrike Niemeier, MPIM"
#
# Definition of volcanic eruption

volcano_name="Raikoke"
volcano_longitude="153.24"
volcano_latitude="48.29"
# time format in ISO 8601, UTC
eruption_begin="2013-06-21T18:00:00"
eruption_end="2013-06-22T03:00:00"
# eruption height in [m]
eruption_top_height="14000.0"
eruption_bottom_height="8000.0"
# eruption rate in [kg/s] 
eruption_rate="1.97E4"

#______________________________________________________________________________
#
# (1) Variables provided by the scripting mechanism
#
# EXPNAME               = name of exp. in 'exp.<name>'
#
# basedir               = base directory, where src/, run/ etc exist
# icon_data_poolFolder  = base directory, where grids/, input/ and setup/ exist
# nproma                = blocking length for arrays inner loop length

icon_data_poolFolder="${icon_data_rootFolder:-/pool/data/ICON}/grids/private/mpim/icon_preprocessing/source"

#______________________________________________________________________________
#
# (2) Set variables needed by the scripting mechanism

# horizontal grid(s)
grids_folder=${icon_data_poolFolder}/grids

# domain globe
grid_id=0005
grid_refinement=R02B04
grid_label=G
grid_name=icon_grid_${grid_id}_${grid_refinement}_${grid_label}
#
atmo_dyn_grids="'${grid_name}.nc',"

# start and end date+time
start_date=${start_date:="2013-06-21T00:00:00"}
    end_date=${end_date:="2013-07-21T00:00:00"}

# restart intervals
checkpoint_interval="P1D"
restart_interval="P7D"

# output intervals
output_interval="PT15M"
file_interval="PT15M"

# namelist files
atmo_namelist="NAMELIST_${EXPNAME}_atm"
lnd_namelist="NAMELIST_${EXPNAME}_lnd"
art_namelist="NAMELIST_${EXPNAME}_atm"

#______________________________________________________________________________
#
# (3) Define the model configuration

# JSBACH settings
run_jsbach=yes
jsbach_usecase=jsbach_pfts    # jsbach_lite or jsbach_pfts
jsbach_with_lakes=yes
jsbach_with_hd=no
jsbach_with_carbon=no         # yes needs jsbach_pfts usecase
jsbach_check_wbal=no          # check water balance

# Some further processing for land configuration
# ----------------------------------------------
#
ljsbach=$([ "${run_jsbach:=no}" == yes ] && echo .TRUE. || echo .FALSE. )
llake=$([ "${jsbach_with_lakes:=yes}" == yes ] && echo .TRUE. || echo .FALSE. )
lcarbon=$([ "${jsbach_with_carbon:=yes}" == yes ] && echo .TRUE. || echo .FALSE. )
#
if [[ $jsbach_usecase == *pfts* ]]
then
  pft_file_tag="11pfts_"
else
  pft_file_tag=""
fi

# atmospheric dynamics and physics
# --------------------------------
cat > ${atmo_namelist} << EOF
!
&parallel_nml
 nproma           = ${nproma}
/
&grid_nml
 dynamics_grid_filename = ${atmo_dyn_grids}
/
&run_nml
 num_lev          = 47          ! number of full levels
 modelTimeStep    = "PT10M"
 ltestcase        = .FALSE.     ! run testcase
 ldynamics        = .TRUE.      ! dynamics
 ltransport       = .TRUE.      ! transport
 ntracer          = 3           ! number of tracers; 3: hus, clw, cli; 4: hus, clw, cli, o3
 iforcing         = 2           ! 0: none, 1: HS, 2: ECHAM, 3: NWP
 output           = 'nml'
 msg_level        = 15          ! level of details report during integration 
 restart_filename = "${EXPNAME}_restart_atm_<rsttime>.nc"
 activate_sync_timers = .TRUE.
 lart = .True.
/
&extpar_nml
 itopo            = 1           ! 1: read topography from the grid file
 l_emiss          = .FALSE.
/
&initicon_nml
 init_mode        = 2           ! 2: initialize from IFS analysis
 ifs2icon_filename= "ifs2icon.nc"
/
&nonhydrostatic_nml
 ndyn_substeps    = 5           ! dtime/dt_dyn
 damp_height      = 50000.      ! [m]
 rayleigh_coeff   = 0.10
 vwind_offctr     = 0.2
 divdamp_fac      = 0.004
/
&interpol_nml
 rbf_scale_mode_ll = 1
/
&sleve_nml
 min_lay_thckn    = 40.         ! [m]
 top_height       = 83000.      ! [m]
 stretch_fac      = 0.9
 decay_scale_1    = 4000.       ! [m]
 decay_scale_2    = 2500.       ! [m]
 decay_exp        = 1.2
 flat_height      = 16000.      ! [m]
/
&diffusion_nml
/
&transport_nml
!                   hus,clw,cli
 ivadv_tracer     =   3,  3,  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
 itype_hlimit     =   3,  4,  4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
 ihadv_tracer     =  52,  2,  2, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22
/
&echam_phy_nml
!
! domain 1
! --------
!
! atmospheric physics (""=never)
 echam_phy_config(1)%dt_rad = "PT2H"
 echam_phy_config(1)%dt_vdf = "PT10M"
 echam_phy_config(1)%dt_cnv = "PT10M"
 echam_phy_config(1)%dt_cld = "PT10M"
 echam_phy_config(1)%dt_gwd = "PT10M"
 echam_phy_config(1)%dt_sso = "PT10M"
!
! atmospheric chemistry (""=never)
 echam_phy_config(1)%dt_mox = ""
 echam_phy_config(1)%dt_car = ""
 echam_phy_config(1)%dt_art = "PT10M"
!
! surface (.TRUE. or .FALSE.)
 echam_phy_config(1)%ljsb   = ${ljsbach}
 echam_phy_config(1)%lamip  = .TRUE.
 echam_phy_config(1)%lice   = .TRUE.
 echam_phy_config(1)%lmlo   = .FALSE.
 echam_phy_config(1)%llake  = ${llake}
!
/
&echam_rad_nml
!
! domain 1
! --------
!
 echam_rad_config(1)%isolrad    =  1
 echam_rad_config(1)%irad_h2o   =  1
 echam_rad_config(1)%irad_co2   =  4
 echam_rad_config(1)%irad_ch4   =  4
 echam_rad_config(1)%irad_n2o   =  4
 echam_rad_config(1)%irad_o3    =  8
 echam_rad_config(1)%irad_o2    =  2
 echam_rad_config(1)%irad_cfc11 =  4
 echam_rad_config(1)%irad_cfc12 =  4
 echam_rad_config(1)%irad_aero  = 18
 echam_rad_config(1)%ighg       =  1
/
&echam_gwd_nml
/
&echam_sso_nml
/
&echam_vdf_nml
/
&echam_cnv_nml
/
&echam_cld_nml
/
&sea_ice_nml
/
EOF

#______________________________________________________________________________
# ART aerosol
#
# definition of filenames for the runscript
#    the entries in ART namelists to define filenames are:

ART_aerosol_definition_file="tracers_ash.xml"
ART_modes_definition_file="modes.xml"
ART_coagulation_definition_file="coagulate.xml" 
ART_point_source_definition_file="pntSrc_${volcano_name}.xml" 
#______________________________________________________________________________
#
cat > $ART_point_source_definition_file << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tracers SYSTEM "sources_selTrnsp.dtd">
  
<sources>
    <pntSrc id="${volcano_name}-ashacc">
    <lon type="real">${volcano_longitude}</lon>
    <lat type="real">${volcano_latitude}</lat>
    <substance type="char">ash_insol_acc</substance>
    <dg3_emiss type="real">0.8E-6</dg3_emiss>
    <sigma_emiss type="real">1.4</sigma_emiss>
    <source_strength type="real">${eruption_rate}</source_strength>
    <height type="real">${eruption_top_height}</height>
    <height_bot type="real">${eruption_bottom_height}</height_bot>
    <unit type="char">kg s-1</unit>
    <startTime type="char">${eruption_begin}</startTime>
    <endTime type="char">${eruption_end}</endTime>
  </pntSrc>
  <pntSrc id="${volcano_name}-ashcoa">
    <lon type="real">${volcano_longitude}</lon>
    <lat type="real">${volcano_latitude}</lat>
    <substance type="char">ash_insol_coa</substance>
    <dg3_emiss type="real">2.98E-6</dg3_emiss>
    <sigma_emiss type="real">1.4</sigma_emiss> 
    <source_strength type="real">${eruption_rate}</source_strength>
    <height type="real">${eruption_top_height}</height>
    <height_bot type="real">${eruption_bottom_height}</height_bot>
    <unit type="char">kg s-1</unit>
    <startTime type="char">${eruption_begin}</startTime>
    <endTime type="char">${eruption_end}</endTime>
  </pntSrc>
  <pntSrc id="${volcano_name}-ashgiant">
    <lon type="real">${volcano_longitude}</lon>
    <lat type="real">${volcano_latitude}</lat>
    <substance type="char">ash_giant</substance>
    <dg3_emiss type="real">11.35E-6</dg3_emiss>
    <sigma_emiss type="real">1. 4</sigma_emiss>
    <source_strength type="real">${eruption_rate}</source_strength>
    <height type="real">${eruption_top_height}</height>
    <height_bot type="real">${eruption_bottom_height}</height_bot>
    <unit type="char">kg s-1</unit>
    <startTime type="char">${eruption_begin}</startTime>
    <endTime type="char">${eruption_end}</endTime>
  </pntSrc>
</sources>
EOF
#______________________________________________________________________________
#
cat > $ART_aerosol_definition_file << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tracers SYSTEM "tracers.dtd">

<tracers>
  <aerosol id="nmb_sol_ait">
    <moment type="int">0</moment>
    <mode type="char">sol_ait</mode>
    <unit type="char">kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="so4_sol_ait">
    <moment type="int">3</moment>
    <mode type="char">sol_ait</mode>
    <sol type="real">1.</sol>
    <mol_weight type="real">96.0576E-3</mol_weight>
    <rho type="real">1.8E3</rho>
    <unit type="char">mug kg-1</unit>
    <transport type="char">stdaero</transport>
    <inucleation type="int">1</inucleation>
  </aerosol>
  <aerosol id="nmb_sol_acc">
    <moment type="int">0</moment>
    <mode type="char">sol_acc</mode>
    <unit type="char">kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="so4_sol_acc">
    <moment type="int">3</moment>
    <mode type="char">sol_acc</mode>
    <sol type="real">1.</sol>
    <mol_weight type="real">96.0576E-3</mol_weight>
    <rho type="real">1.8E3</rho>
    <unit type="char">mug kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="nmb_mixed_acc">
    <moment type="int">0</moment>
    <mode type="char">mixed_acc</mode>
    <unit type="char">kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="so4_mixed_acc">
    <moment type="int">3</moment>
    <mode type="char">mixed_acc</mode>
    <sol type="real">1.</sol>
    <mol_weight type="real">96.0576E-3</mol_weight>
    <rho type="real">1.8E3</rho>
    <unit type="char">mug kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="ash_mixed_acc">
    <moment type="int">3</moment>
    <mode type="char">mixed_acc</mode>
    <sol type="real">0.</sol>
    <mol_weight type="real">50.00E-3</mol_weight>
    <rho type="real">2.650E3</rho>
    <unit type="char">mug kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="nmb_mixed_coa">
    <moment type="int">0</moment>
    <mode type="char">mixed_coa</mode>
    <unit type="char">kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="so4_mixed_coa">
    <moment type="int">3</moment>
    <mode type="char">mixed_coa</mode>
    <sol type="real">1.</sol>
    <mol_weight type="real">96.0576E-3</mol_weight>
    <rho type="real">1.8E3</rho>
    <unit type="char">mug kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="ash_mixed_coa">
    <moment type="int">3</moment>
    <mode type="char">mixed_coa</mode>
    <sol type="real">0.</sol>
    <mol_weight type="real">50.00E-3</mol_weight>
    <rho type="real">2.650E3</rho>
    <unit type="char">mug kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="nmb_insol_acc">
    <moment type="int">0</moment>
    <mode type="char">insol_acc</mode>
    <unit type="char">kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="so4_insol_acc">
    <moment type="int">3</moment>
    <mode type="char">insol_acc</mode>
    <sol type="real">1.</sol>
    <mol_weight type="real">96.0576E-3</mol_weight>
    <rho type="real">1.8E3</rho>
    <unit type="char">mug kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="ash_insol_acc">
    <moment type="int">3</moment>
    <mode type="char">insol_acc</mode>
    <sol type="real">0.</sol>
    <mol_weight type="real">50.00E-3</mol_weight>
    <rho type="real">2.650E3</rho>
    <unit type="char">mug kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="nmb_insol_coa">
    <moment type="int">0</moment>
    <mode type="char">insol_coa</mode>
    <unit type="char">kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="so4_insol_coa">
    <moment type="int">3</moment>
    <mode type="char">insol_coa</mode>
    <sol type="real">1.</sol>
    <mol_weight type="real">96.0576E-3</mol_weight>
    <rho type="real">1.8E3</rho>
    <unit type="char">mug kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="ash_insol_coa">
    <moment type="int">3</moment>
    <mode type="char">insol_coa</mode>
    <sol type="real">0.</sol>
    <mol_weight type="real">50.00E-3</mol_weight>
    <rho type="real">2.650E3</rho>
    <unit type="char">mug kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="nmb_giant">
    <moment type="int">0</moment>
    <mode type="char">giant</mode>
    <unit type="char">kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
  <aerosol id="ash_giant">
    <moment type="int">3</moment>
    <mode type="char">giant</mode>
    <sol type="real">0.</sol>
    <mol_weight type="real">50.00E-3</mol_weight>
    <rho type="real">2.650E3</rho>
    <unit type="char">mug kg-1</unit>
    <transport type="char">stdaero</transport>
  </aerosol>
</tracers>
EOF
#______________________________________________________________________________
#
cat > $ART_modes_definition_file << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE modes SYSTEM "modes.dtd">

<modes>
  <aerosol id="sol_ait">
    <kind type="char">2mom</kind>
    <d_gn type="real">0.01E-6</d_gn>
    <sigma_g type="real">1.7</sigma_g>
    <shift2larger type="char">sol_acc</shift2larger>
    <shift_diam type="real">0.03E-6</shift_diam>
    <condensation type="int">1</condensation>
    <icoag type="int">1</icoag>
  </aerosol>
  <aerosol id="sol_acc">
    <kind type="char">2mom</kind>
    <d_gn type="real">0.2E-6</d_gn>
    <sigma_g type="real">2.0</sigma_g>
    <condensation type="int">1</condensation>
    <icoag type="int">1</icoag>
  </aerosol>
  <aerosol id="insol_acc">
    <kind type="char">2mom</kind>
    <d_gn type="real">0.2E-6</d_gn>
    <sigma_g type="real">2.0</sigma_g>
    <condensation type="int">1</condensation>
    <shift2mixed type="char">mixed_acc</shift2mixed>
    <icoag type="int">1</icoag>
  </aerosol>
  <aerosol id="mixed_acc">
    <kind type="char">2mom</kind>
    <d_gn type="real">0.2E-6</d_gn>
    <sigma_g type="real">2.</sigma_g>
    <condensation type="int">1</condensation>
    <icoag type="int">1</icoag>
  </aerosol>
  <aerosol id="insol_coa">
    <kind type="char">2mom</kind>
    <d_gn type="real">2.0E-6</d_gn>
    <sigma_g type="real">2.2</sigma_g>
    <condensation type="int">1</condensation>
    <shift2mixed type="char">mixed_coa</shift2mixed>
    <icoag type="int">1</icoag>
  </aerosol>
  <aerosol id="mixed_coa">
    <kind type="char">2mom</kind>
    <d_gn type="real">2.0E-6</d_gn>
    <sigma_g type="real">2.2</sigma_g>
    <condensation type="int">1</condensation>
    <icoag type="int">1</icoag>
  </aerosol>
  <aerosol id="giant">
    <kind type="char">2mom</kind>
    <d_gn type="real">1.200E-5</d_gn>
    <sigma_g type="real">2.0</sigma_g>
    <condensation type="int">0</condensation>
    <icoag type="int">0</icoag>
  </aerosol>
</modes>
EOF
#______________________________________________________________________________
#
cat > $ART_coagulation_definition_file << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE coagulate SYSTEM "coagulate.dtd">

<coagulate>
  <smallmode id="sol_ait">
    <nmodes type="int">6</nmodes>
    <bigmode id="sol_ait" type="char">sol_ait</bigmode>
    <bigmode id="sol_acc" type="char">sol_acc</bigmode>
    <bigmode id="insol_acc" type="char">mixed_acc</bigmode>
    <bigmode id="mixed_acc" type="char">mixed_acc</bigmode>
    <bigmode id="insol_coa" type="char">mixed_coa</bigmode>
    <bigmode id="mixed_coa" type="char">mixed_coa</bigmode>
  </smallmode>
  <smallmode id="sol_acc">
    <nmodes type="int">5</nmodes>
    <bigmode id="sol_acc" type="char">sol_acc</bigmode>
    <bigmode id="insol_acc" type="char">mixed_acc</bigmode>
    <bigmode id="mixed_acc" type="char">mixed_acc</bigmode>
    <bigmode id="insol_coa" type="char">mixed_coa</bigmode>
    <bigmode id="mixed_coa" type="char">mixed_coa</bigmode>
  </smallmode>
  <smallmode id="insol_acc">
    <nmodes type="int">4</nmodes>
    <bigmode id="insol_acc" type="char">insol_acc</bigmode>
    <bigmode id="mixed_acc" type="char">mixed_acc</bigmode>
    <bigmode id="insol_coa" type="char">insol_coa</bigmode>
    <bigmode id="mixed_coa" type="char">mixed_coa</bigmode>
  </smallmode>
  <smallmode id="mixed_acc">
    <nmodes type="int">3</nmodes>
    <bigmode id="mixed_acc" type="char">mixed_acc</bigmode>
    <bigmode id="insol_coa" type="char">mixed_coa</bigmode>
    <bigmode id="mixed_coa" type="char">mixed_coa</bigmode>
  </smallmode>
  <smallmode id="insol_coa">
    <nmodes type="int">2</nmodes>
    <bigmode id="insol_coa" type="char">insol_coa</bigmode>
    <bigmode id="mixed_coa" type="char">mixed_coa</bigmode>
  </smallmode>
  <smallmode id="mixed_coa">
    <nmodes type="int">1</nmodes>
    <bigmode id="mixed_coa" type="char">mixed_coa</bigmode>
  </smallmode>
</coagulate>
EOF
#______________________________________________________________________________



# namelist

cat >> $art_namelist << EOF
&art_nml
lart_aerosol     = .TRUE.
lart_pntSrc      = .TRUE.
iart_volcano     = 0
cart_aerosol_xml = "${ART_aerosol_definition_file}"
cart_modes_xml   = "${ART_modes_definition_file}"
cart_coag_xml    = "${ART_coagulation_definition_file}"
cart_pntSrc_xml  = "${ART_point_source_definition_file}"
/
EOF

# land surface and soil
# ---------------------
cat > ${lnd_namelist} << EOF
&jsb_model_nml
  usecase         = "${jsbach_usecase}"
  use_lakes       = ${llake}
  fract_filename  = "bc_land_frac.nc"
  output_tiles    = ${output_tiles}     ! List of tiles to output
/
&jsb_seb_nml
  bc_filename     = 'bc_land_phys.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_rad_nml
  use_alb_veg_simple = .FALSE.          ! Use TRUE for jsbach_lite, FALSE for jsbach_pfts
  bc_filename     = 'bc_land_phys.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_turb_nml
  bc_filename     = 'bc_land_phys.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_sse_nml
  l_heat_cap_map  = .FALSE.
  l_heat_cond_map = .FALSE.
  l_heat_cap_dyn  = .FALSE.
  l_heat_cond_dyn = .FALSE.
  l_snow          = .TRUE.
  l_dynsnow       = .TRUE.
  l_freeze        = .TRUE.
  l_supercool     = .TRUE.
  bc_filename     = 'bc_land_soil.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_hydro_nml
  l_organic       = .FALSE.
  bc_filename     = 'bc_land_soil.nc'
  ic_filename     = 'ic_land_soil.nc'
  bc_sso_filename = 'bc_land_sso.nc'
/
&jsb_assimi_nml
  active          = .TRUE.              ! Use FALSE for jsbach_lite, TRUE for jsbach_pfts
/
&jsb_pheno_nml
  scheme          = 'logrop'            ! scheme = logrop / climatology; use climatology for jsbach_lite
  bc_filename     = 'bc_land_phys.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_carbon_nml
  active                 = ${lcarbon}
  bc_filename            = 'bc_land_carbon.nc'
  ic_filename            = 'ic_land_carbon.nc'
  read_cpools            = .FALSE.
  !fire_frac_wood_2_atmos = 0.2
/
&jsb_fuel_nml
  active                 = ${lcarbon}
  fuel_algorithm         = 1
/
&jsb_disturb_nml
  active                  = .FALSE.
  ic_filename             = 'ic_land_soil.nc'
  bc_filename             = 'bc_land_phys.nc'
  fire_algorithm          = 1
  windbreak_algorithm     = 1
  lburn_pasture           = .FALSE.
  !fire_litter_threshold  = 16.67
  !fire_rel_hum_threshold = 70.0
  !fire_minimum_woody     = 0.002
  !fire_minimum_grass     = 0.006
  !fire_tau_woody         = 6.0
  !fire_tau_grass         = 2.0
  !wnd_threshold          = 2.25
  !wnd_damage_scale       = 5.e-03
/
EOF
if [[ ${jsbach_with_hd} = yes ]]
then
  cat >> ${lnd_namelist} << EOF
&jsb_hd_nml
  active               = .TRUE.
  routing_scheme       = 'full'
  bc_filename          = 'bc_land_hd.nc'
  diag_water_budget    = .TRUE.
  debug_hd             = .FALSE.
  enforce_water_budget = .TRUE.         ! True: stop in case of water conservation problem
/
EOF
fi

#______________________________________________________________________________
#
# (4) Define the input

# model files
#
add_link_file ${basedir}/data/lsdata.nc                                 ./
add_link_file ${basedir}/data/ECHAM6_CldOptProps.nc                     ./

# namelist files
#
add_required_file ${basedir}/run/${atmo_namelist}                       ./
add_required_file ${basedir}/run/${lnd_namelist}                        ./
if [[ "${atm_namelist}" != "art_namelist" ]]
then
    add_required_file ${basedir}/run/${art_namelist}                    ./
fi
add_required_file ${basedir}/run/${ART_aerosol_definition_file}         ./
add_required_file ${basedir}/run/${ART_modes_definition_file}           ./
add_required_file ${basedir}/run/${ART_coagulation_definition_file}     ./
add_required_file ${basedir}/run/${ART_point_source_definition_file}    ./

# dictionary file for output variable names
#
dict_file="dict.${EXPNAME}"
cat dict.iconam.mpim  > ${dict_file}
add_required_file ${basedir}/run/${dict_file}                           ./

# initial conditions
#
# - atmosphere: ECMWF analysis, 1979-01-01T00:00:00Z
datadir=${icon_data_poolFolder}/initial_condition
add_link_file $datadir/ifs2icon_1979010100_${grid_refinement}_${grid_label}.nc ./ifs2icon.nc
#
# - land: source?, date+time?
datadir=${icon_data_poolFolder}/preliminary_land/r0002/${grid_refinement}/land
add_link_file ${datadir}/ic_land_soil_1976.nc                           ./ic_land_soil.nc
# added in namelist, but not active and not yet available (2017-Dec-07)
#add_link_file ${datadir}/ic_land_carbon_1976.nc                         ./ic_land_carbon.nc

# boundary conditions
#
# range of years for yearly files
# assume start_date and end_date have the format yyyy-...
start_year=$(( ${start_date%%-*} - 1 ))
end_year=$(( ${end_date%%-*} + 1 ))
#
# - well mixed greenhouse gases
datadir=${icon_data_poolFolder}/greenhouse_gases
add_link_file $datadir/greenhouse_historical.nc                         ./bc_greenhouse_gases.nc
#
# - ozone
# -- for irad_o3=8
year=$start_year
while [[ $year -le $end_year ]]
do
  if [[ $year -le 2014 ]]
  then
    datadir=${icon_data_poolFolder}/ozone/cmip6/${grid_refinement}
    add_link_file $datadir/bc_ozone_historical_${year}.nc               ./bc_ozone_${year}.nc
  else
    datadir=${icon_data_poolFolder}/ozone/cmip6/${grid_refinement}
    add_link_file $datadir/bc_ozone_historical_2014.nc                  ./bc_ozone_${year}.nc
  fi
  (( year = year+1 ))
done
# -- for irad_o3=1 with Cariolle ozone chemistry
datadir=${icon_data_poolFolder}/greenhouse_gases
add_link_file $datadir/bc_ozone_cariolle.nc                             ./cariolle_coeff.nc
#
# - tropospheric anthropogenic aerosols, simple plumes
add_link_file ${basedir}/data/MACv2.0-SP_v1.nc                          ./MACv2.0-SP_v1.nc
#
# - Kinne background aerosols are needed for the year 1850 (irad_aero=18)
#
datadir=${icon_data_poolFolder}/aerosol_29-06-2018/kinne/${grid_refinement}_${grid_label}
#
add_link_file $datadir/bc_aeropt_kinne_lw_b16_coa.nc                    ./bc_aeropt_kinne_lw_b16_coa.nc
add_link_file $datadir/bc_aeropt_kinne_sw_b14_coa.nc                    ./bc_aeropt_kinne_sw_b14_coa.nc
add_link_file $datadir/bc_aeropt_kinne_sw_b14_fin_1850.nc               ./bc_aeropt_kinne_sw_b14_fin.nc
#
# - stratospheric aerosol
year=$start_year
while [[ $year -le $end_year ]]
do
  if [[ $year -le 1999 ]]
  then
    datadir=${icon_data_poolFolder}/aerosol/stenchikov
    add_link_file $datadir/bc_aeropt_stenchikov_lw_b16_sw_b14_${year}.nc  ./bc_aeropt_stenchikov_lw_b16_sw_b14_${year}.nc
  else
    datadir=${icon_data_poolFolder}/aerosol/stenchikov
    add_link_file $datadir/bc_aeropt_stenchikov_lw_b16_sw_b14_1999.nc     ./bc_aeropt_stenchikov_lw_b16_sw_b14_${year}.nc
  fi
  (( year = year+1 ))
done
#
# - sst and sic
datadir=${icon_data_poolFolder}/sst_and_seaice/1.1.2
add_link_file $datadir/sic_${grid_refinement}.nc                        ./bc_sic.nc
add_link_file $datadir/sst_${grid_refinement}.nc                        ./bc_sst.nc
#
# - ssi and tsi
datadir=${icon_data_poolFolder}/solar_radiation/3.2
add_link_file $datadir/swflux_14band_cmip6_1850-2299-v3.2.nc                   ./bc_solar_irradiance_sw_b14.nc
#
# - topography and sso parameters
datadir=${icon_data_poolFolder}/preliminary_land_22-02-2018/${grid_refinement}_${grid_label}/land
add_link_file $datadir/bc_land_sso_1976.nc                              ./bc_land_sso.nc
#
# - land parameters
datadir=${icon_data_poolFolder}/preliminary_land/r0002/${grid_refinement}_${grid_label}/land
add_link_file $datadir/bc_land_frac_${pft_file_tag}1976.nc              ./bc_land_frac.nc
add_link_file $datadir/bc_land_phys_1976.nc                             ./bc_land_phys.nc
add_link_file $datadir/bc_land_soil_1976.nc                             ./bc_land_soil.nc
# added in namelist, but not active and not yet available (2017-Dec-07)
#ln -sf $datadir/bc_land_carbon_1976.nc                           ./bc_land_carbon.nc
# The following bc_land_hd-file is not yet available...
if [[ ${jsbach_with_hd} = yes ]]
then
    datadir=${icon_data_poolFolder}/preliminary_land/r0002/${grid_refinement}_${grid_label}/land    
    add_link_file $datadir/bc_land_hd.nc                                ./bc_land_hd.nc
fi
#
# - lctlib file for JSBACH
add_link_file ${basedir}/externals/jsbach/data/lctlib_nlct21.def        ./lctlib_nlct21.def

# - ART input

datadir=${icon_data_poolFolder}/preliminary_art
add_link_file ${datadir}/mozart_coord.nc                                ./
add_link_file ${datadir}/Linoz2004Br.dat                                ./
add_link_file ${datadir}/Simnoy2002.dat                                 ./

add_link_file ${datadir}/photo_ctrl/FJX_scat-aer.dat                    ./
add_link_file ${datadir}/photo_ctrl/FJX_j2j.dat                         ./
add_link_file ${datadir}/photo_ctrl/FJX_scat-cld.dat                    ./
add_link_file ${datadir}/photo_ctrl/FJX_scat-ssa.dat                    ./
add_link_file ${datadir}/photo_ctrl/FJX_scat-UMa.dat                    ./
add_link_file ${datadir}/photo_ctrl/FJX_spec_extended.dat               ./
add_link_file ${datadir}/photo_ctrl/FJX_spec.dat                        ./
add_link_file ${datadir}/photo_ctrl/atmos_std.dat                       ./
add_link_file ${datadir}/photo_ctrl/atmos_h2och4.dat                    ./
add_link_file ${datadir}/photo_ctrl/FJX_j2j_extended.dat                ./
add_link_file ${datadir}/photo_ctrl/FJX_spec_extended.dat               ./
add_link_file ${datadir}/photo_ctrl/FJX_spec_extended_lyman.dat         ./

#______________________________________________________________________________
#
# (5) Define the output

# Parameters for all output files
# -------------------------------
cat >> ${atmo_namelist} << EOF
&io_nml
 output_nml_dict  = "${dict_file}"
 netcdf_dict      = "${dict_file}"
 lnetcdf_flt64_output = .TRUE.
 itype_pres_msl   = 4
 restart_file_type= 5
 !restart_write_mode = "joint procs multifile"    !not necessary/useful in default r2b4 setup
/
EOF

# Define output files
# -------------------
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>
#
# 3-dimensional files include 'ps' and 'pfull' to allow the vertical
# interpolation to pressure levels by cdo ap2pl.

# 3-dimensional files include 'ps' and 'pfull' to allow the vertical
# interpolation to pressure levels by cdo ap2pl.

output_atm_vgrid=yes
#
if [[ "$output_atm_vgrid" == "yes" ]]
then
    #
    cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_vgrid"
 filename_format  = "<output_filename>_<levtype_l>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"       ! output_start = output_end
 output_end       = "${start_date}"       ! --> write once only irrespective of
 output_interval  = "${output_interval}"  !     the output interval and
 file_interval    = "${file_interval}"    !     the file interval
 ml_varlist       = 'zghalf'  , 'zg'      , 'dzghalf'
/
EOF
fi

output_atm_cgrid=yes
#
if [[ "$output_atm_cgrid" == "yes" ]]
then
    #
    cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_cgrid"
 filename_format  = "<output_filename>_<levtype_l>"
 filetype         = 4
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"       ! output_start = output_end
 output_end       = "${start_date}"       ! --> write once only irrespective of
 output_interval  = "${output_interval}"  !     the output interval and
 file_interval    = "${file_interval}"    !     the file interval
 ml_varlist       = 'clon'    , 'clat'    , 'areacella',
                    'zghalf'  , 'zg'      ,
/
EOF
fi

output_atm_3d=yes
#
if [[ "$output_atm_3d" == "yes" ]]
then
    #
    cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_3d_old"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 4
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'      , 'pfull'   , 'zg'      ,
                    'rho'     , 'ta'      ,
                    'ua'      , 'va'      , 'wap'     ,
                    'hus'     , 'clw'     , 'cli'     ,
                    'hur'     , 'cl'      ,
                    !'qo3_phy' ,
/
EOF
fi

output_atm_2d=yes
#
if [[ "$output_atm_2d" == "yes" ]]
then
    #
    cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 4
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'      , 'psl'     ,
                    'cosmu0'  ,
                    'rsdt'    ,
                    'rsut'    , 'rsutcs'  , 'rlut'    , 'rlutcs'  ,
                    'rsds'    , 'rsdscs'  , 'rlds'    , 'rldscs'  ,
                    'rsus'    , 'rsuscs'  , 'rlus'    ,
                    'ts'      ,
                    'sic'     , 'sit'     ,
                    'albedo'  ,
                    'clt'     ,
                    'prlr'    , 'prls'    , 'prcr'    , 'prcs'    ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'tauu'    , 'tauv'    ,
                    'tauu_sso', 'tauv_sso', 'diss_sso',
                    'sfcwind' , 'uas'     , 'vas'     ,
                    'tas'     , 'dew2'    ,
                    'ptp'     ,
/
EOF
fi

output_phy_3d=yes
#
if [[ "$output_phy_3d" == "yes" ]]
then
    #
    cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_phy_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 4
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'           , 'pfull'        , 'zg'           ,
                    'tend_ta'      , 'tend_ta_dyn'  , 'tend_ta_phy'  ,
                    'tend_ta_rlw'  , 'tend_ta_rsw'  ,
                    'tend_ta_vdf'  , 'tend_ta_gwd'  , 'tend_ta_sso'  ,
                    'tend_ta_cnv'  , 'tend_ta_cld'  , 
                    'tend_ua'      , 'tend_ua_dyn'  , 'tend_ua_phy'  ,
                    'tend_ua_vdf'  , 'tend_ua_gwd'  , 'tend_ua_sso'  ,
                    'tend_ua_cnv'  , 
                    'tend_va'      , 'tend_va_dyn'  , 'tend_va_phy'  ,
                    'tend_va_vdf'  , 'tend_va_gwd'  , 'tend_va_sso'  ,
                    'tend_va_cnv'  ,
                    'tend_qhus'    , 'tend_qhus_dyn', 'tend_qhus_phy',
                    'tend_qhus_cld', 'tend_qhus_cnv', 'tend_qhus_vdf',
                    !'tend_qhus_mox'
/
EOF
fi

output_trc_3d=yes
#
if [[ "$output_trc_3d" == "yes" ]]
then
    #
    cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_trc_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 4
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'        , 'pfull'     , 'zg'        ,
                    'mairvi_phy',
                    'mdryvi_phy',
                    'mh2ovi_phy',
                    'qhus_phy'  , 'mhusvi_phy', 'tend_mhusvi_phy',
                    'qclw_phy'  , 'mclwvi_phy', 'tend_mclwvi_phy',
                    'qcli_phy'  , 'mclivi_phy', 'tend_mclivi_phy',
                    !'qo3_phy'   , 'mo3vi_phy' , 'tend_mo3vi_phy',
/
EOF
fi

output_aer_3d=no # "yes" needs lrad_aero_diag=.TRUE. in radiation_nml
#
if [[ "$output_aer_3d" == "yes" ]]
then
    #
    cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_aer_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 4
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'          , 'pfull'       , 'zg'          ,
                    'aer_aod_533' , 'aer_ssa_533',  'aer_asy_533' , 
                    'aer_aod_2325', 'aer_ssa_2325', 'aer_asy_2325', 
                    'aer_aod_9731',
/
EOF
fi

# minimal jsbach output for running atm_amip experiment
# for more jsbach output see exp.atm_amip_les
#
output_lnd=yes
#
if [[ "$output_lnd" == "yes" ]]
then
    cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_lnd"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 4
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'pheno_lai_box'         , 'pheno_fract_fpc_veg'         , 'hydro_fract_water_box' ,
                    'hydro_fract_snow_box'  , 'hydro_w_skin_box'            , 'hydro_w_snow_box'      ,
                    'hydro_w_soil_column_box'
/
EOF
fi

# basic ART aerosol output
#
cat >> ${atmo_namelist} << EOF        
&output_nml
 output_filename            = '${EXPNAME}-aerosol-remap'
 filetype                   =  5
 filename_format            = "<output_filename>_<levtype_l>_<datetime2>"
 output_grid                = .TRUE.
 output_start               = "${start_date}"
 output_end                 = "${end_date}"
 output_interval            = "${output_interval}"
 file_interval              = "${file_interval}"
 include_last               = .FALSE.
 ml_varlist                 = 'group:ART_AEROSOL'
 remap                      = 1
 reg_lon_def                = -180.,0.5,179.5
 reg_lat_def                = 90.,-0.5, -90.
/
EOF


