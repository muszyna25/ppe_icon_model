#=============================================================================
#
# This section of the run script defines the experiment.
# The specifications are passed by namelist to the program.
# For a complete list see Namelist_overview.pdf
#
# Marco Giorgetta, MPI-M, 2011-01-29
# Hui Wan,         MPI-M, 2010-08-17
# Leonidas Linardakis, MPI-M, 2011-07-20
#
#-----------------------------------------------------------------------------
#
# Basic specifications of the simulation
# --------------------------------------
#
# These variables are set in the header section of the completed run script:
#   EXPNAME = experiment name
#   nproma  = array blocking length / inner loop length
# They may be overwritten here
#
#-----------------------------------------------------------------------------
# The following information is included to present some information on the buildbot-html main page
#
# _bb_table_Description_  coupled aqua planet, ocean with flat bottom
# _bb_table_Model_        hydrost. atm + ocean
# _bb_table_Grid_         triangle
#-----------------------------------------------------------------------------
#
# Number of ocean processes
#
mpi_ocean_procs=1
#
#-----------------------------------------------------------------------------
if [ $mpi_total_procs -lt `expr $mpi_ocean_procs + 1` ] ; then
   echo "The coupled runs require at least 2 mpi procs. Exiting."
   check_error 0
   exit
fi
if [ $OMP_NUM_THREADS -gt 1 ] ; then
   echo "The coupled runs will not run in OpenMP mode . Exiting."
   check_error 0
   exit
fi

#-----------------------------------------------------------------------------
# ATMO
#-----------------------------------------------------------------------------
# The following values must be set here as shell variables so that they can be used
# also in the executing section of the completed run script
#-----------------------------------------------------------------------------
# the namelist filename
#
atmo_namelist=NAMELIST_${EXPNAME}_atmo
#
#-----------------------------------------------------------------------------
# global timing
#
start_date="2000-01-01T00:00:00Z"
#
ndays=1
ndays_restart=${ndays}
#
dtime_atmo=300
dtime_ocean=1800
dt_coupling=1800
dt_restart=`expr ${ndays_restart} \* 86400`
dt_checkpoint=$dt_restart  # checkpointing not yet supported for coupling fields
#
#-----------------------------------------------------------------------------
#
# model timing
#
dtime=$dtime_atmo
nsteps=`expr ${ndays} \* 86400 / ${dtime}`
dt_file=`expr ${ndays} \* 86400 ` # 1 file per job
dt_data=`expr 6 \* 3600 `         # write output every 6 hours
dt_rad=7200.                      # compute radiative transfer every other hour
#
#
#-----------------------------------------------------------------------------
#
# model parameters
#
atmo_model_equations=1   # equation system
#                        1=hydrost. atm.
#                        2=non-hydrost. atm., 
#                       -1=shallow water model
#                       -2=hydrost. ocean
nlev=47                  # nlev = number of full levels
iforcing=2               # ECHAM physics
#
#-----------------------------------------------------------------------------
# the grid files
#
grid_ext="aqua_planet"
grid_name="iconR2B04-ocean_${grid_ext}"
ocean_grids="${grid_name}.nc"
#
#-----------------------------------------------------------------------------
atmo_dyn_grids="$ocean_grids"
ozon_file="ape_o3_${grid_name}.nc"
#-----------------------------------------------------------------------------
#
#-----------------------------------------------------------------------------
# write ICON namelist parameters
# ------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#  
cat > $atmo_namelist << EOF
&coupling_mode_nml
  debug_coupler_level = 1
/
&coupling_nml
  name                = 'TAUX'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'TAUY'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'SFWFLX'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
/
&coupling_nml
  name                = 'SFTEMP'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .FALSE.
/
&coupling_nml
  name                = 'THFLX'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .TRUE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'SST'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'OCEANU'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'OCEANV'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'ALBEDO'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  lag                 = 1
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&parallel_nml
 nproma         = ${nproma}
 p_test_run     = .false.
 l_test_openmp  = .false.
 l_log_checks   = .false.
 use_icon_comm  = .true.
 ! l_fast_sum     = .true.
 max_send_recv_buffer_size = 262144
 /
&grid_nml
 cell_type = 3             ! triangular cells
 dynamics_grid_filename = "${atmo_dyn_grids}",
/
&run_nml
 num_lev     = ${nlev}      ! number of full levels of vertical grid
 nsteps      = ${nsteps}    ! number of steps length of run
 dtime       = ${dtime}     ! [s] timestep in seconds
 ltestcase   = .TRUE.       ! run testcase                 --> testcase_ctl
 ldynamics   = .TRUE.       ! dynamics                     --> dynamics_ctl, diffusion_ctl
 ltransport  = .TRUE.       ! switch on tracer transport   --> transport_ctl
 ntracer     = 5            ! number of tracers
 iforcing    = ${iforcing}  ! ECHAM physics                --> echam_phy_nml
 msg_level   = 10           ! detailed report during integration 
 ltimer = .TRUE.
 timers_level = 10
 activate_sync_timers = .TRUE.
/
&ha_testcase_nml
 ctest_name  = 'APE'  ! test case identifier
 ape_sst_case = 'sst_qobs'
 lrh_linear_pres = .TRUE.   ! initial RH is a linear function of pressure
 rh_at_1000hpa   = 0.30     ! [] initial rel. humidity at 1000 hPa 
/
&io_nml
 out_expname      = '${EXPNAME}_atm' ! file name base
 dt_data          = ${dt_data}       ! [s] write output
 dt_file          = ${dt_file}       ! [s] trigger new output file
 dt_checkpoint    = ${dt_checkpoint} ! [s] trigger new restart file
 lwrite_initial   = .FALSE.          ! do/don't write out initial data
 lwrite_radiation = .TRUE.           ! add radiation fields to output
 lwrite_cloud     = .TRUE.           ! add cloud fraction to output
 lwrite_precip    = .TRUE.           ! add precipitation to output
 lwrite_pres      = .FALSE.          ! remove pressure from output
 lwrite_tend_phy  = .FALSE.          ! write out tendencies 
/
&dynamics_nml
 iequations  = ${atmo_model_equations}    ! 1: hydrost. atmosphere
/
&ha_dyn_nml
 ldry_dycore = .FALSE.  ! moist dynamical core
 ! itime_scheme=12   si 2t
 ! si_rtol     = 1.e-4
/
&diffusion_nml
 hdiff_order = 24       ! 2nd order near model top, 4th order on the other levels
 k2_klev_max = 3        ! the 3 highest model levels use 2nd order diffusion
/
&transport_nml
 ctracer_list = 'vwi45' ! water vapour, cloud water, cloud ice, constant field, dummy for ozone
/
&echam_phy_nml
 lcover    = .FALSE.
 lcond     = .TRUE.
 lconv     = .TRUE.
 lvdiff    = .TRUE.
 lrad      = .TRUE.
 lgw_hines = .TRUE.
 dt_rad     = ${dt_rad} ! [s] compute radiative transfer every other hour
/
&echam_conv_nml
/
&radiation_nml
 irad_h2o   = 1         ! prognostic vapor, liquid and ice
 irad_co2   = 2         ! constant co2 vmr
 irad_ch4   = 0         ! switch off ch4
 irad_n2o   = 0         ! switch off n2o
 irad_o3    = 4         ! switch off o3
 irad_o2    = 0         ! switch off o2
 irad_cfc11 = 0         ! switch off cfc11
 irad_cfc12 = 0         ! switch off cfc12
 irad_aero  = 0         ! switch off aerosols
 izenith    = 3         ! circular orbit, no seasonal cycle but with diurnal cycle 
/
EOF
#-----------------------------------------------------------------------------
# OCEAN
#-----------------------------------------------------------------------------
#
# The following values must be set here as shell variables so that they can be used
# also in the executing section of the completed run script
#
#-----------------------------------------------------------------------------
# the namelist filename
#
ocean_namelist=NAMELIST_${EXPNAME}_ocean
#
#-----------------------------------------------------------------------------
# ocean initialization (init_oce=1) needs an additional file for prognostic variables
#
init_oce=0     # 1: use ocean initialization file; 0: init with constants or analytically
#
# prognostic ocean initialization files are named $HGRIDDIR/ts_phc_season-iconR${R}B0{B}-L11.nc
#
#-----------------------------------------------------------------------------
# ocean forcing = 14 is for coupling with the atmosphere, no forcing to be read
#
iforc_oce=14
#
# flux files are named $HGRIDDIR/omip4icon-R${R}B0{B}-monmean.nc
#
#-----------------------------------------------------------------------------
# global timing
start_date="2000-01-01T00:00:00Z"
#
#-----------------------------------------------------------------------------
# model timing
#
dtime=$dtime_ocean   # ocean model timestep [s]
#
# calculate model timesteps using $ndays
#
nsteps=`expr ${ndays} \* 86400 / ${dtime}`
dt_data=`expr 24 \* 3600 `        # write output every 24 hours
dt_file=`expr ${ndays} \* 86400 ` # 1 file per job
#
#-----------------------------------------------------------------------------
# diagnostic output (not in ocean model)
#
#
#-----------------------------------------------------------------------------
# model parameters
ocean_model_equations=-1 # equation system
#
#-----------------------------------------------------------------------------
#
# write ICON namelist parameters
# ------------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#
cat > ${ocean_namelist} << EOF
!
&coupling_mode_nml
  debug_coupler_level = 1
/
&coupling_nml
  name                = 'TAUX'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'TAUY'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'SFWFLX'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
/
&coupling_nml
  name                = 'SFTEMP'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .FALSE.
/
&coupling_nml
  name                = 'THFLX'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'SST'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'OCEANU'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'OCEANV'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
&coupling_nml
  name                = 'ALBEDO'
  dt_model            =  ${dtime}
  dt_coupling         =  ${dt_coupling}
  l_time_average      = .FALSE.
  l_time_accumulation = .FALSE.
  l_diagnostic        = .FALSE.
  l_activated         = .TRUE.
/
!
&parallel_nml
 nproma         = ${nproma}
 p_test_run     = .false.
 l_test_openmp  = .false.
 l_log_checks   = .false.
/
&grid_nml
 dynamics_grid_filename = "${ocean_grids}",
/
&run_nml
 nsteps      = ${nsteps}    ! number of steps length of run
 dtime       = ${dtime}     ! [s] timestep in seconds
 ltimer      = .true. 
/
&dbg_index_nml
  idbg_mxmn=1                     ! initialize MIN/MAX  debug output
  idbg_val =0                     ! initialize one cell debug output
  dbg_lat_in=30.0 dbg_lon_in=-20. ! lat/lon-location of one cell debug output
  str_mod_tst='all', 'module'     ! define modules to print out in debug mode
  idbg_slev=1                     ! initialize MIN/MAX  debug output
  idbg_elev=5                     ! initialize MIN/MAX  debug output
/
&dynamics_nml
 iequations  = ${ocean_model_equations}       ! 1: hydrost. atmosphere
/
&ocean_dynamics_nml
  n_zlev             =   15      ! number of vertical levels and (dzlev_m) thicknesses
  dzlev_m(1:20)      =   50.0,  100.0,  200.0,  300.0,  350.0,  400.0,  400.0,  400.0,  400.0,  400.0,
                        500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0
/
&ocean_physics_nml
  i_sea_ice          =    1      ! 0 = no sea ice; 1 = Winton; 2 = Semtner
  no_tracer          =    2      ! tracer-transport: 0=no transport, 1=temperature, 2=temp. and salinity
  k_veloc_h          = 1.0E+5    ! [m2/s] horizontal viscosity coefficient for velocity
  k_veloc_v          = 1.0E-2    ! [m/s]  vertical viscosity coefficient for velocity
  MAX_VERT_DIFF_VELOC= 1.0       ! max diffusion coeff, used in implicit vertical velocity diffusion
  k_pot_temp_h       = 5.0E+3    ! [m2/s] horizontal viscosity coefficient for temperature
  k_pot_temp_v       = 3.0E-5    ! [m/s]  vertical viscosity coefficient for temperature
  k_sal_h            = 5.0E+3    ! [m2/s] horizontal viscosity coefficient for salinity
  k_sal_v            = 3.0E-5    ! [m/s]  vertical viscosity coefficient for salinity
  MAX_VERT_DIFF_TRAC = 3.0E-3    ! max diffusion coeff, used in implicit vertical tracer diffusion
/
&ocean_forcing_and_init_nml
  iforc_oce          = ${iforc_oce}   ! ocean forcing:
                                 ! NO_FORCING                 = 10
                                 ! FORCING_FROM_COUPLED_FLUX  = 14
  itestcase_oce      =   50      ! 50=zonally homogen temperature for APE SST (Williamson)
  init_oce_prog      = ${init_oce}    ! read ocean initialization file, see above
  idiag_oce          =    0      !  0: no diagnostics; 1: write diagnostics to stderr
  temperature_relaxation= -1     !  0: no relaxation used
                                 !  1: relaxation switched on for reading (init_oce_relax=1) or some testcases only
                                 !  2: use SST read from OMIP/bulk forcing (iforc=12);
                                 !     use atmospheric temperature in case of coupling (iforc=14)
                                 !  3: use initial prognostic T as 2-dim relax, copy SST on tracer_relax(1)
                                 ! -1: use net surface heat flux from atmosphere as boundary condition
  relaxation_param   =    3.0    ! strength of 2-dim relaxation for temperature (months)
                                 ! this value is divided by number of seconds per month (=30*24*3600)
  irelax_2d_S        =    0      ! 2-dim relaxation of salinity - see "temperature_relaxation" for parameter values
  relax_2d_mon_S     =    3.0    ! strength of 2-dim relaxation for salinity (months)
  irelax_3d_T        =    0      ! 3-dim relaxation of temperature (0: no relax) 1-2: not yet used
                                 ! 3: use initial T read with init_oce=1
/
&io_nml
  out_expname = '${EXPNAME}_ocn'  ! file name base
  dt_data     = ${dt_data}        ! [s] write output
  dt_file     = ${dt_file}        ! [s] interval for generation of new output file (3600*24*365 -> 1y)
  dt_checkpoint=${dt_checkpoint}
  lwrite_initial   = .FALSE.      ! do/don't write out initial data
  lkeep_in_sync = .TRUE.          ! sync after each timestep
/
EOF
#-----------------------------------------------------------------------------

if [ $mpi_total_procs -lt 2 ] ; then
  check_error 0 "This setup requires at least 2 mpi processes. Exit"
fi

#-----------------------------------------------------------------------------
#split the number of procs in two for each of the dummy component
ocean_min_rank=`expr ${mpi_total_procs} - ${mpi_ocean_procs}`
ocean_max_rank=`expr ${ocean_min_rank} + ${mpi_ocean_procs} - 1`
ocean_inc_rank=1
atmo_min_rank=0
atmo_max_rank=`expr ${ocean_min_rank} - 1`
atmo_inc_rank=1
#-----------------------------------------------------------------------------
# fill model list
#namelist_list=( "$atmo_namelist"  "$ocean_namelist" )
#modelname_list=(   "atmo"           "ocean"         )
#modeltype_list=(     1                 2            )
#minrank_list=(  $atmo_min_rank   $ocean_min_rank    )
#maxrank_list=(  $atmo_max_rank   $ocean_max_rank    )
#incrank_list=(  $atmo_inc_rank   $ocean_inc_rank    )

namelist_list[0]="$atmo_namelist"
modelname_list[0]="atmo"
modeltype_list[0]=1
minrank_list[0]=$atmo_min_rank
maxrank_list[0]=$atmo_max_rank
incrank_list[0]=$atmo_inc_rank

namelist_list[1]="$ocean_namelist"
modelname_list[1]="ocean"
modeltype_list[1]=2
minrank_list[1]=$ocean_min_rank
maxrank_list[1]=$ocean_max_rank
incrank_list[1]=$ocean_inc_rank
#-----------------------------------------------------------------------------
