#
# ICON experiment configuration
#

VERSION_ = $$Id: DEFAULT.config 7 2021-06-02 13:24:01Z m221078 $$

# Project info

ACCOUNT = read($HOME/.acct)
PROJECT_SUBDIR = $ACCOUNT

# Model configuration

EXP_KIND = "eval('$EXP_TYPE'.rsplit('-',1)[0])"
EXP_QUALITY = "eval('$EXP_TYPE'.rsplit('-',1)[1])"
EXP_OPTIONS =

# Directory structure

use_srcdir = eval(os.path.dirname('$PWD'))
use_builddir = eval(os.path.dirname('$PWD')+'/build')

TOP_SRCDIR = $use_srcdir
DISTDIR =
MODEL_DEFAULT_ROOT =
PREFIX =

MODEL_ROOT = "eval('$TOP_SRCDIR'.split('/$USER/',1)[0]+'/$USER' if '$TOP_SRCDIR'.find('/$USER/')>=0 else '$MODEL_DEFAULT_ROOT' or '$HOME')"
BIN_ROOT = $MODEL_ROOT
SCRIPT_ROOT = $MODEL_ROOT
DATA_ROOT = $MODEL_ROOT
RESTART_ROOT = $DATA_ROOT
WORK_ROOT = $DATA_ROOT
LOG_ROOT = $DATA_ROOT
MON_ROOT = $DATA_ROOT
PARENT_ROOT = $INPUT_ROOT
INPUT_ROOT = /pool/data

MODEL_SUBDIR = "eval('$TOP_SRCDIR'.split('/$USER/',1)[1] if '$TOP_SRCDIR'.find('/$USER/')>=0 else '$TOP_SRCDIR'.split('/')[-1] if '$TOP_SRCDIR' else '$DISTDIR' or 'mpiesm')"
EXP_SUBDIR = $MODEL_SUBDIR/$EXPERIMENTS_SUBDIR/$EXP_ID
EXPERIMENTS_SUBDIR = experiments
BIN_SUBDIR = bin
SCRIPTS_SUBDIR = scripts
DATA_SUBDIR = outdata
RESTART_SUBDIR = restart
WORK_SUBDIR = work
LOG_SUBDIR = log
MON_SUBDIR = monitoring

PARENT_SUBDIR = ICON/restart/r0001

INPUT_SUBDIR = ICON/grids/public/mpim
ATMO_INPUT_SUBDIR = $INPUT_SUBDIR
LAND_INPUT_SUBDIR = $ATMO_INPUT_SUBDIR
HYDRO_INPUT_SUBDIR = $LAND_INPUT_SUBDIR/HD
OCEAN_INPUT_SUBDIR = ICON/oes/input/r0004
OBGC_INPUT_SUBDIR = $OCEAN_INPUT_SUBDIR
COUPLER_INPUT_SUBDIR = $INPUT_SUBDIR

ATMO_SUBDIR =
LAND_SUBDIR =
OCEAN_SUBDIR =
OBGC_SUBDIR =
COUPLER_SUBDIR =

BUILD_DIR = $use_builddir
MODEL_DIR = eval('$TOP_SRCDIR' or '$MODEL_ROOT/$MODEL_SUBDIR')
BIN_DIR = eval('$PREFIX/$BIN_SUBDIR' if '$PREFIX' else '$BUILD_DIR/$BIN_SUBDIR')
SCRIPT_DIR = $SCRIPT_ROOT/$EXP_SUBDIR/$SCRIPTS_SUBDIR
DATA_DIR = $DATA_ROOT/$EXP_SUBDIR/$DATA_SUBDIR
WORK_DIR = $WORK_ROOT/$EXP_SUBDIR/$WORK_SUBDIR
LOG_DIR = $LOG_ROOT/$EXP_SUBDIR/$LOG_SUBDIR
MON_DIR = $MON_ROOT/$MODEL_SUBDIR/$MON_SUBDIR/$EXP_ID

PARENT_DIR = $PARENT_ROOT/$PARENT_SUBDIR/$PARENT_EXP_ID/$RESTART_SUBDIR
ATMO_PARENT_DIR = $PARENT_DIR
LAND_PARENT_DIR = $ATMO_PARENT_DIR
OCEAN_PARENT_DIR = $PARENT_DIR
OBGC_PARENT_DIR = $OCEAN_PARENT_DIR
COUPLER_PARENT_DIR = $PARENT_DIR

RESTART_DIR = $RESTART_ROOT/$EXP_SUBDIR/$RESTART_SUBDIR
ATMO_RESTART_DIR = $RESTART_DIR
LAND_RESTART_DIR = $ATMO_RESTART_DIR
OCEAN_RESTART_DIR = $RESTART_DIR
OBGC_RESTART_DIR = $OCEAN_RESTART_DIR
COUPLER_RESTART_DIR = $RESTART_DIR

INPUT_DIR = $INPUT_ROOT/$INPUT_SUBDIR
ATMO_INPUT_DIR = $INPUT_ROOT/$ATMO_INPUT_SUBDIR
LAND_INPUT_DIR = $INPUT_ROOT/$LAND_INPUT_SUBDIR
HYDRO_INPUT_DIR = $INPUT_ROOT/$HYDRO_INPUT_SUBDIR
OCEAN_INPUT_DIR = $INPUT_ROOT/$OCEAN_INPUT_SUBDIR
OBGC_INPUT_DIR = $INPUT_ROOT/$OBGC_INPUT_SUBDIR
COUPLER_INPUT_DIR = $INPUT_ROOT/$COUPLER_INPUT_SUBDIR

# File names

MODEL_EXE = icon

# Spin-up (parent experiment) configuration

PARENT_EXP_ID =
PARENT_DATE =

ATMO_PARENT_EXP_ID = $PARENT_EXP_ID
ATMO_PARENT_DATE = $PARENT_DATE

LAND_PARENT_EXP_ID = $PARENT_EXP_ID
LAND_PARENT_DATE = $PARENT_DATE

OCEAN_PARENT_EXP_ID = $PARENT_EXP_ID
OCEAN_PARENT_DATE = $PARENT_DATE

OBGC_PARENT_EXP_ID = $PARENT_EXP_ID
OBGC_PARENT_DATE = $PARENT_DATE

COUPLER_PARENT_EXP_ID = $PARENT_EXP_ID
COUPLER_PARENT_DATE = $PARENT_DATE

# Time control

INTERVAL = P1Y
FILE_INTERVAL = ${INTERVAL}T1S
OUTPUT_INTERVAL = P1M

CALENDAR = proleptic gregorian # proleptic gregorian, 365 day year, 360 day year

# Common setup

SCENARIO =
scenario = "eval('$SCENARIO'.translate(None,' .'))"
scn = eval('$scenario'.lower())
SCN = eval('$scenario'.upper())
ssp = eval('$scn'[0:-2])
SSP = eval('$SCN'[0:-2])
rcp = eval('$scn'[-2:])

# Atmosphere setup

ATMO_GRID = "eval('$ATMO_GRID_TYPE'.replace('0', ''))"
atmo_grid = eval('$ATMO_GRID'.lower())
ATMO_GRID_ID3 = eval('$ATMO_GRID_ID'[-3:])

# Land setup

WITH_LAND = true

LAND_OUTPUT = basic  # basic currently overwritten by variable list defined in
                     #  run/standard_experiments/<standard_experiment>.config
LAND_USECASE = jsbach_pfts # jsbach_lite or jsbach_pfts
LAND_WITH_LAKES = true
LAND_REF_YEAR = 1850 # legacy name
LAND_REFERENCE_YEAR = $LAND_REF_YEAR

# Ocean setup

OCEAN_GRID = "eval('$OCEAN_GRID_TYPE'.replace('0', ''))"
ocean_grid = eval('$OCEAN_GRID'.lower())

OCEAN_LAYER_DEPTHS =
OCEAN_LEVELS = eval(len([$OCEAN_LAYER_DEPTHS]))

# Ocean biogeochemistry setup

WITH_OBGC = false


# Pre-declare variables used to define others

INITIAL_DATE = # Make sure 'initial_year' can be evaluated
ATMO_LEVELS = # Make sure 'num_lev' can be evaluated


# Internal variables

initial_year = 'eval("$INITIAL_DATE".split("-", 1)[0])'

calendar_mtime = '''eval({
  'proleptic gregorian':'proleptic_gregorian',
  '365 day year':'year_of_365_days',
  '360 day year':'year_of_360_days',
}['$CALENDAR'])'''

without_obgc = eval(not is_set('$WITH_OBGC'))

# Control level of land variable output
# by removing unused groups via global LAND_OUTPUT setting
# eg. for 'basic' remove groups 2 + 3; remove all if not set
land_output_level = '''eval(\
  {'basic': 1, 'medium': 2, 'full': 3}.get('$LAND_OUTPUT', 0))'''

[namelists]

  [[icon_master.namelist]]
    [[[master_nml]]]
      lrestart = true
      read_restart_namelists = false
    [[[master_time_control_nml]]]
      calendar = $CALENDAR
      checkpointtimeintval = $$checkpoint_interval
      restarttimeintval = $$restart_interval
      experimentstartdate = $$reference_date # TODO: hack to reproduce result
      experimentstopdate = $$final_date
    [[[master_model_nml atmo]]]
      model_name = atmo
      model_namelist_filename = NAMELIST_atm
      model_type = 1
      model_min_rank = raw($$atm_min_rank)
      model_max_rank = raw($$atm_max_rank)
      model_inc_rank = raw($$atm_inc_rank)
    [[[master_model_nml ocean]]]
      model_name = ocean
      model_namelist_filename = NAMELIST_oce
      model_type = 2
      model_min_rank = raw($$oce_min_rank)
      model_max_rank = raw($$oce_max_rank)
      model_inc_rank = raw($$oce_inc_rank)
    [[[jsb_control_nml]]]
      is_standalone = false
    [[[jsb_model_nml]]]
      model_id = 1
      model_name = JSBACH
      model_shortname = jsb
      model_description = JSBACH land surface model
      model_namelist_filename = NAMELIST_lnd

  [[coupling.xml]]
    .use_template = true
    timestep = $COUPLER_TIME_STEP
    include_river_runoff = true
    [[[atmo]]]
      name = atmo
      timestep = $ATMO_TIME_STEP
      lag = 1
    [[[ocean]]]
      name = oce
      timestep = $OCEAN_TIME_STEP
      lag = 1

  [[NAMELIST_atm]]

    [[[coupling_mode_nml]]]
      coupled_mode = true
    [[[parallel_nml]]]
      nproma = $ATMO_BLOCK_SIZE
      num_io_procs = raw($${mpi_atm_io_procs})
      num_prefetch_proc = 0
      pio_type = 0
    [[[grid_nml]]]
      dynamics_grid_filename = icon_grid_G.nc
    [[[run_nml]]]
      num_lev = $ATMO_LEVELS # number of full levels
      modeltimestep = $ATMO_TIME_STEP
      ltestcase = false # run testcase
      ldynamics = true # dynamics
      ltransport = true # transport
      iforcing = 2 # 0: none, 1: HS, 2: ECHAM, 3: NWP
      output = nml
      msg_level = 12 # level of details report during integration
      restart_filename = ${EXP_ID}_restart_atm_<rsttime>.nc
      activate_sync_timers = true
    [[[extpar_nml]]]
      itopo = 1 # 1: read topography from the grid file
      itype_lwemiss = 0
    [[[initicon_nml]]]
      init_mode = 2 # 2: initialize from IFS analysis
      ifs2icon_filename = ifs2icon.nc
    [[[nonhydrostatic_nml]]]
      ndyn_substeps = $ATMO_DYNAMICS_SUBSTEPS # dtime/dt_dyn
      damp_height = 50000. # [m]
      rayleigh_coeff = 0.1000 # set to 0.1001 for rerun with little change
      vwind_offctr = 0.2
      divdamp_fac = 0.004
    [[[interpol_nml]]]
      rbf_scale_mode_ll = 1
    [[[sleve_nml]]]
      min_lay_thckn = 40. # [m]
      top_height = 83000. # [m]
      stretch_fac = 0.9
      decay_scale_1 = 4000. # [m]
      decay_scale_2 = 2500. # [m]
      decay_exp = 1.2
      flat_height = 16000. # [m]
    [[[diffusion_nml]]]
    [[[transport_nml]]]
    [[[echam_phy_nml]]]
      # domain 1
      # atmospheric physics ("" = never)
      echam_phy_config(1)%dt_rad = $ATMO_RADIATION_TIME_STEP
      echam_phy_config(1)%dt_vdf = $ATMO_TIME_STEP
      echam_phy_config(1)%dt_cnv = $ATMO_TIME_STEP
      echam_phy_config(1)%dt_cld = $ATMO_TIME_STEP
      echam_phy_config(1)%dt_gwd = $ATMO_TIME_STEP
      echam_phy_config(1)%dt_sso = $ATMO_TIME_STEP
      # atmospheric chemistry ("" = never)
      echam_phy_config(1)%dt_mox = $ATMO_TIME_STEP
      echam_phy_config(1)%dt_car =
      echam_phy_config(1)%dt_art =
      # surface (true or false)
      echam_phy_config(1)%ljsb = $WITH_LAND
      echam_phy_config(1)%lamip = false
      echam_phy_config(1)%lice = true
      echam_phy_config(1)%lmlo = false
      echam_phy_config(1)%llake = $LAND_WITH_LAKES
    [[[echam_rad_nml]]]
      # domain 1
      echam_rad_config(1)%isolrad = 6
      echam_rad_config(1)%irad_h2o = 1
      echam_rad_config(1)%irad_co2 = 2
      echam_rad_config(1)%irad_ch4 = 2
      echam_rad_config(1)%irad_n2o = 2
      echam_rad_config(1)%irad_o3 = 2 # constant annual cycle climatology
      echam_rad_config(1)%irad_o2 = 2
      echam_rad_config(1)%irad_cfc11 = 0
      echam_rad_config(1)%irad_cfc12 = 0
      echam_rad_config(1)%irad_aero = 0
      echam_rad_config(1)%vmr_co2 = 284.317e-6 # constant ratio (348.0e-6)
      echam_rad_config(1)%vmr_ch4 = 808.249e-9 # constant ratio (1650.0e-9)
      echam_rad_config(1)%vmr_n2o = 273.021e-9 # constant ratio (306.0e-9)
      echam_rad_config(1)%lyr_perp = true
      echam_rad_config(1)%yr_perp = 1850
    [[[echam_gwd_nml]]]
    [[[echam_sso_nml]]]
    [[[echam_vdf_nml]]]
    [[[echam_cnv_nml]]]
    [[[echam_cld_nml]]]
    [[[echam_cov_nml]]]
    [[[ccycle_nml]]]
    [[[sea_ice_nml]]]
    # Parameters for all output files
    # -------------------------------
    [[[io_nml]]]
      output_nml_dict = dict.txt
      netcdf_dict = dict.txt
      itype_pres_msl = 4
      restart_file_type = 5
      # restart_write_mode = joint procs multifile # not useful in r2b4 setup
      # lnetcdf_flt64_output = true # 64 bit output in all files
      # lkeep_in_sync = true # sync after each timestep
      write_initial_state = false
    [[[dbg_index_nml]]]
      idbg_mxmn = 0 # initialize MIN/MAX debug output
      idbg_val = 0 # initialize one cell debug output
      idbg_slev = 1 # initialize start level for debug output
      idbg_elev = 2 # initialize end level for debug output
      dbg_lat_in = 30.0 # latitude location of one cell debug output
      dbg_lon_in = -30.0 # longitude location of one cell debug output
      str_mod_tst = InterFaceOce # define modules to print out in debug mode

    # Define output files
    # -------------------
    #
    # 3-dimensional files include 'ps' and 'pfull' to allow the vertical
    # interpolation to pressure levels by cdo ap2pl.

    # output atmospheric monitoring
    [[[output_nml atm_mon]]]
      output_filename = ${EXP_ID}_atm_mon
      filename_format = <output_filename>_<datetime2>
      filetype = 5 # output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
      remap = 0
      mode = 1 # 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
      operation = mean # mean over output interval
      output_grid = false
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${atm_output_interval}
      file_interval = $${atm_file_interval}
      include_last = false
      ml_varlist = tas_gmean, rsdt_gmean, rsut_gmean, rlut_gmean, radtop_gmean, prec_gmean, evap_gmean, fwfoce_gmean
    # interface debug output
    [[[output_nml atm_dbg]]]
      filetype = 5 # output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
      output_filename = ${EXP_ID}_atm_dbg
      filename_format = <output_filename>_<levtype_l>_<datetime2>
      remap = 0
      operation = mean
      output_grid = true
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${atm_output_interval}
      file_interval = $${atm_file_interval}
      include_last = false
      ml_varlist = orog, ps, frac_wtr, frac_ice, frac_lnd, alake, lake_ice_frc, hs_icecl, ts_icecl, qtop_icecl, qbot_icecl, sic, sit, sic_icecl, sit_icecl, clt, psl, tas, ts, pr, prw, cllvi, clivi, prlr, prls, prcr, prcs, tauu, tauv, albedo, albedo_wtr, albedo_ice, albedo_lnd, albvisdir, albvisdif, albnirdir, albnirdif, albvisdir_ice, albvisdir_wtr, albvisdir_lnd, rvds_dir, rvds_dif, rnds_dir, rnds_dif, rvus, rnus, hfls, hfss, evspsbl, hfls_wtr, hfls_ice, hfls_lnd, hfss_wtr, hfss_ice, hfss_lnd, rsns_wtr, rsns_ice, rsns_lnd, rlns_wtr, rlns_ice, rlns_lnd, rsut, rsutcs, rlut, rlutcs, rsds, rsdscs, rlds, rldscs, rsus, rsuscs, rlus, rsdt, evspsbl_wtr, evspsbl_ice, evspsbl_lnd, ts_wtr, ts_ice, ts_lnd, tauu_wtr, tauu_ice, tauu_lnd, tauv_wtr, tauv_ice, tauv_lnd, sfcwind, uas, vas
    # Standard AMIP output...
    [[[output_nml atm_3d]]]
      output_filename = ${EXP_ID}_atm_3d
      filename_format = <output_filename>_<levtype_l>_<datetime2>
      filetype = 5
      remap = 0
      operation = mean
      output_grid = false
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${atm_output_interval}
      file_interval = $${atm_file_interval}
      include_last = false
      ml_varlist = TODO
    # Standard AMIP output...
    [[[output_nml atm_2d]]]
      output_filename = ${EXP_ID}_atm_2d
      filename_format = <output_filename>_<levtype_l>_<datetime2>
      filetype = 5
      remap = 0
      operation = mean
      output_grid = false
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${atm_output_interval}
      file_interval = $${atm_file_interval}
      include_last = false
      ml_varlist = TODO
    # jsbach output for running atm_amip experiment
    # for more jsbach output see exp.atm_amip_les
    [[[output_nml lnd_basic]]]
      .hide = eval($land_output_level < 1)
      output_filename = ${EXP_ID}_lnd_basic
      filename_format = <output_filename>_<levtype_l>_<datetime2>
      filetype = 5
      remap = 0
      operation = mean
      output_grid = true
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${lnd_output_interval}
      file_interval = $${lnd_file_interval}
      include_last = false
      ml_varlist = group:jsb_all_basic
    [[[output_nml lnd_medium]]]
      .hide = eval($land_output_level < 2)
      output_filename = ${EXP_ID}_lnd_medium
      filename_format = <output_filename>_<levtype_l>_<datetime2>
      filetype = 5
      remap = 0
      operation = mean
      output_grid = true
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${lnd_output_interval}
      file_interval = $${lnd_file_interval}
      include_last = false
      ml_varlist = group:jsb_all_medium
    [[[output_nml lnd_full]]]
      .hide = eval($land_output_level < 3)
      output_filename = ${EXP_ID}_lnd_full
      filename_format = <output_filename>_<levtype_l>_<datetime2>
      filetype = 5
      remap = 0
      operation = mean
      output_grid = true
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${lnd_output_interval}
      file_interval = $${lnd_file_interval}
      include_last = false
      ml_varlist = group:jsb_all_full
    [[[output_nml lnd_mon]]]
      output_filename = ${EXP_ID}_lnd_mon
      filename_format = <output_filename>_<datetime2>
      filetype = 5 # output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
      remap = 0
      mode = 1 # 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
      operation = mean # mean over output interval
      output_grid = false
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${lnd_output_interval}
      file_interval = $${lnd_file_interval}
      include_last = false
      ml_varlist = TODO

  [[NAMELIST_lnd]]
    with_carbon = true

    [[[jsb_model_nml]]]
      usecase = $LAND_USECASE
      use_lakes = $LAND_WITH_LAKES
    [[[jsb_seb_nml]]]
      bc_filename = bc_land_phys.nc
      ic_filename = ic_land_soil.nc
    [[[jsb_rad_nml]]]
      use_alb_veg_simple = eval('$LAND_USECASE' == 'jsbach_lite') # if jsbach_lite
      bc_filename = bc_land_phys.nc
      ic_filename = ic_land_soil.nc
    [[[jsb_turb_nml]]]
      bc_filename = bc_land_phys.nc
      ic_filename = ic_land_soil.nc
    [[[jsb_sse_nml]]]
      l_heat_cap_map = false
      l_heat_cond_map = false
      l_heat_cap_dyn = false
      l_heat_cond_dyn = false
      l_snow = true
      l_dynsnow = true
      l_freeze = true
      l_supercool = true
      bc_filename = bc_land_soil.nc
      ic_filename = ic_land_soil.nc
    [[[jsb_hydro_nml]]]
      l_organic = false
      bc_filename = bc_land_soil.nc
      ic_filename = ic_land_soil.nc
      bc_sso_filename = bc_land_sso.nc
      snow_depth_max = 10.0
    [[[jsb_assimi_nml]]]
      active = eval('$LAND_USECASE' == 'jsbach_pfts') # if jsbach_pfts
    [[[jsb_pheno_nml]]]
      scheme = eval('climatology' if '$LAND_USECASE' == 'jsbach_lite' else 'logrop') # 'climatology' if jsbach_lite
      bc_filename = bc_land_phys.nc
      ic_filename = ic_land_soil.nc
    [[[jsb_carbon_nml]]]
      active = $with_carbon
      bc_filename = bc_land_carbon.nc
      ic_filename = ic_land_carbon.nc
      read_cpools = false
    [[[jsb_fuel_nml]]]
      active = $with_carbon
      fuel_algorithm = 1
    [[[jsb_disturb_nml]]]
      active = false
      ic_filename = ic_land_soil.nc
      bc_filename = bc_land_phys.nc
      fire_algorithm = 1
      windbreak_algorithm = 1
      lburn_pasture = false
    [[[jsb_hd_nml]]]
      active = true
      routing_scheme = full # 'zero': simple scheme with zero runoff everywhere
      diag_water_budget = true
      debug_hd = false
      enforce_water_budget = false # stop in case of water conservation problem

  [[NAMELIST_oce]]

    [[[coupling_mode_nml]]]
      coupled_mode = true
    [[[parallel_nml]]]
      nproma = $OCEAN_BLOCK_SIZE
      num_io_procs = raw($${mpi_oce_io_procs}) # TODO: remove script dependency
      num_prefetch_proc = 0
      pio_type = 0
      l_fast_sum = true
    [[[grid_nml]]]
      dynamics_grid_filename = icon_grid_O.nc
      use_dummy_cell_closure = true
      use_duplicated_connectivity = false
    [[[dynamics_nml]]]
      iequations = -1 # -1: hydrost. ocean model
    [[[run_nml]]]
      modeltimestep = $OCEAN_TIME_STEP
      output = nml # namelist controlled output scheme
      activate_sync_timers = true
      profiling_output = 1 # aggregated: 1; detailed: 2; in files: 3
      msg_timestamp = false
      timers_level = 10
      debug_check_level = 1
      restart_filename = ${EXP_ID}_restart_oce_<rsttime>.nc
    [[[dbg_index_nml]]]
    [[[ocean_dynamics_nml]]]
      n_zlev = $OCEAN_LEVELS
      dzlev_m = eval([$OCEAN_LAYER_DEPTHS])
      l_edge_based = false # edge- or cell-based mimetic discretization
      select_solver = 4 # 1=gmres_oce_old; 2=ocean_restart_gmres, 3=mixed precisison restart, 4=CG (default) 5=CGJ 6=BiCG 7=GMRES restart (legacy) 8=MINRES
      use_absolute_solver_tolerance = true
      solver_firstguess = 2 # 0=start from zeros 1=last timestep smoothed 2=last timestep (default)
      fast_performance_level = 200 # performance level 12: for cell-based; 5: default
      use_continuity_correction = true # height adjustment according to vertical velocity in dynamics
      cfl_check = false
      cfl_write = false
      i_bc_veloc_top = 1
      i_bc_veloc_bot = 1 # 0: (def) bottom friction off, 1: on
    [[[ocean_tracer_transport_nml]]]
      flux_calculation_horz = 5 # 1=upwind, 2=central, 3=Lax-Friedrichs, 4=Miura, 5=FCT with Zalesak limiter (default)
      flux_calculation_vert = 7 # 6=adpo; 7=upwind biased ppm (default); 8=FCT with Zalesak limiter
      # define low and high order methods to be used in
      # horizontal flux corrected transport methods
      # (flux_calculation_horz=4,5)
      fct_low_order_flux = 1 # horizontal low  order method: 1=upwind (def), no other implemented
      fct_high_order_flux = 5 # horizontal high order method: 1=upwind, 2=central, 3=lax_friedrichs, 4=miura_order1
      fct_limiter_horz = 100 # Zalesak
    [[[ocean_horizontal_diffusion_nml]]]
      laplacian_form = 1 # 1=curlcurl-graddiv
      velocitydiffusion_order = 1 # 1=laplacian (def); 2=biharmonic; 21=biharmonic+laplacian (for the laplacian leith)
      harmonicviscosity_scaling = 1
      harmonicviscosity_reference = 0.0 # [m2/s] constant horizontal viscosity coefficient for velocity
      harmonicviscosity_background = 0.0
      tracerhorizontaldiffusion_scaling = 1
      temperature_horizontaldiffusion_background = 0.0
      temperature_horizontaldiffusion_reference = 0
      salinity_horizontaldiffusion_background = 0.0
      salinity_horizontaldiffusion_reference = 0
    [[[ocean_vertical_diffusion_nml]]]
      velocity_verticaldiffusion_background = 5.0E-5 # [m2/s]  vertical background viscosity coefficient for velocity
      temperature_verticaldiffusion_background = 1.5E-5 # [m2/s]  vertical background diffusion coefficient for temperature
      salinity_verticaldiffusion_background = 1.5E-5 # [m2/s]  vertical background diffusion coefficient for salinity
      tracer_convection_mixingcoefficient = 0.1 # max vertical tracer diffusion for convection used in case of instability
      convection_instabilitythreshold = -1.0E-6 # used in update_ho_params - default=-5e-8
      richardsondiffusion_threshold = 0.0 # used in update_ho_params - default=+5e-8
      tracer_richardsoncoeff = 2.0E-3 # factor for vertical diffusion coefficient in PP scheme
      velocity_richardsoncoeff = 2.0E-3 # factor for vertical viscosity coefficient in PP scheme
      bottom_drag_coeff = 3.0E-3 # default=2.5E-3; active for i_bc_veloc_bot=1
      use_wind_mixing = true # true: use wind mixing scheme in MPIOM-type PP-scheme
      lambda_wind = 0.03
    [[[ocean_gentmcwilliamsredi_nml]]]
      gmredi_configuration = 1 # 0=cartesian diffusion; 1=GM-Redi: bolus advection + isopycnal diffusion
      tapering_scheme = 1
      gmredi_usesrelativemaxslopes = false
      s_max = 1.0e-3 # 1.0
      s_d = 1.0e-4 # 5e-3 to 5e-4
      k_tracer_gm_kappa_parameter = 600.0
      k_tracer_isoneutral_parameter = 600.0 # value for cell-based cartesian diffusion - mpiom: 1000/400km = 400/160km
      k_tracer_dianeutral_parameter = 0.0 # 1.0E-5
      switch_off_diagonal_vert_expl = true
      gmredi_combined_diagnostic = false
      revert_vertical_recon_and_transposed = true
      slope_calc_via_temperture_salinity = true
      include_slope_squared_implicit = true # think of l_with_vert_tracer_diffusion
      switch_on_tapering_horizontal_diffusion = true
    [[[ocean_physics_nml]]]
      i_sea_ice = 1 # 0 = no sea ice; 1 = sea ice model on; default=1
      lhamocc = eval('true' if is_set('$WITH_OBGC') else '')
      lbgcadv = eval('true' if is_set('$WITH_OBGC') else '')
    [[[sea_ice_nml]]]
    [[[hamocc_nml]]]
      .hide = $without_obgc
    [[[ocean_forcing_nml]]]
      iforc_oce = 14 # ocean forcing: 14 from coupling via YAC
      type_surfrelax_temp = -1 # -1: use net surface heat flux from atmosphere; 0: no relaxation used; 1: relaxation switched on for reading (init_oce_relax=1) or some testcases only
      forcing_enable_freshwater = true # enable/disable freshwater flux
      forcing_windstress_u_type = 2 # 0: zero wind stress, 1: read from file, 2: none
      forcing_windstress_v_type = 2 # 0: zero wind stress, 1: read from file, 2: none
      limit_seaice = true # default: TRUE
      seaice_limit = 0.8 # hard limit set to 80% of upper layer for sea ice
      lfix_salt_content = true # fix global ocean+ice salt content to constant (false)
    [[[ocean_diagnostics_nml]]]
      diagnose_for_heat_content = true
    [[[io_nml]]]
      restart_file_type = 5
      write_last_restart = true
      # restart_write_mode = joint procs multifile # not yet available in ocean model
      # lnetcdf_flt64_output = true # 64 bit output in all files
      # lkeep_in_sync = true # sync after each timestep
      write_initial_state = false

    [[[output_nml oce_P1M_mon]]]
      filetype = 5
      output_filename = ${EXP_ID}_oce_P1M_mon
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = P1M
      filename_format = <output_filename>_<datetime2>
      file_interval = $${oce_file_interval}
      mode = 1
      include_last = false
      output_grid = true
      operation = mean
      ml_varlist = group:ocean_monitor

    [[[output_nml oce_P1M_moc]]]
      filetype = 5
      output_filename = ${EXP_ID}_oce_P1M_moc
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = P1M
      file_interval = $${oce_file_interval}
      filename_format = <output_filename>_<datetime2>
      mode = 1
      include_last = false
      output_grid = true
      operation = mean
      ml_varlist = group:ocean_moc

    [[[output_nml oce_P1M_3d]]]
      filetype = 5
      output_filename = ${EXP_ID}_oce_P1M_3d
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = P1M
      filename_format = <output_filename>_<datetime2>
      operation = mean
      file_interval = $${oce_file_interval}
      mode = 1
      include_last = false
      output_grid = true
      ml_varlist = opottemptend, osalttend, to, so, u, v, w, A_veloc_v, A_tracer_v_to, normal_velocity, rho, rhopot, mass_flux, heat_content_liquid_water, swrab, rsdoabsorb, tke

    [[[output_nml oce_P1M_2d]]]
      filetype = 5
      output_filename = ${EXP_ID}_oce_P1M_2d
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = P1M
      filename_format = <output_filename>_<datetime2>
      operation = mean
      file_interval = $${oce_file_interval}
      mode = 1
      include_last = false
      output_grid = true
      m_levels = 1
      ml_varlist = to, so, zos, hi, hs, conc, ice_u, ice_v, heat_content_seaice, heat_content_snow, heat_content_total, atmos_fluxes_stress_xw,atmos_fluxes_stress_yw,atmos_fluxes_stress_x,atmos_fluxes_stress_y,atmos_fluxes_HeatFlux_Total,atmos_fluxes_HeatFlux_Latent,atmos_fluxes_HeatFlux_Sensible,atmos_fluxes_HeatFlux_ShortWave,atmos_fluxes_HeatFlux_LongWave,sea_level_pressure,Wind_Speed_10m,Qtop, Qbot,Qbot_slow,ice_vn,mld,condep,draftave,mlotst, zHeatOceI,heatOceI,heatOceW,zUnderIce,HeatFlux_Total,HeatFlux_ShortWave,HeatFlux_LongWave,HeatFlux_Sensible,HeatFlux_Latent,FrshFlux_Runoff,FrshFlux_Precipitation,FrshFlux_Evaporation,FrshFlux_SnowFall,FrshFlux_TotalOcean,FrshFlux_VolumeIce,totalsnowfall,FrshFlux_VolumeTotal, swsum,heatabs

    [[[output_nml oce_P1M_sqr]]]
      filetype = 5
      output_filename = ${EXP_ID}_oce_P1M_sqr
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = P1M
      filename_format = <output_filename>_<datetime2>
      operation = square
      file_interval = $${oce_file_interval}
      mode = 1
      include_last = false
      output_grid = true
      m_levels = 1
      ml_varlist = mlotst, so, to, zos

    # HAMOCC output
    [[[output_nml hamocc_monitor]]]
      .hide = $without_obgc
      output_filename = ${EXP_ID}_hamocc_monitor
      filename_format = <output_filename>_<datetime2>
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${hamocc_output_interval}
      file_interval = $${hamocc_file_interval}
      output_grid = false
      operation = mean
      mode = 1
      ml_varlist = group:HAMOCC_MONI
    [[[output_nml hamocc]]]
      .hide = $without_obgc
      filetype = 4 # output format: 2=GRIB2, 4=NETCDFv2
      filename_format = <output_filename>_<datetime2>
      output_filename = ${EXP_ID}_hamocc
      output_start = $${initial_date} # start in ISO-format
      output_end = $${final_date} # end in ISO-format
      output_interval = $${hamocc_output_interval}
      file_interval = $${hamocc_file_interval}
      output_grid = true
      operation = mean
      mode = 1
      ml_varlist = group:HAMOCC_BASE
    [[[output_nml hamocc_sediment]]]
      .hide = $without_obgc
      filetype = 4 # output format: 2=GRIB2, 4=NETCDFv2
      filename_format = <output_filename>_<datetime2>
      output_filename = ${EXP_ID}_hamocc_sediment
      output_start = $${initial_date} # start in ISO-format
      output_end = $${final_date} # end in ISO-format
      output_interval = $${hamocc_output_interval}
      file_interval = $${hamocc_file_interval}
      output_grid = true
      operation = mean
      mode = 1
      ml_varlist = group:HAMOCC_SED
    [[[output_nml hamocc_3d_tendencies]]]
      .hide = $without_obgc
      filetype = 4 # output format: 2=GRIB2, 4=NETCDFv2
      filename_format = <output_filename>_<datetime2>
      output_filename = ${EXP_ID}_hamocc_3d_tendencies
      output_start = $${initial_date} # start in ISO-format
      output_end = $${final_date} # end in ISO-format
      output_interval = $${hamocc_output_interval}
      file_interval = $${hamocc_file_interval}
      output_grid = true
      operation = mean
      mode = 1
      ml_varlist = HAMOCC_BACFRA, HAMOCC_SRED, HAMOCC_REMIN, HAMOCC_DENIT, HAMOCC_delsil, HAMOCC_delcar, HAMOCC_aou
    [[[output_nml hamocc_EU_tendencies]]]
      .hide = $without_obgc
      filetype = 4 # output format: 2=GRIB2, 4=NETCDFv2
      filename_format = <output_filename>_<datetime2>
      output_filename = ${EXP_ID}_hamocc_EU_tendencies
      output_start = $${initial_date} # start in ISO-format
      output_end = $${final_date} # end in ISO-format
      output_interval = $${hamocc_output_interval}
      file_interval = $${hamocc_file_interval}
      mode = 1 # 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
      output_grid = true
      operation = mean
      ml_varlist = HAMOCC_NPP, HAMOCC_nfix, HAMOCC_dms_prod, HAMOCC_dms_bac, HAMOCC_dms_uv, HAMOCC_eu_export, HAMOCC_pho_cya, HAMOCC_cya_loss, HAMOCC_grazing, HAMOCC_remin_via_grazer, HAMOCC_exudation_phy, HAMOCC_exudation_zoo, HAMOCC_zoomor, HAMOCC_phymor, HAMOCC_plim, HAMOCC_flim, HAMOCC_nlim, HAMOCC_cTlim, HAMOCC_cLlim, HAMOCC_cPlim, HAMOCC_cFlim
      m_levels = 1...$OBGC_EUPHOTIC_LEVELS # ~500m: 19 for L40, 16 for L20, 26 for L64
    [[[output_nml hamocc_2d_tendencies]]]
      .hide = $without_obgc
      filetype = 4 # output format: 2=GRIB2, 4=NETCDFv2
      filename_format = <output_filename>_<datetime2>
      output_filename = ${EXP_ID}_hamocc_2d_tendencies
      output_start = $${initial_date} # start in ISO-format
      output_end = $${final_date} # end in ISO-format
      output_interval = $${hamocc_output_interval}
      file_interval = $${hamocc_file_interval}
      output_grid = true
      operation = mean
      mode = 1
      ml_varlist = HAMOCC_co2flux, HAMOCC_orginp, HAMOCC_dmsflux, HAMOCC_silinp, HAMOCC_calinp, HAMOCC_o2flux, HAMOCC_n2flux, HAMOCC_n2oflux, HAMOCC_nfix_diag, HAMOCC_coex90, HAMOCC_calex90, HAMOCC_opex90, HAMOCC_coex1000, HAMOCC_opex1000, HAMOCC_calex1000, HAMOCC_coex2000, HAMOCC_opex2000, HAMOCC_calex2000, HAMOCC_o2min, HAMOCC_zo2min, co2mr

[files]

  [[atmosphere]]
    .base_dir = $ATMO_INPUT_DIR
    [[[mapped]]]
      .sub_dir = $ATMO_GRID_ID
      icon_grid_G.nc = icon_grid_${ATMO_GRID_ID}_${ATMO_GRID_TYPE}_G.nc
      hd_mask.nc = icon_grid_${ATMO_GRID_ID}_${ATMO_GRID_TYPE}_G.nc
    [[[restart]]]
      .base_dir = $WORK_DIR
      restart_atm_DOM01.nc = ${EXP_ID}_restart_atm_$${start_stamp}Z.nc

  [[land]]
    .base_dir = $LAND_INPUT_DIR
    [[[mapped]]]
      .sub_dir = $ATMO_GRID_ID/land/r0006
      .pft_tag = eval('_11pfts' if '$LAND_USECASE' == 'jsbach_pfts' else '')
      ic_land_soil.nc = ic_land_soil_$LAND_REFERENCE_YEAR.nc
      bc_land_frac.nc = bc_land_frac${.pft_tag}_$LAND_REFERENCE_YEAR.nc
      bc_land_phys.nc = bc_land_phys_$LAND_REFERENCE_YEAR.nc
      bc_land_soil.nc = bc_land_soil_$LAND_REFERENCE_YEAR.nc
      bc_land_sso.nc = bc_land_sso_$LAND_REFERENCE_YEAR.nc
    [[[hydro]]]
      .base_dir = /pool/data/ICON/grids/private/Stephan/mpim/$ATMO_GRID_ID/land
      # preliminary test version
      bc_land_hd.nc = hdpara_icon_${ATMO_GRID_ID}_${ATMO_GRID_TYPE}_20200303_v2.nc
    [[[model]]]
      .base_dir = $MODEL_DIR/externals/jsbach/data
      lctlib_nlct21.def = .

  [[ocean]]
    .base_dir = $OCEAN_INPUT_DIR
    [[[grids]]]
      .sub_dir = icon_grid_${OCEAN_GRID_ID}_${OCEAN_GRID_TYPE}_O
      icon_grid_O.nc = icon_grid_${OCEAN_GRID_ID}_${OCEAN_GRID_TYPE}_O.nc
    [[[restart]]]
      .base_dir = $WORK_DIR
      restart_ocean_DOM01.nc = ${EXP_ID}_restart_oce_$${start_stamp}Z.nc

  [[obgc]]
    .method = eval('ln -svf' if is_set('$WITH_OBGC') else ':')
    # FIXME: this is still a private path
    .base_dir = /work/mh0727/m300732/input
    [[[mapped]]]
      .sub_dir = $OCEAN_GRID_ID/ocean/hamocc
      # iron deposition
      dust.nc = MAHOWALDDUST_icon_grid_${OCEAN_GRID_ID}_${OCEAN_GRID_TYPE}_O_remapbil1.nc
      # nitrate deposition
      nitrogen.nc = ndepo_1-0_gr_185001-185012-clim_icon_grid_${OCEAN_GRID_ID}_${OCEAN_GRID_TYPE}_O.nc

[jobs]
  [[run]]
    .trigger = post
    nodes = 4
    time_limit = 00:20:00
    subdir = run_$${start_stamp}-$${end_stamp}
  [[run_start]]
    .extends = run
    entry_point = true

    [[[namelists]]]
      [[[[NAMELIST_oce]]]]
        # output of fixed geometry
        [[[[[output_nml oce_fx]]]]]
          filetype = 5 # output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
          output_filename = ${EXP_ID}_oce_fx
          filename_format = <output_filename>_<datetime2>
          output_start = $${initial_date} # start date in ISO-format
          output_end = $${final_date} # end date in ISO-format
          output_interval = $${restart_interval} # interval in ISO-format
          file_interval = $${oce_file_interval} # interval in ISO-format
          output_grid = true
          mode = 1 # 1: forecast mode (relative t-axis); 2: climate mode
          include_last = false
          ml_varlist = group:oce_geometry

    [[[files]]]
      [[[[atmosphere]]]]
        [[[[[restart_data]]]]]
          .base_dir = $ATMO_PARENT_DIR
          .method = "cdo -settaxis,$INITIAL_DATE -setattribute,tc_startdate=$$initial_date,jstep=$$atmo_reference_jstep,jstep_adv_marchuk_order_DOM01=$$atmo_reference_jstep"
          restart_atm_DOM01_data.nc = ${ATMO_PARENT_EXP_ID}_restart_atm_${ATMO_PARENT_DATE}.nc
        [[[[[restart]]]]]
          .base_dir = .
          restart_atm_DOM01.nc = restart_atm_DOM01_data.nc
      [[[[ocean]]]]
        [[[[[restart_data]]]]]
          .base_dir = $OCEAN_PARENT_DIR
          .method = "cdo -settaxis,$INITIAL_DATE -setattribute,tc_startdate=$$initial_date,jstep=$$ocean_reference_jstep"
          restart_ocean_DOM01_data.nc = ${OCEAN_PARENT_EXP_ID}_restart_oce_${OCEAN_PARENT_DATE}.nc
        [[[[[restart]]]]]
          .base_dir = .
          restart_ocean_DOM01.nc = restart_ocean_DOM01_data.nc

  [[post]]
    .trigger = mon
    .var_format = {%s}
  [[mon]]
    [[[tags]]]
      atm_mon = true
      lnd_mon = true
      oce_P1M_mon = true
  [[mon_index]]


[output]
  atm_2d_ml = true
  atm_3d_ml = true
  atm_dbg_ml = true
  atm_mon = true
  lnd_basic_ml = eval($land_output_level >= 1)
  lnd_full_ml = eval($land_output_level >= 2)
  lnd_medium_ml = eval($land_output_level >= 3)
  lnd_mon = true
  oce_P1M_2d = true
  oce_P1M_3d = true
  oce_P1M_moc = true
  oce_P1M_mon = true
  oce_P1M_sqr = true
  hamocc = $WITH_OBGC
  hamocc_2d_tendencies = $WITH_OBGC
  hamocc_3d_tendencies = $WITH_OBGC
  hamocc_EU_tendencies = $WITH_OBGC
  hamocc_monitor = $WITH_OBGC
  hamocc_sediment = $WITH_OBGC
  [[fixed]]
    oce_fx = true

