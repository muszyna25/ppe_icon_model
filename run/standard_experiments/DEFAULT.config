#
# ICON experiment configuration file_interval
#

VERSION_ = eval(os.popen('git describe --always --all --long $(git log -n1 --format=%H)').read().rstrip('\n\r').split('/')[-1])

# Project info

ACCOUNT = read($HOME/.acct)
PROJECT_SUBDIR = $ACCOUNT

# Model configuration

EXP_KIND = "eval('$EXP_TYPE'.rsplit('-',1)[0])"
EXP_QUALITY = "eval('$EXP_TYPE'.rsplit('-',1)[1])"

# Directory structure

use_srcdir = eval(os.path.dirname('$PWD'))
use_builddir = eval(os.path.dirname('$PWD')+'/build')

TOP_SRCDIR = $use_srcdir
DISTDIR =
MODEL_DEFAULT_ROOT =
PREFIX =

MODEL_ROOT = "eval('$TOP_SRCDIR'.split('/$USER/',1)[0]+'/$USER' if '$TOP_SRCDIR'.find('/$USER/')>=0 else '$MODEL_DEFAULT_ROOT' or '$HOME')"
BIN_ROOT = $MODEL_ROOT
SCRIPT_ROOT = $MODEL_ROOT
DATA_ROOT = $MODEL_ROOT
RESTART_ROOT = $DATA_ROOT
WORK_ROOT = $DATA_ROOT
LOG_ROOT = $DATA_ROOT
MON_ROOT = $DATA_ROOT
PARENT_ROOT = $INPUT_ROOT
INPUT_ROOT = /pool/data

MODEL_SUBDIR = "eval('$TOP_SRCDIR'.split('/$USER/',1)[1] if '$TOP_SRCDIR'.find('/$USER/')>=0 else '$TOP_SRCDIR'.split('/')[-1] if '$TOP_SRCDIR' else '$DISTDIR' or 'mpiesm')"
EXP_SUBDIR = $MODEL_SUBDIR/$EXPERIMENTS_SUBDIR/$EXP_ID
EXPERIMENTS_SUBDIR = experiments
BIN_SUBDIR = bin
SCRIPTS_SUBDIR = scripts
DATA_SUBDIR = outdata
RESTART_SUBDIR =
WORK_SUBDIR =
LOG_SUBDIR = log
MON_SUBDIR = monitoring

PARENT_SUBDIR = MPIESM/restart/dev

INPUT_SUBDIR = MPIESM/input/r0001
ATMO_INPUT_SUBDIR = ECHAM6/input/r0008
LAND_INPUT_SUBDIR = JSBACH/input/r0010
HYDRO_INPUT_SUBDIR = $LAND_INPUT_SUBDIR/HD
OCEAN_INPUT_SUBDIR = MPIOM/input/r0010
OBGC_INPUT_SUBDIR = $OCEAN_INPUT_SUBDIR
COUPLER_INPUT_SUBDIR = $INPUT_SUBDIR

ATMO_SUBDIR =
LAND_SUBDIR =
OCEAN_SUBDIR =
OBGC_SUBDIR =
COUPLER_SUBDIR =

BUILD_DIR = $use_builddir
MODEL_DIR = eval('$TOP_SRCDIR' or '$MODEL_ROOT/$MODEL_SUBDIR')
BIN_DIR = eval('$PREFIX/$BIN_SUBDIR' if '$PREFIX' else '$BIN_ROOT/$MODEL_SUBDIR/$BIN_SUBDIR')
SCRIPT_DIR = $SCRIPT_ROOT/$EXP_SUBDIR/$SCRIPTS_SUBDIR
DATA_DIR = $DATA_ROOT/$EXP_SUBDIR/$DATA_SUBDIR
WORK_DIR = $WORK_ROOT/$EXP_SUBDIR/$WORK_SUBDIR
LOG_DIR = $LOG_ROOT/$EXP_SUBDIR/$LOG_SUBDIR
MON_DIR = $MON_ROOT/$MODEL_SUBDIR/$EXPERIMENTS_SUBDIR/$MON_SUBDIR

PARENT_DIR = $PARENT_ROOT/$PARENT_SUBDIR/$PARENT_EXP_ID/$RESTART_SUBDIR
ATMO_PARENT_DIR = $PARENT_DIR/$ATMO_SUBDIR
LAND_PARENT_DIR = $PARENT_DIR/$LAND_SUBDIR
OCEAN_PARENT_DIR = $PARENT_DIR/$OCEAN_SUBDIR
OBGC_PARENT_DIR = $PARENT_DIR/$OBGC_SUBDIR
COUPLER_PARENT_DIR = $PARENT_DIR/$COUPLER_SUBDIR

RESTART_DIR = $RESTART_ROOT/$EXP_SUBDIR/$RESTART_SUBDIR
ATMO_RESTART_DIR = $RESTART_DIR/$ATMO_SUBDIR
LAND_RESTART_DIR = $RESTART_DIR/$LAND_SUBDIR
OCEAN_RESTART_DIR = $RESTART_DIR/$OCEAN_SUBDIR
OBGC_RESTART_DIR = $RESTART_DIR/$OBGC_SUBDIR
COUPLER_RESTART_DIR = $RESTART_DIR/$COUPLER_SUBDIR

INPUT_DIR = $INPUT_ROOT/$INPUT_SUBDIR
ATMO_INPUT_DIR = $INPUT_ROOT/$ATMO_INPUT_SUBDIR
LAND_INPUT_DIR = $INPUT_ROOT/$LAND_INPUT_SUBDIR
HYDRO_INPUT_DIR = $INPUT_ROOT/$HYDRO_INPUT_SUBDIR
OCEAN_INPUT_DIR = $INPUT_ROOT/$OCEAN_INPUT_SUBDIR
OBGC_INPUT_DIR = $INPUT_ROOT/$OBGC_INPUT_SUBDIR
COUPLER_INPUT_DIR = $INPUT_ROOT/$COUPLER_INPUT_SUBDIR

# File names

MODEL_EXE = icon

# Spin-up (parent experiment) configuration

PARENT_EXP_ID =
PARENT_DATE =

ATMO_PARENT_EXP_ID = $PARENT_EXP_ID
ATMO_PARENT_DATE =$PARENT_DATE

LAND_PARENT_EXP_ID = $PARENT_EXP_ID
LAND_PARENT_DATE = $PARENT_DATE

OCEAN_PARENT_EXP_ID = $PARENT_EXP_ID
OCEAN_PARENT_DATE = $PARENT_DATE

OBGC_PARENT_EXP_ID = $PARENT_EXP_ID
OBGC_PARENT_DATE = $PARENT_DATE

COUPLER_PARENT_EXP_ID = $PARENT_EXP_ID
COUPLER_PARENT_DATE = $PARENT_DATE

# Time control

INTERVAL = P1Y
OUTPUT_INTERVAL = P1M
SLOW_OUTPUT_INTERVAL = P1Y

CALENDAR = proleptic gregorian # proleptic gregorian, 365 day year, 360 day year

# Atmosphere setup

ATMO_GRID = "eval('$ATMO_GRID_TYPE'.replace('0', ''))"
atmo_grid = eval('$ATMO_GRID'.lower())

# Land setup

WITH_LAND = true

LAND_OUTPUT = basic
LAND_USECASE = jsbach_pfts # jsbach_lite or jsbach_pfts
LAND_WITH_LAKES = true

# Ocean setup

OCEAN_GRID = "eval('$OCEAN_GRID_TYPE'.replace('0', ''))"
ocean_grid = eval('$OCEAN_GRID'.lower())

OCEAN_LAYER_DEPTHS = 
OCEAN_LEVELS = eval(len([$OCEAN_LAYER_DEPTHS]))

# Ocean biogeochemistry setup

WITH_OBGC = false

# Internal variables

calendar_mtime = '''eval({
  'proleptic gregorian':'proleptic_gregorian',
  '365 day year':'year_of_365_days',
  '360 day year':'year_of_360_days',
}['$CALENDAR'])'''

[namelists]

  [[NAMELIST_atm]]
    # Control level of land variable output
    # by removing unused groups via global LAND_OUTPUT setting
    # eg. for 'basic' remove groups 2 + 3; remove all if not set
    land_output_level = '''eval(\
      {'basic': 1, 'medium': 2, 'full': 3}.get('$LAND_OUTPUT', 0))'''

    [[[run_nml]]]
      num_lev = $ATMO_LEVELS # number of full levels
      modeltimestep = $ATMO_TIME_STEP
      ltestcase = false # run testcase
      ldynamics = true # dynamics
      ltransport = true # transport
      iforcing = 2 # 0: none, 1: HS, 2: ECHAM, 3: NWP
      output = nml
      msg_level = 12 # level of details report during integration 
      restart_filename = ${EXP_ID}_restart_atm_<rsttime>.nc
      activate_sync_timers = true
      profiling_output = 1 # aggregated: 1; detailed: 2; in files: 3
    [[[nonhydrostatic_nml]]]
      ndyn_substeps    = $ATMO_DYNAMICS_SUBSTEPS # dtime/dt_dyn
      damp_height      = 50000. # [m]
      rayleigh_coeff   = 0.1000 # set to 0.1001 for rerun with little change
      vwind_offctr     = 0.2
      divdamp_fac      = 0.004
    [[[echam_rad_nml]]]
      # domain 1
      echam_rad_config(1)%isolrad    = 6
      echam_rad_config(1)%irad_h2o   = 1
      echam_rad_config(1)%irad_co2   = 2
      echam_rad_config(1)%irad_ch4   = 2
      echam_rad_config(1)%irad_n2o   = 2
      echam_rad_config(1)%irad_o3    = 2 # constant annual cycle climatology
      echam_rad_config(1)%irad_o2    = 2
      echam_rad_config(1)%irad_cfc11 = 0
      echam_rad_config(1)%irad_cfc12 = 0
      echam_rad_config(1)%irad_aero  = 0
      echam_rad_config(1)%vmr_co2    = 284.317e-6 # constant ratio (348.0e-6)
      echam_rad_config(1)%vmr_ch4    = 808.249e-9 # constant ratio (1650.0e-9)
      echam_rad_config(1)%vmr_n2o    = 273.021e-9 # constant ratio (306.0e-9)
      echam_rad_config(1)%lyr_perp   = true
      echam_rad_config(1)%yr_perp    = 1850
    [[[echam_phy_nml]]]
      # domain 1
      # atmospheric physics ("" = never)
      echam_phy_config(1)%dt_rad = $ATMO_RADIATION_TIME_STEP
      echam_phy_config(1)%dt_vdf = $ATMO_TIME_STEP
      echam_phy_config(1)%dt_cnv = $ATMO_TIME_STEP
      echam_phy_config(1)%dt_cld = $ATMO_TIME_STEP
      echam_phy_config(1)%dt_gwd = $ATMO_TIME_STEP
      echam_phy_config(1)%dt_sso = $ATMO_TIME_STEP
      # atmospheric chemistry ("" = never)
      echam_phy_config(1)%dt_mox = $ATMO_TIME_STEP
      echam_phy_config(1)%dt_car =
      echam_phy_config(1)%dt_art =
      # surface (true or false)
      echam_phy_config(1)%ljsb = $WITH_LAND
      echam_phy_config(1)%lamip = false
      echam_phy_config(1)%lice = true
      echam_phy_config(1)%lmlo = false
      echam_phy_config(1)%llake = $LAND_WITH_LAKES
      # fix negative humidity (default = 0, no correction)
      echam_phy_config(1)%iqneg_d2p = 0
      echam_phy_config(1)%iqneg_p2d = 0

    [[[output_nml lnd_basic]]]
      .hide = eval($land_output_level < 1)
      output_filename  = ${EXP_ID}_lnd_basic
      filename_format  = <output_filename>_<levtype_l>_<datetime2>
      filetype = 5
      remap = 0
      operation = mean
      output_grid = true
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${lnd_output_interval}
      file_interval = $${lnd_file_interval}
      include_last = false
      ml_varlist = group:jsb_all_basic
    [[[output_nml lnd_medium]]]
      .hide = eval($land_output_level < 2)
      output_filename = ${EXP_ID}_lnd_medium
      filename_format = <output_filename>_<levtype_l>_<datetime2>
      filetype = 5
      remap = 0
      operation = mean
      output_grid = true
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${lnd_output_interval}
      file_interval = $${lnd_file_interval}
      include_last = false
      ml_varlist = group:jsb_all_medium
    [[[output_nml lnd_full]]]
      .hide = eval($land_output_level < 3)
      output_filename = ${EXP_ID}_lnd_full
      filename_format = <output_filename>_<levtype_l>_<datetime2>
      filetype = 5
      remap = 0
      operation = mean
      output_grid = true
      output_start = $${initial_date}
      output_end = $${final_date}
      output_interval = $${lnd_output_interval}
      file_interval = $${lnd_file_interval}
      include_last = false
      ml_varlist = group:jsb_all_full

  [[NAMELIST_lnd]]
    with_carbon = false

    [[[jsb_model_nml]]]
      usecase = $LAND_USECASE
      use_lakes = $LAND_WITH_LAKES
    [[[jsb_carbon_nml]]]
      active = $with_carbon
      bc_filename = bc_land_carbon.nc
      ic_filename = ic_land_carbon.nc
      read_cpools = false
    [[[jsb_fuel_nml]]]
      active = $with_carbon
      fuel_algorithm = 1

  [[NAMELIST_oce]]

    [[[ocean_dynamics_nml]]]
      n_zlev = $OCEAN_LEVELS
      dzlev_m = eval([$OCEAN_LAYER_DEPTHS])
      l_edge_based = false # edge- or cell-based mimetic discretization
      select_solver = 4 # 1=gmres_oce_old; 2=ocean_restart_gmres, 3=mixed precisison restart, 4=CG (default) 5=CGJ 6=BiCG 7=GMRES restart (legacy) 8=MINRES
      use_absolute_solver_tolerance = true
      solver_firstguess = 2 # 0=start from zeros 1=last timestep smoothed 2=last timestep (default)
      fast_performance_level = 200 # performance level 12: for cell-based; 5: default
      use_continuity_correction = true # height adjustment according to vertical velocity in dynamics
      cfl_check = false
      cfl_write = false
      i_bc_veloc_top = 1
      i_bc_veloc_bot = 1 # 0: (def) bottom friction off, 1: on
    [[[ocean_horizontal_diffusion_nml]]]
      laplacian_form = 1 # 1=curlcurl-graddiv
      velocitydiffusion_order = 1 # 1=laplacian (def); 2=biharmonic; 21=biharmonic+laplacian (for the laplacian leith)
      harmonicviscosity_scaling = 1
      harmonicviscosity_reference = 0.0 # [m2/s] constant horizontal viscosity coefficient for velocity
      harmonicviscosity_background = 0.0
      tracerhorizontaldiffusion_scaling = 1
      temperature_horizontaldiffusion_background = 0.0
      temperature_horizontaldiffusion_reference = 0
      salinity_horizontaldiffusion_background = 0.0
      salinity_horizontaldiffusion_reference = 0
    [[[ocean_vertical_diffusion_nml]]]
      ppscheme_type = 4
      velocity_verticaldiffusion_background = 5.0E-5 # [m2/s]  vertical background viscosity coefficient for velocity
      temperature_verticaldiffusion_background = 1.5E-5 # [m2/s]  vertical background diffusion coefficient for temperature
      salinity_verticaldiffusion_background = 1.5E-5 # [m2/s]  vertical background diffusion coefficient for salinity
      tracer_convection_mixingcoefficient = 0.1 # max vertical tracer diffusion for convection used in case of instability
      convection_instabilitythreshold = -1.0E-6 # used in update_ho_params - default=-5e-8
      richardsondiffusion_threshold = 0.0 # used in update_ho_params - default=+5e-8
      tracer_richardsoncoeff = 2.0E-3 # factor for vertical diffusion coefficient in PP scheme
      velocity_richardsoncoeff = 2.0E-3 # factor for vertical viscosity coefficient in PP scheme
      bottom_drag_coeff = 3.0E-3 # default=2.5E-3; active for i_bc_veloc_bot=1
      use_wind_mixing = true # true: use wind mixing scheme in MPIOM-type PP-scheme
      lambda_wind = 0.03
      tracer_topwindmixing = 0.5E-3
      velocity_topwindmixing = 0.5E-3
    [[[ocean_gentmcwilliamsredi_nml]]]
      gmredi_configuration = 1 # 0=cartesian diffusion; 1=GM-Redi: bolus advection + isopycnal diffusion
      tapering_scheme = 1
      gmredi_usesrelativemaxslopes = false
      s_max = 1.0e-3 # 1.0
      s_d = 1.0e-4 # 5e-3 to 5e-4
      k_tracer_gm_kappa_parameter = 600.0
      k_tracer_isoneutral_parameter = 600.0 # value for cell-based cartesian diffusion - mpiom: 1000/400km = 400/160km
      k_tracer_dianeutral_parameter = 0.0 # 1.0E-5
      switch_off_diagonal_vert_expl = true
      gmredi_combined_diagnostic = false
      revert_vertical_recon_and_transposed = true
      slope_calc_via_temperture_salinity = true
      include_slope_squared_implicit = true # think of l_with_vert_tracer_diffusion
      switch_on_tapering_horizontal_diffusion = true
    [[[ocean_physics_nml]]]
      i_sea_ice = 1 # 0 = no sea ice; 1 = sea ice model on; default=1
      lhamocc = $WITH_OBGC
      lbgcadv = $WITH_OBGC
    [[[ocean_initialconditions_nml]]]
      initialize_fromrestart = false

    [[[output_nml oce_def]]]
      filetype = 5
      output_filename = ${EXP_ID}_oce_def
      filename_format = <output_filename>_<datetime2>
      output_start = $${initial_date} # start in ISO-format
      output_end = $${final_date} # end in ISO-format
      output_interval = $${oce_output_interval_def} # interval in ISO-format
      file_interval = $${oce_file_interval}
      mode = 1 # 1: forecast mode (relative t-axis) 2: climate mode (absolute t-axis)
      include_last = false
      output_grid = false
      operation = mean
      ml_varlist = group:oce_default
    [[[output_nml oce_ice]]]
      output_start = $${initial_date} # start date in ISO-format
      output_end = $${final_date} # end date in ISO-format
      output_interval = $${oce_output_interval} # interval in ISO-format
      file_interval = $${oce_file_interval} # interval in ISO-format
      mode = 1 # 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
      operation = mean # mean over output interval
      output_grid = true
      output_filename = ${EXP_ID}_oce_ice
      filename_format = <output_filename>_<datetime2>
      filetype = 5 # output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
      m_levels = "1...3,9,23,30,34" # surface and some subsurface levels only
      ml_varlist = draftave, hi, hs, conc, to, so
    [[[output_nml oce_dbg]]]
      filetype =  5 # output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
      output_filename = ${EXP_ID}_oce_dbg
      filename_format = <output_filename>_<datetime2>
      output_start = $${initial_date} # start date in ISO-format
      output_end = $${final_date} # end date in ISO-format
      output_interval = $${oce_output_interval} # interval in ISO-format
      file_interval = $${oce_file_interval} # interval in ISO-format
      output_grid = TRUE
      mode =  1 # 1: forecast mode (relative t-axis); 2: climate mode
      operation = mean # mean over output interval
      include_last = false
      m_levels = "1,2" # surface and subsurface level only
      ml_varlist = Qtop, Qbot, Qbot_slow, zHeatOceI, heatOceI, heatOceW, draftave, zUnderIce, mld, condep, zos, u_vint, hi, hs, conc, to, so, u, HeatFlux_Total, atmos_fluxes_HeatFlux_ShortWave, atmos_fluxes_HeatFlux_LongWave, HeatFlux_ShortWave, HeatFlux_LongWave, HeatFlux_Sensible, HeatFlux_Latent, FrshFlux_Runoff, FrshFlux_Precipitation, FrshFlux_Evaporation, FrshFlux_SnowFall, FrshFlux_TotalOcean, FrshFlux_VolumeIce, totalsnowfall, Wind_Speed_10m

[jobs]
  mon_tags = atm_mon, hamocc_monitor, oce_mon
  [[run]]
    .trigger = post
    nodes = 4
    time_limit = 00:20:00
  [[run_start]]
    .extends = run
    entry_point = true

    [[[namelists]]]
      [[[[NAMELIST_oce]]]]
        [[[[[ocean_initialconditions_nml]]]]]
          initialize_fromrestart = true

    [[[files]]]
      [[[[ocean]]]]
        [[[[[restart]]]]]
          .base_dir = $OCEAN_PARENT_DIR
          restart_ocean_DOM01.nc = ${OCEAN_PARENT_EXP_ID}_restart_oce_${OCEAN_PARENT_DATE}.nc

  [[post]]
    .trigger = mon
  [[mon]]
  [[mon_index]]

