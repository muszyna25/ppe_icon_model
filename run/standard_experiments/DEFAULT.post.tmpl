#! /usr/bin/env python
'''\
Post-process ICON experiment data for a given period
'''

import argparse
import os
import re
import sys

sys.path.append(os.path.join('%{MODEL_DIR}', 'lib', 'python'))
import mtime

# Process command line options

def check_date(arg):
    if not re.match(r'\d+-?\d\d-?\d\d$', arg):
        raise argparse.ArgumentTypeError('%r is not a valid date' % arg)
    return arg

command_line = argparse.ArgumentParser(description=__doc__.split('\n', 1)[0])
command_line.add_argument('start_date', type=check_date, help=
    'first date of period (YYYY-MM-DD or YYYYMMDD)')
command_line.add_argument('-V', '--version', action='version', version='0.0.1')
args = command_line.parse_args()

# Do time computations using mtime

mtime.setCalendar(mtime.CALENDAR_TYPE.%{calendar_mtime})

initial_date = mtime.DateTime('%{INITIAL_DATE}')
start_date = mtime.DateTime(args.start_date)

if start_date < initial_date:
    sys.stderr.write("Oops: start_date is before initial_date\n")
    sys.exit(1)
    
interval = mtime.TimeDelta('%{INTERVAL}')
next_date = start_date + interval

atmo_time_step = mtime.TimeDelta('%{ATMO_TIME_STEP}')
ocean_time_step = mtime.TimeDelta('%{OCEAN_TIME_STEP}')

# Format cdo shifttime commands for Makefile generation

atmo_shift_list = ['-shifttime,-{0}{1}'.format(value, name)
    for (name, value) in atmo_time_step.items() if name != 'sign' and value]
ocean_shift_list = ['-shifttime,-{0}{1}'.format(value, name)
    for (name, value) in ocean_time_step.items() if name != 'sign' and value]

# Define required output

tags = ['atm_2d_ml', 'atm_3d_ml', 'atm_dbg_ml', 'atm_mon', 'hamocc', 'hamocc_2d_tendencies', 'hamocc_3d_tendencies', 'hamocc_EU_tendencies', 'hamocc_monitor', 'hamocc_sediment', 'lnd_basic_ml', 'oce_dbg oce_def', 'oce_ice', 'oce_moc', 'oce_mon']

# Generate Makefile

template_dict = {}
template_dict['start_date'] = args.start_date.translate(None, '-')
template_dict['start_step'] = 1 if start_date == initial_date else 2
template_dict['next_date'] = str(next_date.date).translate(None, '-')
template_dict['atmo_shift_spec'] = ' '.join(reversed(atmo_shift_list))
template_dict['ocean_shift_spec'] = ' '.join(reversed(ocean_shift_list))
template_dict['tags'] = ' '.join(tags)

makefile_template = '''
CDO = cdo
CDOFLAGS = -r -O

TAGS = {tags}

all: $(TAGS:%=%{EXP_ID}_%_{start_date}.nc)

clean:
	$(RM) $(TAGS:%=%{EXP_ID}_%_{start_date}.nc)

%{EXP_ID}_atm_%_{start_date}.nc: %{EXP_ID}_atm_%_{start_date}T000000Z.nc %{EXP_ID}_atm_%_{next_date}T000000Z.nc
	$(CDO) $(CDOFLAGS) mergetime {atmo_shift_spec} -seltimestep,2/`cdo -s ntime %{EXP_ID}_atm_$*_{start_date}T000000Z.nc` %{EXP_ID}_atm_$*_{start_date}T000000Z.nc {atmo_shift_spec} -seltimestep,1 %{EXP_ID}_atm_$*_{next_date}T000000Z.nc $@

%{EXP_ID}_lnd_%_{start_date}.nc: %{EXP_ID}_lnd_%_{start_date}T000000Z.nc %{EXP_ID}_lnd_%_{next_date}T000000Z.nc
	$(CDO) $(CDOFLAGS) mergetime {atmo_shift_spec} -seltimestep,2/`cdo -s ntime %{EXP_ID}_lnd_$*_{start_date}T000000Z.nc` %{EXP_ID}_lnd_$*_{start_date}T000000Z.nc {atmo_shift_spec} -seltimestep,1 %{EXP_ID}_lnd_$*_{next_date}T000000Z.nc $@

%{EXP_ID}_oce_def_{start_date}.nc: %{EXP_ID}_oce_def_{next_date}T000000Z.nc
	$(CDO) $(CDOFLAGS) {ocean_shift_spec} %{EXP_ID}_oce_def_{next_date}T000000Z.nc $@

%{EXP_ID}_oce_%_{start_date}.nc: %{EXP_ID}_oce_%_{start_date}T000000Z.nc %{EXP_ID}_oce_%_{next_date}T000000Z.nc
	$(CDO) $(CDOFLAGS) mergetime {ocean_shift_spec} -seltimestep,{start_step}/`cdo -s ntime %{EXP_ID}_oce_$*_{start_date}T000000Z.nc` %{EXP_ID}_oce_$*_{start_date}T000000Z.nc {ocean_shift_spec} -seltimestep,1 %{EXP_ID}_oce_$*_{next_date}T000000Z.nc $@

%{EXP_ID}_hamoc%_{start_date}.nc: %{EXP_ID}_hamoc%_{start_date}T000000Z.nc %{EXP_ID}_hamoc%_{next_date}T000000Z.nc
	$(CDO) $(CDOFLAGS) mergetime {ocean_shift_spec} -seltimestep,{start_step}/`cdo -s ntime %{EXP_ID}_hamoc$*_{start_date}T000000Z.nc` %{EXP_ID}_hamoc$*_{start_date}T000000Z.nc {ocean_shift_spec} -seltimestep,1 %{EXP_ID}_hamoc$*_{next_date}T000000Z.nc $@
'''

print(makefile_template.format(**template_dict))


