#!/bin/ksh
#=============================================================================
# Test the coupling of two dummy models
#=============================================================================
# This section of the run script defines the experiment.
# The specifications are passed by namelist to the program.
# For a complete list see Namelist_overview.pdf
#
# Marco Giorgetta, MPI-M, 2011-01-29
# Hui Wan,         MPI-M, 2010-08-17
# Leonidas Linardakis, MPI-M, 2011-07-20
#
#-----------------------------------------------------------------------------
#
# Basic specifications of the simulation
# --------------------------------------
#
# These variables are set in the header section of the completed run script:
#   EXPNAME = experiment name
#   nproma  = array blocking length / inner loop length
# They may be overwritten here
#
#-----------------------------------------------------------------------------
# This test must have available at least 2 MPI processes.
# If the model runs with mpi_procs=1, then this script exits without error:
# if [[ ${mpi_procs} = 1 ]] ; then
#   echo "This test uses at least 2 mpi_procs. Exit test without error"
#   check_error 0 ${EXPNAME}
#   exit 0
# fi
#-----------------------------------------------------------------------------
# The following values must be set here as shell variables so that they can be used
# also in the executing section of the completed run script
#-----------------------------------------------------------------------------
# the namelist filename
testbed_namelist=NAMELIST_${EXPNAME}
#
#-----------------------------------------------------------------------------
. ./nat_ape.default_values


#-----------------------------------------------------------------------------
# write ICON namelist parameters
# input: namelist_filename
# ------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#  
create_namelist()
{
namelist_filename=$1
cat > $namelist_filename << EOF
&testbed_nml
  testbed_model       = 4  ! test_halo_communication 
  testbed_iterations  = ${nsteps}
  calculate_iterations  = 0
/
&parallel_nml
 iorder_sendrecv = ${iorder_sendrecv}
 nproma         = ${nproma}
 use_icon_comm   = .true.
 icon_comm_method = ${icon_comm_method} 
 max_send_recv_buffer_size = ${max_send_recv_buffer_size}
 max_mpi_message_size = ${max_mpi_message_size}
 p_test_run     = ${p_test_run}
 l_test_openmp  = ${l_test_openmp}
 l_log_checks   = ${l_log_checks}
 l_fast_sum     = .true.
 division_method=${division_method}
 division_file_name="$division_file_name"
 parallel_radiation_mode=$parallel_radiation_mode
 use_dycore_barrier = ${use_dycore_barrier}
 ntasks_per_node=${ntasks_per_node}
 ! test_parallel_radiation = .true.
 ! icon_comm_debug = .true.
/
&grid_nml
 cell_type = 3            ! triangular cells
 dynamics_grid_filename = "${atmo_dyn_grids}",
/
&gridref_nml
/
&run_nml
 num_lev     = ${nlevels},        ! number of full levels of vertical grid
 ntracer     = 0            ! number of tracers
 nsteps      = ${nsteps}    ! [day] length of run
 dtime       = ${dtime}     ! [s] timestep
 ldynamics   = .TRUE.       ! dynamics
 ltransport  = .FALSE.      ! transport 
 iforcing    = 0            ! no forcing
 ltestcase   = .TRUE.       ! run testcase
 ltimer = ${ltimer}
 timers_level = ${timers_level}
 activate_sync_timers = ${activate_sync_timers}
/
&testcase_nml
 ctest_name  = 'JWw'        ! test case identifier
/
&io_nml
 out_expname = '${EXPNAME}' ! file name base
/
&dynamics_nml
 iequations  = 3     ! non-hydrostatic atmosphere 
/
&diffusion_nml
/
&transport_nml
/
EOF
}
#-----------------------------------------------------------------------------

#-----------------------------------------------------------------------------
create_namelist $testbed_namelist
run_atmo="true"
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
null_namelist="NAMELIST_null_${EXPNAME}"
cat > ${null_namelist} << EOF
&testbed_nml
  testbed_model = 0
/
EOF
#-----------------------------------------------------------------------------
dec_size=${dec_size:=$mpi_total_procs}
end_atmo_proc=`expr $dec_size - 1`
end_null_proc=`expr $mpi_total_procs - 1`
namelist_list=( "$atmo_namelist"  "$null_namelist" )
modelname_list=(   "atmo"          "null"          )
modeltype_list=(      1               99           )
minrank_list=(        0            $dec_size       )
maxrank_list=(  $end_atmo_proc    $end_null_proc   )
incrank_list=(        1                1           )
#-----------------------------------------------------------------------------

