#--------------------------------------------------------------------------------------------------
#
# AMIP experiment
#
author_list="Marco Giorgetta, MPIM"
#
#--------------------------------------------------------------------------------------------------
#
# This file describes an AMIP experiment based on the non-hydrostatic dynamics and the ECHAM
# physics, and intialized from analysis files and using transient boundary conditions for:
# - SST and sea ice
# - spectral solar irradiation
# - well mixed greenhouse gases CO2, CH4, N2O, CFCs
# - O3 concentration
# - tropospheric aerosol optical properties
# - stratospheric volcanic aerosol optical properties
#
# _bb_table_Description_  AMIP experiment
# _bb_table_Model_        non-hydrostatic dynamics + ECHAM physics
#
#--------------------------------------------------------------------------------------------------

# (1) Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# nproma                        = blocking length for array dimensioning and inner loop lengths
# second, minute, hour, day     = length of these intervals in [s]

#--------------------------------------------------------------------------------------------------

# (2) Set variables needed by the scripting mechanism

# horizontal grid(s)
grids_folder=${icon_data_poolFolder}/grids/private/r2b4_amip/r0002
atmo_dyn_grids='r2b4_amip.nc'

# start and end date+time
start_date="1979-01-01T00:00:00Z"        # ISO-format date+time
  end_date="2009-01-01T00:00:00Z"        # ISO-format date+time

# restart interval
(( dt_checkpoint = 300 * day))
(( dt_restart    = 900 * day))
#
output_interval_2d="PT2H"
output_interval_3d="PT6H"
file_interval="P300D"

# namelist files
atmo_namelist=NAMELIST_${EXPNAME}_atm
lnd_namelist=NAMELIST_${EXPNAME}_lnd

#--------------------------------------------------------------------------------------------------

# (3) Define the model configuration

# atmospheric dynamics and physics
# --------------------------------
cat > ${atmo_namelist} << EOF
!
&parallel_nml
 nproma           = ${nproma}
/
&grid_nml
 dynamics_grid_filename = "${atmo_dyn_grids}",
/
&run_nml
 num_lev          = 47          ! number of full levels
 dtime            = 600         ! [s] time step
 ltestcase        = .TRUE.     ! run testcase
 ldynamics        = .TRUE.      ! dynamics
 ltransport       = .TRUE.      ! transport
 ntracer          = 3           ! number of tracers
 iforcing         = 2           ! 0: none, 1: HS, 2: 2: ECHAM, 3: NWP
 output           = 'nml'
 msg_level        = 15          ! level of details report during integration 
 restart_filename = "${EXPNAME}_restart_atm_<rsttime>.nc"
/
&nh_testcase_nml
 nh_test_name      = 'TPEc'     ! test case identifier
 tpe_moist         = 25.        ! initial moisture content = 25 kg/m2 (=mm)
 tpe_psfc          = 100000.    ! initial surface pressure = 1000 hPa
 tpe_temp          = 290.       ! initial atm. temperature = 290 K
/
&extpar_nml
 itopo            = 0           ! 1: read topography from the grid file
 l_emiss          = .FALSE.
/
&initicon_nml
 init_mode        = 2           ! 2: initialize from IFS analysis
/
&dynamics_nml
 iequations       = 3           ! 3: ICONAM dynamics
/
&nonhydrostatic_nml
 ndyn_substeps    = 5           ! dtime/dt_dyn
 damp_height      = 50000.      ! [m]
 rayleigh_coeff   = 0.10
 vwind_offctr     = 0.2
 divdamp_fac      = 0.004
/
&interpol_nml
 rbf_scale_mode_ll = 1
/
&sleve_nml
 min_lay_thckn    = 40.         ! [m]
 top_height       = 83000.      ! [m]
 stretch_fac      = 0.9
 decay_scale_1    = 4000.       ! [m]
 decay_scale_2    = 2500.       ! [m]
 decay_exp        = 1.2
 flat_height      = 16000.      ! [m]
/
&diffusion_nml
/
&transport_nml
 tracer_names     = 'v','w','i'       ! water vapour, cloud water, cloud ice
 ivadv_tracer     = 3,3,3
 itype_hlimit     = 3,4,4
 ihadv_tracer     = 52,2,2
/
&echam_phy_nml
!
! domain 1
! --------
!
! atmospheric phyiscs (""=never)
 echam_phy_config(1)%dt_rad = "PT2H"
 echam_phy_config(1)%dt_vdf = "PT10M"
 echam_phy_config(1)%dt_cnv = "PT10M"
 echam_phy_config(1)%dt_cld = "PT10M"
 echam_phy_config(1)%dt_gwd = "PT10M"
 echam_phy_config(1)%dt_sso = ""
!
! atmospheric chemistry (""=never)
 echam_phy_config(1)%dt_mox = ""
 echam_phy_config(1)%dt_car = ""
 echam_phy_config(1)%dt_art = ""
!
! surface (.TRUE. or .FALSE.)
 echam_phy_config(1)%ljsb  = .TRUE.
 echam_phy_config(1)%lamip = .TRUE.
 echam_phy_config(1)%lice  = .FALSE.
 echam_phy_config(1)%lmlo  = .FALSE.
!
/
&echam_rad_nml
!
! domain 1
! --------
!
 echam_rad_config(1)%isolrad    =  1
 echam_rad_config(1)%irad_h2o   =  1
 echam_rad_config(1)%irad_co2   =  2
 echam_rad_config(1)%irad_ch4   =  3
 echam_rad_config(1)%irad_n2o   =  3
 echam_rad_config(1)%irad_o3    =  8
 echam_rad_config(1)%irad_o2    =  2
 echam_rad_config(1)%irad_cfc11 =  2
 echam_rad_config(1)%irad_cfc12 =  2
 echam_rad_config(1)%irad_aero  = 15
 echam_rad_config(1)%ighg       =  1
/
&echam_gwd_nml
/
&echam_vdf_nml
/
&echam_cnv_nml
/
&echam_cld_nml
/
EOF

# land surface and soil
# ---------------------
cat > ${lnd_namelist} <<EOF
&jsb_model_nml
  usecase         = 'jsbach_lite_tpe_closed'
/
&jsb_srf_nml
  bc_filename     = 'bc_land_phys.nc'
  bc_sso_filename = 'bc_land_sso.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_soil_nml
  active          = .TRUE.
  nsoil_energy    = 5
  nsoil_water     = 5
  bc_filename     = 'bc_land_soil.nc'
  ic_filename     = 'ic_land_soil.nc'
/
&jsb_veg_nml
  active          = .TRUE.
  bc_filename     = 'bc_land_phys.nc'
  ic_filename     = 'ic_land_soil.nc'
/
EOF

#--------------------------------------------------------------------------------------------------

# (4) Define the input

# model files
#
add_link_file ${basedir}/data/rrtmg_lw.nc                               ./
add_link_file ${basedir}/data/ECHAM6_CldOptProps.nc                     ./

# namelist files
#
add_required_file ${basedir}/run/${atmo_namelist}                       ./
add_required_file ${basedir}/run/${lnd_namelist}                        ./

# dictionary file for output variable names
#
dict_file="dict.${EXPNAME}"
cat dict.iconam.mpim      > ${dict_file}
cat dict.echam_tpe.mpim  >> ${dict_file}
add_required_file ${basedir}/run/${dict_file}                           ./

# initial conditions
#
INDATA=${icon_data_poolFolder}/input/r0004
#
# - atmosphere: ECMWF analysis, 1979-01-01T00:00:00Z
datadir=/pool/data/ICON/setup/ifs_iconremap_amip
add_link_file $datadir/ifs_remap_R2B4_00XX_AMIP_2012010100_setyear1979.nc ./ifs2icon_R2B04_DOM01.nc
#
# - land: source?, date+time?
echo "ic_ and bc_ files for TPE not in pool yet, please specify location for files in run script!"
exit
datadir=$INDATA/r2b4_amip/lnd
add_link_file ${datadir}/ic_land_soil_1976.nc                           ./ic_land_soil.nc

# boundary conditions
#
# range of years for yearly files
# assume start_date and end_date have the format yyyy-...
start_year=$(( ${start_date%%-*} - 1 ))
end_year=$(( ${end_date%%-*} + 1 ))
#
# - well mixed greenhouse gases
datadir=$INDATA/global/atm
add_link_file $datadir/bc_greenhouse_rcp45_1765-2500.nc                 ./bc_greenhouse_gases.nc
#
# - ozone
datadir=$INDATA/r2b4_amip/atm/bc_ozone_cmip5
year=$start_year
while [[ $year -le $end_year ]]
do
  add_link_file $datadir/bc_ozone_cmip5_${year}.nc                      ./bc_ozone_${year}.nc
  (( year = year+1 ))
done
#
# - tropospheric aerosol
datadir=$INDATA/r2b4_amip/atm/bc_aeropt_kinne
year=$start_year
while [[ $year -le $end_year ]]
do
  add_link_file $datadir/bc_aeropt_kinne_lw_b16_coa.nc                  ./bc_aeropt_kinne_lw_b16_coa_${year}.nc
  add_link_file $datadir/bc_aeropt_kinne_sw_b14_coa.nc                  ./bc_aeropt_kinne_sw_b14_coa_${year}.nc
  if [[ $year -le 2000 ]]
  then
    add_link_file $datadir/bc_aeropt_kinne_sw_b14_fin_${year}.nc        ./bc_aeropt_kinne_sw_b14_fin_${year}.nc
  else
    add_link_file $datadir/bc_aeropt_kinne_sw_b14_fin_rcp45_${year}.nc  ./bc_aeropt_kinne_sw_b14_fin_${year}.nc
  fi
  (( year = year+1 ))
done
#
# - stratospheric aerosol
datadir=$INDATA/r2b4_amip/atm/bc_aeropt_stenchikov
year=$start_year
while [[ $year -le $end_year ]]
do
  if [[ $year -le 1999 ]]
  then
    add_link_file $datadir/bc_aeropt_stenchikov_lw_b16_sw_b14_${year}.nc  ./bc_aeropt_stenchikov_lw_b16_sw_b14_${year}.nc
  else
    add_link_file $datadir/bc_aeropt_stenchikov_lw_b16_sw_b14_1999.nc     ./bc_aeropt_stenchikov_lw_b16_sw_b14_${year}.nc
  fi
  (( year = year+1 ))
done
#
# - sst and sic
datadir=$INDATA/r2b4_amip/oce
add_link_file $datadir/bc_sic_pcmdi_1870-2010.nc                        ./bc_sic.nc
add_link_file $datadir/bc_sst_pcmdi_1870-2010.nc                        ./bc_sst.nc
#
# - ssi and tsi
datadir=$INDATA/global/sun
add_link_file $datadir/bc_solar_irradiance_14band_1849-2399.nc          ./bc_solar_irradiance_sw_b14.nc
#
# - land parameters
datadir=$INDATA/r2b4_amip/lnd
add_link_file $datadir/bc_land_frac_1976.nc                             ./bc_land_frac.nc
add_link_file $datadir/bc_land_phys_1976.nc                             ./bc_land_phys.nc
add_link_file $datadir/bc_land_soil_1976.nc                             ./bc_land_soil.nc
add_link_file $datadir/bc_land_sso_1976.nc                              ./bc_land_sso.nc

#--------------------------------------------------------------------------------------------------

# (5) Define the output

# Parameters for all output files
# -------------------------------
cat >> ${atmo_namelist} << EOF
&io_nml
 dt_checkpoint    = ${dt_checkpoint}  ! [s] restart file interval
 output_nml_dict  = "${dict_file}"
 netcdf_dict      = "${dict_file}"
 itype_pres_msl   = 4
/
EOF

# Define grids for horizontal remapping
# -------------------------------------
#
# The ICON RmBn grid has 3*m*2**n rows of triangles between the vertices at the N and S pole.
# The number of triangles in a row around this axis increases linearly from 5 to 5*(1+2*(i-1))
# at the base of the "polar" icosahedral triangles. In the "tropical" icosahedral triangles
# all rows have a  5*(2*(m*2**n)) triangles. The triangles are either northward or southward
# pointing. Thus the smallest periodic element in a tropical row is a rhombus formed by two
# adjacent triangles. A tropical row has 5*(m*n**2) rhombi.
#
# The R2B4 grid has a total of 20480 triangular cells in 96 rows.
# The tropical rows have 320 triangles or 160 rhombi.
#
# Therefore the following regular lon-lat grids are of interest for remapping:
#
# regular  grid: nlat=96, nlon=192, npts=18432, dlat=1.875 deg, dlon=1.875 deg
reg_lat_def_reg=-89.0625,1.875,89.0625
reg_lon_def_reg=0.,1.875,358.125
#
# rhombus  grid: nlat=96, nlon=160, npts=15360, dlat=1.875 deg, dlon=2.250 deg
reg_lat_def_rmb=$reg_lat_def_reg
reg_lon_def_rmb=0.,2.25,357.75
#
# triangle grid: nlat=96, nlon=320, npts=30720, dlat=1.875 deg, dlon=1.125 deg
reg_lat_def_tri=$reg_lat_def_reg
reg_lon_def_tri=0.,1.125,358.875


# Define output files
# -------------------
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>

output_atm_3d=yes
#
if [[ "$output_atm_3d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"                  ! ISO-format date+time
 output_end       = "${end_date}"                    ! ISO-format date+time
 output_interval  = "${output_interval_3d}"          ! ISO-format interval
 file_interval    = "${file_interval}"               ! ISO-format interval
 include_last     = .FALSE.
 ml_varlist       = 'ta','ua','va','wa','wap','hus','hur','cl','clw','cli','rho',
                    'zg','zghalf','pfull','phalf','dpres_mc'
/
EOF
fi


output_atm_2d=yes
#
if [[ "$output_atm_2d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"                  ! ISO-format date+time
 output_end       = "${end_date}"                    ! ISO-format date+time
 output_interval  = "${output_interval_2d}"          ! ISO-format interval
 file_interval    = "${file_interval}"               ! ISO-format interval
 include_last     = .FALSE.
 ml_varlist       = 'ps'      , 'psl'     ,
                    'cosmu0'  , 'rsdt'    ,
                    'rsns'    , 'rlns'    , 'rsnt'    , 'rlnt'    ,
                    'rsns_lnd',
                    'rlns_lnd', 'tend_ta_rlw_impl',
                    'ts_lnd'  , 'ts'      , 'ts_rad'  ,
                    'sic'     , 'sit'     ,
                    'swvis_dif_frac', 'swnir_dif_frac', 'swvis', 'swnir',
                    'albedo'  , 'albedo_lnd',
                    'albvisdir','albvisdif' , 'albnirdir' , 'albnirdif',
                    'albvisdir_lnd',
                    'clt'     ,
                    'prlr'    , 'prls'    , 'prcr'    , 'prcs'    ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'hfls_lnd',
                    'hfss_lnd',
                    'tauu'    , 'tauv'    ,
                    'tauu_lnd',
                    'tauv_lnd',
                    'tauu_sso', 'tauv_sso', 'diss_sso', 
                    'sh_vdiff', 'qv_vdiff',
                    'ch_concloud',
                    'con_dtrl', 'con_dtri', 'con_iteqv',
                    'cld_dtrl', 'cld_dtri', 'cld_iteq'
/
EOF
fi


output_phy_3d=yes
#
if [[ "$output_phy_3d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_phy_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"                  ! ISO-format date+time
 output_end       = "${end_date}"                    ! ISO-format date+time
 output_interval  = "${output_interval_3d}"          ! ISO-format interval
 file_interval    = "${file_interval}"               ! ISO-format interval
 include_last     = .FALSE.
 ml_varlist       = 'tend_ta'      , 'tend_ta_dyn'  , 'tend_ta_phy'  ,
                    'tend_ta_rlw'  , 'tend_ta_rsw'  ,
                    'tend_ta_vdf'  , 'tend_ta_gwd'  , 'tend_ta_sso'  ,
                    'tend_ta_cnv'  , 'tend_ta_cld'  , 
                    'tend_ua'      , 'tend_ua_dyn'  , 'tend_ua_phy'  ,
                    'tend_ua_vdf'  , 'tend_ua_gwd'  , 'tend_ua_sso'  ,
                    'tend_ua_cnv'  , 
                    'tend_va'      , 'tend_va_dyn'  , 'tend_va_phy'  ,
                    'tend_va_vdf'  , 'tend_va_gwd'  , 'tend_va_sso'  ,
                    'tend_va_cnv'  ,
                    'tend_hus'     , 'tend_hus_dyn' , 'tend_hus_phy' ,
                    'tend_hus_cld' , 'tend_hus_cnv' , 'tend_hus_vdf' ,
                    'pfull'
/
EOF
fi


output_aer_3d=no # "yes" needs lrad_aero_diag=.TRUE. in radiation_nml
#
if [[ "$output_aer_3d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_aer_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"                  ! ISO-format date+time
 output_end       = "${end_date}"                    ! ISO-format date+time
 output_interval  = "${output_interval_3d}"          ! ISO-format interval
 file_interval    = "${file_interval}"               ! ISO-format interval
 include_last     = .FALSE.
 ml_varlist       = 'prm_aer_aod_533',  'prm_aer_ssa_533',  'prm_aer_asy_533' , 
                    'prm_aer_aod_2325', 'prm_aer_ssa_2325', 'prm_aer_asy_2325', 
                    'prm_aer_aod_9731',
                    'pfull'
/
EOF
fi


output_lnd=yes
#
if [[ "$output_lnd" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_lnd"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"                  ! ISO-format date+time
 output_end       = "${end_date}"                    ! ISO-format date+time
 output_interval  = "${output_interval_2d}"          ! ISO-format interval
 file_interval    = "${file_interval}"               ! ISO-format interval
 include_last     = .FALSE.
 ml_varlist       = 'fract', 'alb_vis_srf', 'alb_nir_srf', 't_srf', 'lai', 's_srf', 'qsat_srf'
                    'canopy_cond', 'ws_l', 'ws_fc_l', 'ws_pwp_l', 'ws_sat_l', 'ws'
                    'water_stress', 'ws_root', 'ws_fc_root', 'ws_pwp_root'
                    'albedo_srf', 't_air', 'q_air',
                    'lw_srf_down', 'swnir_srf_down', 'swpar_srf_down', 'swvis_srf_down',
                    'root_depth', 'root_depth_l', 'soil_depth', 'soil_depth_l'
                    'evapotrans', 'sensible_hflx', 'latent_hflx' 
                    'fact_qsat_srf', 'fact_qsat_trans_srf', 'fact_q_air', 'fract_fpc_max', 'fract_fpc'
                    't_srf_unfilt', 't_srf_unfilt_old', 't_srf_old'
                    't_soil', 'wsn_srf', 'wsr_srf', 't_eff_srf', 'grnd_hflx'
                    'sfract_srf', 'wfract_srf', 'sfract_soil', 'sfract_can', 'wfract_can', 'wfract_soil'
                    'q_snocpymlt', 'rough_m_srf', 'rough_h_srf'
/
EOF
fi

#--------------------------------------------------------------------------------------------------
