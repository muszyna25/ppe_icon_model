#=============================================================================
# basic aquaplanet setup using echam physics with the nh core.
#
# Date: 11.01.2016 - Sebastian K. MÃ¼ller
# Original Design: Marco Giorgetta
#
#=============================================================================
#=============================================================================
# 
# This section of the run script contains the specifications of the experiment.
# The specifications are passed by namelist to the program.
# For a complete list see Namelist_overview.pdf
#
#=============================================================================
#--------------------------------------------------------------------------------------------------

# (1) Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name of exp.>'
# basedir                       = base directory, where src/, run/ etc exist
# thisdir                       = equals here to the run/
# nproma                        = blocking length for array dimensioning and inner loop lengths
# second, minute, hour, day     = length of these intervals in [s]
#
#--------------------------------------------------------------------------------------------------

# (2) Set variables needed by the scripting mechanism

# the grid parameters
grids_folder=/pool/data/ICON/oes/grids/AquaPlanets/
atmo_dyn_grids="AquaPlanet_Icos_0158km_springOpt.nc"

# start and end date+time
start_date="2001-01-01T00:00:00Z"
end_date="2001-01-01T01:20:00Z"
calendar="'360 day year'"
#
#--------------------------------------------------------------------------------------------------
#
# restart setup
minute=60
(( dt_restart = 40 * minute ))              # performing restart every [s]
(( dt_checkpoint = 80 * minute ))           # writing restart file every [s]
checkpoint_interval="PT08M"     # writing restart files
restart_interval="PT16M"        # performing restart

output_interval_3d="PT04M"       # 3D output frequency
output_interval_2d="PT04M"       # 2D output frequency
file_interval="PT04M"

# the namelist filename
atmo_namelist=NAMELIST_${EXPNAME}

#--------------------------------------------------------------------------------------------------
# model parameters
model_equations=3                # equation system
#                                1=hydrost. atm. T
#                                1=hydrost. atm. theta dp
#                                3=non-hydrost. atm.,
#                                0=shallow water model
#                               -1=hydrost. ocean
#--------------------------------------------------------------------------------------------------
cat > ${atmo_namelist} << EOF
&parallel_nml
 nproma         = ${nproma}
/
&grid_nml
 dynamics_grid_filename = "${atmo_dyn_grids}",
/
&run_nml
 num_lev      = 47,          ! number of full levels of vertical grid
 dtime            = 240         ! [s] time step   !! MUST BE EQUAL TO "modelTimeStep" !!
 modelTimeStep= "PT04M"      
 ldynamics    = .TRUE.       ! dynamics                     --> dynamics_ctl, diffusion_ctl
 ltransport   = .TRUE.       ! switch on tracer transport   --> transport_ctl
 iforcing     = 2            ! 0: none, 1: HS, 2: ECHAM, 3: NWP
 ltestcase    = .TRUE.       ! run testcase                 --> testcase_ctl
 ntracer      = 3            ! number of tracers
 msg_level    = 15           
 activate_sync_timers = .TRUE.
 output       = 'nml'
 restart_filename = "${EXPNAME}_restart_atm_<rsttime>.nc" 
/
&echam_phy_nml
 lrad             = .TRUE.
 dt_rad           =  480.      ! [s] radiation time step
 lvdiff           = .TRUE.
 lconv            = .TRUE.
 lcond            = .TRUE.
 lgw_hines        = .TRUE.
 lssodrag         = .FALSE.
 lmlo             = .FALSE.
 lice             = .FALSE.
 ljsbach          = .FALSE.
 lebudget         = .FALSE.
 lamip            = .FALSE.
/
&radiation_nml
 irad_o3    = 4             ! 4= use APE ozone 0=no ozone 6: non-hydrostatic ozone
 irad_aero  = 0             ! switch off aerosols
 izenith    = 3             ! circular orbit, no seasonal cycle but with diurnal cycle
 irad_co2   = 2             ! constant co2 vmr
 irad_ch4   = 0             ! switch off ch4
 irad_n2o   = 0             ! switch off n2o
 irad_h2o   = 1             ! prognostic vapor, liquid and ice
 irad_o2    = 0             ! switch off o2
 irad_cfc11 = 0             ! switch off cfc11
 irad_cfc12 = 0             ! switch off cfc12
/
&psrad_nml
rad_perm          = 1           ! Integer for perturbing random number seeds
/
&psrad_orbit_nml
cecc        = 0.0
cobld       = 0.0
l_orbvsop87 = .FALSE.
/
&nonhydrostatic_nml
 ndyn_substeps    =  2          ! dtime/dt_dyn
 damp_height      = 50000.      ! [m]
 rayleigh_coeff   = 0.10
 vwind_offctr     = 0.2
 divdamp_fac      = 0.004
/
&sleve_nml    
 min_lay_thckn    = 40.         ! [m]
 top_height       = 83000.      ! [m]
 stretch_fac      = 0.9         !
 decay_scale_1    = 4000.       ! [m]
 decay_scale_2    = 2500.       ! [m]
 decay_exp        = 1.2         !
 flat_height      = 16000.      ! [m]
/
!&dynamics_nml
! iequations       = 3 
! lcoriolis        = .FALSE. 
!/
&nh_testcase_nml
 nh_test_name     = 'APE_echam'     ! test case identifier
 ape_sst_case     = 'sst_qobs'
/
&transport_nml
 ctracer_list     = 'vwi'       ! water vapour, cloud water, cloud ice
 ivadv_tracer     = 3,3,3
 itype_hlimit     = 3,4,4
 ihadv_tracer     = 52,2,2
/
&diffusion_nml
/
&interpol_nml
 rbf_scale_mode_ll = 1
/
EOF
#--------------------------------------------------------------------------------------------------

# (4) Define the input

# model files
#
add_required_file ${basedir}/data/rrtmg_lw.nc           ./
add_required_file ${basedir}/data/rrtmg_sw.nc           ./
add_required_file ${basedir}/data/ECHAM6_CldOptProps.nc ./

# namelist files
#
add_required_file ${thisdir}/${atmo_namelist} ./
add_required_file ${basedir}/run/${lnd_namelist}                        ./

# initial conditions
#
#restart=.TRUE.
#add_required_file expdir/AquaPlanet_Icos_0158km_springOpt_restart_atm_00000000T000000Z.nc ./APE_echam_R2B3_restart_atm_20010101T000000Z.nc
#restart_atmo_from="APE_echam_R2B3_restart_atm_00000000T000000Z.nc"
#restart_from_folder=${EXPNAME}

#restart_from_folder="APE_restart_files"

# boundary conditions
#
# - ozone
ozone_file="ape_o3_iconR2B04-ocean_aqua_planet.nc"
add_required_file ${basedir}/data/external/ape_ozone/$ozone_file ./o3_icon_DOM01.nc

# dictionary for variable names
# -----------------------------
dict_file="dict.${EXPNAME}"
rm -f ${dict_file}
add_required_file ${basedir}/run/${dict_file}                                ./

#--------------------------------------------------------------------------------------------------
#---------------------------------------------------------------
# add standard atmo_non-hydrostatic_files
#. ${thisdir}/add_required_atmo_non-hydrostatic_files
#. ${thisdir}/add_required_atmo_hydrostatic_files
#--------------------------------------------------------------------------------------------------

# (5) Define the output

# Parameters for all output files
# -------------------------------
cat >> ${atmo_namelist} << EOF

&io_nml
 lflux_avg      = .false. ! false: accumulated values
 dt_checkpoint  = ${dt_checkpoint}
 output_nml_dict  = "${dict_file}"
 netcdf_dict      = "${dict_file}"
 lnetcdf_flt64_output = .TRUE.
 itype_pres_msl   = 4
/
EOF

# Define grids for horizontal remapping
# -------------------------------------
#
# The ICON RmBn grid has 3*m*2**n rows of triangles between the vertices at the N and S pole.
# The number of triangles in a row around this axis increases linearly from 5 to 5*(1+2*(i-1))
# at the base of the "polar" icosahedral triangles. In the "tropical" icosahedral triangles
# all rows have a  5*(2*(m*2**n)) triangles. The triangles are either northward or southward
# pointing. Thus the smallest periodic element in a tropical row is a rhombus formed by two
# adjacent triangles. A tropical row has 5*(m*n**2) rhombi.
#
# The R2B4 grid has a total of 20480 triangular cells in 96 rows.
# The tropical rows have 320 triangles or 160 rhombi.
#
# Therefore the following regular lon-lat grids are of interest for remapping:
#
# regular  grid: nlat=96, nlon=192, npts=18432, dlat=1.875 deg, dlon=1.875 deg
reg_lat_def_reg=-89.0625,1.875,89.0625
reg_lon_def_reg=0.,1.875,358.125
#
# rhombus  grid: nlat=96, nlon=160, npts=15360, dlat=1.875 deg, dlon=2.250 deg
reg_lat_def_rmb=$reg_lat_def_reg
reg_lon_def_rmb=0.,2.25,357.75
#
# triangle grid: nlat=96, nlon=320, npts=30720, dlat=1.875 deg, dlon=1.125 deg
reg_lat_def_tri=$reg_lat_def_reg
reg_lon_def_tri=0.,1.125,358.875


# Define output files
# -------------------
#
#
cat dict.iconam.mpim >> ${dict_file}
cat dict.echam.mpim >> ${dict_file}
dict_file="dict.${EXPNAME}"
cat dict.iconam.mpim_inst  > ${dict_file}
add_required_file ${basedir}/run/${dict_file}                           ./

#
output_atm_2d=yes
#
if [[ "$output_atm_2d" == "yes" ]]; then
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"                  ! ISO-format date+time
 output_end       = "${end_date}"                    ! ISO-format date+time
 output_interval  = "${output_interval_2d}"          ! ISO-format interval
 file_interval    = "${file_interval}"
! steps_per_file   = ${output_steps_per_file}
 include_last     = .FALSE.
 ml_varlist       = 'ps','psl',
                    'cosmu0'  , 'rsdt'    ,
                    'rsns'    , 'rlns'    , 'rsnt'    , 'rlnt'    ,
                    'ts'      , 'ts_rad'  ,
                    'albedo'  ,
                    'clt'     ,
                    'prlr'    , 'prls'    , 'prcr'    , 'prcs'    ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'tauu'    , 'tauv'    ,
                    'sh_vdiff', 'qv_vdiff',
                    'ch_concloud',
                    'con_dtrl', 'con_dtri', 'con_iteqv',
                    'cld_dtrl', 'cld_dtri', 'cld_iteq'
/
EOF
fi
#
output_atm_2d_rmb=yes
#
if [[ "$output_atm_2d_rmb" == "yes" ]]; then
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_2d_rmb"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 1
 reg_def_mode     = 1
 reg_lat_def      = ${reg_lat_def_rmb}
 reg_lon_def      = ${reg_lon_def_rmb}
 output_grid      = .TRUE.
 output_start     = "${start_date}"                  ! ISO-format date+time
 output_end       = "${end_date}"                    ! ISO-format date+time
 output_interval  = "${output_interval_2d}"          ! ISO-format interval
 file_interval    = "${file_interval}"
! steps_per_file   = ${output_steps_per_file}
 include_last     = .FALSE.
 ml_varlist       = 'ps','psl'
                    'cosmu0'  , 'rsdt'    ,
                    'rsns'    , 'rlns'    , 'rsnt'    , 'rlnt'    ,
                    'ts'      , 'ts_rad'  ,
                    'albedo'  ,
                    'clt'     ,
                    'prlr'    , 'prls'    , 'prcr'    , 'prcs'    ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'tauu'    , 'tauv'    ,
                    'sh_vdiff', 'qv_vdiff',
                    'ch_concloud',
                    'con_dtrl', 'con_dtri', 'con_iteqv',
                    'cld_dtrl', 'cld_dtri', 'cld_iteq'
/
EOF
fi
#
output_phy_3d=yes # "yes" increases the output volume significantly!
#
if [[ "$output_phy_3d" == "yes" ]]; then
  cat >> ${atmo_namelist} << EOF
  #
&output_nml
 output_filename  = "${EXPNAME}_phy_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
  remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"                  ! ISO-format date+time
 output_end       = "${end_date}"                    ! ISO-format date+time
 output_interval  = "${output_interval_3d}"             ! ISO-format interval
 file_interval    = "${file_interval}"
! steps_per_file   = ${output_steps_per_file}
 include_last     = .FALSE.
 ml_varlist       = 'ta','ua','va','wap','wa','hus','hur','cl','clw','cli',
		    'rho','zg','zghalf','pfull','dpres_mc',
                    'tend_ta'      , 'tend_ta_dyn'  , 'tend_ta_phy'  ,
                    'tend_ta_rlw'  , 'tend_ta_rsw'  ,
                    'tend_ta_vdf'  , 'tend_ta_gwh'  , 
                    'tend_ta_cnv'  , 'tend_ta_cld'  , 
                    'tend_ua'      , 'tend_ua_dyn'  , 'tend_ua_phy'  ,
                    'tend_ua_vdf'  , 'tend_ua_gwh'  , 
                    'tend_ua_cnv'  , 
                    'tend_va'      , 'tend_va_dyn'  , 'tend_va_phy'  ,
                    'tend_va_vdf'  , 'tend_va_gwh'  , 
                    'tend_va_cnv'  ,
                    'tend_hus'     , 'tend_hus_dyn' , 'tend_hus_phy' ,
                    'tend_hus_cld' , 'tend_hus_cnv' , 'tend_hus_vdf'
/
EOF
fi
#
output_phy_3d_rmb=yes # "yes" increases the output volume significantly!
#
if [[ "$output_phy_3d_rmb" == "yes" ]]; then
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_phy_3d_rmb"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
  remap            = 1
 reg_def_mode     = 1
 reg_lat_def      = ${reg_lat_def_rmb}
 reg_lon_def      = ${reg_lon_def_rmb}
 output_grid      = .TRUE.
 output_start     = "${start_date}"                  ! ISO-format date+time
 output_end       = "${end_date}"                    ! ISO-format date+time
 output_interval  = "${output_interval_3d}"          ! ISO-format interval
 file_interval    = "${file_interval}"
! steps_per_file   = ${output_steps_per_file}
 include_last     = .FALSE.
 ml_varlist       = 'ta','ua','va','wa','wap','hus','hur','cl','clw','cli','rho','zg'
                    'tend_ta'      , 'tend_ta_dyn'  , 'tend_ta_phy'  ,
                    'tend_ta_rlw'  , 'tend_ta_rsw'  ,
                    'tend_ta_vdf'  , 'tend_ta_gwh'  , 
                    'tend_ta_cnv'  , 'tend_ta_cld'  , 
                    'tend_ua'      , 'tend_ua_dyn'  , 'tend_ua_phy'  ,
                    'tend_ua_vdf'  , 'tend_ua_gwh'  , 
                    'tend_ua_cnv'  , 
                    'tend_va'      , 'tend_va_dyn'  , 'tend_va_phy'  ,
                    'tend_va_vdf'  , 'tend_va_gwh'  , 
                    'tend_va_cnv'  ,
                    'tend_hus'     , 'tend_hus_dyn' , 'tend_hus_phy' ,
                    'tend_hus_cld' , 'tend_hus_cnv' , 'tend_hus_vdf'
/
EOF
fi
#--------------------------------------------------------------------------------------------------
