#!/bin/ksh

#=============================================================================
#
# This section of the run script containes the specifications of the ocean experiment.
# The specifications are passed by namelist to the program.
# For a complete list see Namelist_overview.pdf
#
# Default EXPNAME is the suffix of this script after "exp."
#
# Stephan Lorenz, MPI-M, 2011-01-26
#
#-----------------------------------------------------------------------------
#
# Preliminary test phase: run on specific systems and compiler only
#  - 2011-01-31: mpipc/tornado/squall - all compilers
#  - 2011-03-03: blizzard serial run included
#  - 2011-03-04: error test
if [ -z "$BB_SYSTEM" ]
then
  echo " ===== (no buildbot) ======="
  echo " Run ocean testcase $EXPNAME"
  echo " ==========================="
else
  if [ "$BB_SYSTEM" == "mpipc" -o "$BB_SYSTEM" == "squall" -o "$BB_SYSTEM" == "tornado" ]
  then 
# if [ "$BB_SYSTEM" == "mpipc" -o "$BB_SYSTEM" == "squall" -o "$BB_SYSTEM" == "tornado" -o [ "$BB_SYSTEM" == "blizzard" -a "$BB_SLAVE" == "blizz_nMnO" ] ]
    echo " ================================================="
    echo " Run ocean testcase $EXPNAME on BB_SLAVE=$BB_SLAVE"
    echo " ================================================="
  else
    if [ "$BB_SYSTEM" == "blizzard" -a "$BB_SLAVE" == "blizz_nMnO" ] 
    then
      echo " ================================================="
      echo " Run ocean testcase $EXPNAME on BB_SLAVE=$BB_SLAVE"
      echo " ================================================="
    else
      echo " ========================================================="
      echo " No ocean testcase is run on BB_SLAVE=$BB_SLAVE - exit now"
      echo " ========================================================="
      exit 0
    fi
  fi
fi
#-----------------------------------------------------------------------------


#-----------------------------------------------------------------------------
#
# Basic specifications of the simulation
# --------------------------------------
#
# These variables are set in the header section of the completed run script:
#
# EXPNAME = experiment name
# NPROMA  = array blocking length / inner loop length
#-----------------------------------------------------------------------------
#
#-----------------------------------------------------------------------------
# The following values must be set here as shell variables so that they can be used
# also in the executing section of the completed run script
#
#-----------------------------------------------------------------------------
# the namelist filename
ocean_namelist=NAMELIST_${EXPNAME}
#
#-----------------------------------------------------------------------------
# global resolution
R=2   # nroot
B=4   # number of bisections applied
#
#-----------------------------------------------------------------------------
# ocean initialization (init_oce=1) needs an additional file for prognostic variables
init_oce=0     # 1: use ocean initialization file; 0: init with constants or analytically
# prognostic ocean initialization files ust be provided and named as
# $HGRIDDIR/ts_phc_season-iconR${R}B0{B}-L11.nc
#
#-----------------------------------------------------------------------------
# ocean forcing = 12 needs an additional flux file 
iforc=11
iforc_omip=1   # type of OMIP forcing to read: 1 = u/v-stress;     2 = full 12 OMIP datasets
iforc_len=12   # length of forcing dataset:   12 = monthly data; 366 = daily data
# flux files must be provided and named as as
# $HGRIDDIR/omip4icon-R${R}B0{B}-monmean.nc
#
#-----------------------------------------------------------------------------
# global timing
start_date="2000-01-01T00:00:00Z"
#
#-----------------------------------------------------------------------------
# model timing
dtime=1800           # ocean model timestep [s]
ndays=1              # ocean model run in days
dt_data=21600.       # ocean model output interval [s]
ndays_file=360       # new output file generation interval [days]
ndays_checkp=30      # write restart file interval [days]
ndays_restart=1      # stop model for restart [days]
#
#-----------------------------------------------------------------------------
# calculate model timesteps using $ndays
nsteps=`expr ${ndays} \* 86400 / ${dtime}`
#nsteps=4 
# diagnostic output (not in ocean model)
#dt_diag=`expr 4 \* 3600 `    #  output each 4 hours
dt_file=`expr ${ndays_file} \* 86400`
dt_checkpoint=`expr ${ndays_checkp} \* 86400`
dt_checkpoint=21600
dt_restart=`expr ${ndays_restart} \* 86400`
#
#-----------------------------------------------------------------------------
# model parameters
ocean_model_equations=-1 # equation system
#                      0=shallow water model
#                     -1=hydrost. ocean
#
#-----------------------------------------------------------------------------
# the grid files
# USE_BASIN="Y"      # "Y": ocean horizontal gridfile base is "bas0-60N"
# USE_AQUAP="Y"      # "Y": ocean horizontal gridfile base is "aqua_planet"
# USE_FLATB="Y"      # "Y": ocean horizontal gridfile base is "etopo40_flat"
  USE_BATHY="Y"      # "Y": ocean horizontal gridfile base is "etopo40_planet"
# USE_POOLD="Y"      # "Y": overwrite ocean gridfile from pool
#-----------------------------------------------------------------------------
if [ "x$USE_FLATB" == "xY"  ] ; then
  grid_ext="etopo40_flat"
  USE_POOLD="Y"
elif [ "x$USE_BATHY" == "xY"  ] ; then
  grid_ext="etopo40_planet"
  USE_POOLD="Y"
elif [ "x$USE_AQUAP" == "xY"  ] ; then
  grid_ext="aqua_planet"
elif [ "x$USE_BASIN" == "xY"  ] ; then
# grid_ext="bas10-80N"
  grid_ext="bas0-60N"
else
  echo " No ocean topography file chosen - exit now"
  exit 1
fi
ocean_grids="iconR${R}B0${B}-ocean_${grid_ext}.nc"
#-----------------------------------------------------------------------------
# 
#  USE_POOLD="Y"      # "Y": ocean gridfile is read from $POOLDIR/$OCEGRID
if [ "x$USE_POOLD" == "xY" ] ; then
   POOLDIR="/pool/data/ICON/grids"
   if [ "x$USE_FLATB" == "xY" ] ; then
   # OCEGRID="ocegridR${R}B0${B}.cde2.flat.nc"
   # OCEGRID="ocegridR${R}B0${B}.cde3.1.flat.nc"
     OCEGRID="ocegridR${R}B0${B}.cde3.3.flat.nc"
   fi
   if [ "x$USE_BATHY" == "xY" ] ; then
   # OCEGRID="ocegridR${R}B0${B}.cde2.planet.nc"
   # OCEGRID="ocegridR${R}B0${B}.cde3.1.planet.nc"
     OCEGRID="ocegridR${R}B0${B}.cde3.3.planet.nc"
   fi
   # other ocean grid files can be added here
fi
#
#-----------------------------------------------------------------------------
#
# write ICON namelist parameters
# ------------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#
cat > ${ocean_namelist} << EOF
!
&parallel_nml
 nproma         = ${nproma}
 p_test_run     = .false.
 l_test_openmp  = .false.
 l_log_checks   = .false.
/
&grid_nml
 cell_type = 3            ! triangular cells
 dynamics_grid_filename = "${ocean_grids}",
/
&run_nml
 nsteps      = ${nsteps}    ! number of steps length of run
 dtime       = ${dtime}     ! [s] timestep in seconds
 msg_level   = 10           ! detailed report during integration
/
&dynamics_nml
 iequations  = ${ocean_model_equations}       ! -1: hydrost. ocean model
/
&extpar_nml
 itopo       = 0                 ! read external ocean data from gridfile
/
&octst_nml
  i_dbg_oce=1                    ! initialize MIN/MAX  debug output via mo_index_oce
  i_dbg_inx=0                    ! initialize one cell debug output via mo_index_oce
  str_proc_tst = 'all' 'abt', 'vel', 'dif', 'trc', 'bul', '   ', '   ', '   ', '   '
                                 ! define strings for processes to be printed out in debug mode
  rlat_in = 30.0 rlon_in = -70.0 ! lat/lon-location of one cell debug output
  h_val=1.0 t_val=1.0            ! initial values for elevation and temperature at one cell
/
&ocean_dynamics_nml
  n_zlev             =   10      ! number of vertical levels and (dzlev_m) thicknesses
  dzlev_m(1:20)      =  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,
                       1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0
! 10 unevenly spaced levels beginning with 50m depth
! dzlev_m(1:20)      =   50.0,  100.0,  200.0,  300.0,  450.0,  600.0,  800.0, 1000.0, 1000.0, 1000.0,
!                      1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0
! dzlev_m(1:20)      =   12.0,   38.0,  150.0,  300.0,  500.0,  500.0, 1000.0, 1000.0, 1000.0, 1000.0,
!                      1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0
  iswm_oce           =    0      ! switch for one layer shallow water model (iswm_oce=1) or 3-d
  idisc_scheme       =    1      ! 1=mimetic discretization, 2=rbf discretization
  l_inverse_flip_flop= .FALSE.   ! within mimetic discretization:
                                 ! TRUE : full scalar product (slow)
                                 ! FALSE: reduced scalarproduct variant (fast and default)
  l_rigid_lid        = .FALSE.   ! TRUE : use rigid lid as upper boundary condition 
                                 ! FALSE: use the free surface dynamics
  ab_beta            =    0.7    ! parameter for Adam-Bashforth time-stepping
  ab_gam             =    0.7    ! parameter for Adam-Bashforth time-stepping
  solver_tolerance   = 1.0E-6
  i_bc_veloc_lateral =    0      ! Boundary condition for normal velocity for lateral walls
  i_bc_veloc_top     =    1      ! Boundary condition for normal velocity for ocean top
  i_bc_veloc_bot     =    1      ! Boundary condition for normal velocity for ocean bottom
  basin_center_lat   =   30.0    ! lat-lon coordinate of basin center, used 
  basin_center_lon   =    0.0    ! in (non-global) basin configuration such as the Stommel-type tests
  basin_width_deg    =   60.0    ! basin extension in x-direction, units are degrees
  basin_height_deg   =   60.0    ! basin extension in y-direction, units are degrees
  coriolis_type      =    1      ! 0=zero Coriolis, the non-rotating case
                                 ! 1=full varying Coriolis
                                 ! 2=beta-plane (linear) approximation to Coriolis
                                 ! 3=f-plane (constant) approximation to Coriolis
                                 ! IMPORTANT: SOME TESTCASES REQUIRE SPECIFIC SETTINGS: 
                                 !  for Stommel-type basin (2D- and 3D, testcase 27 and/or 30) select
                                 !  f- or beta-plane.
  expl_vertical_velocity_diff = 0  ! 0=explicit, 1 = implicit  
  expl_vertical_tracer_diff   = 1  ! 0=explicit, 1 = implicit
/
&ocean_physics_nml
  no_tracer          =    1      ! tracer-transport: 0=no transport, 1=temperature, 2=temp. and salinity
  EOS_TYPE           =    2      ! 1=linear EOS
                                 ! 2= (nonlinear) EOS from MPI-OM 
                                 ! 3= not recommended: (nonlinear) Jacket-McDoudgall density-formulation
  k_veloc_h          = 5.0E+4    ! [m2/s] horizontal viscosity coefficient for velocity
  k_veloc_v          = 1.0E-3    ! [m/s]  vertical viscosity coefficient for velocity
  k_pot_temp_h       = 5.0E+4    ! [m2/s] horizontal viscosity coefficient for temperature
  k_pot_temp_v       = 1.0E-4    ! [m/s]  vertical viscosity coefficient for temperature
  k_sal_h            = 5.0E+4    ! [m2/s] horizontal viscosity coefficient for salinity
  k_sal_v            = 1.0E-4    ! [m/s]  vertical viscosity coefficient for salinity
  HORZ_VELOC_DIFF_TYPE =  1      ! 0=no horizontal diffusion
                                 ! 1= constant Laplacian viscosity coefficient given in namelist (k_veloc_h)
                                 ! 2= constant Laplacian viscosity coefficient determined by requirement to
                                 !    have at least one gridpoint in boundary layer. The namelist value is overwritten.
                                 ! 3= spatially variable Laplacian viscosity coefficient determined by requirement to
                                 !    have at least one gridpoint in boundary layer. The namelist value is overwritten.
  MAX_VERT_DIFF_VELOC=    0.1    ! max diffusion coeff, used in impl.vert.velocity diffusion, if stabil. crit.is met
  MAX_VERT_DIFF_TRAC =    0.1    ! max diffusion coeff, used in impl.vert.tracer diffusion, if stability crit.is met
  CWA                = 0.5E-3    ! Tuning parameters for vertical mixing of tracer and velocity
  CWT                = 0.5E-3    ! Set to standard values
  bottom_drag_coeff  =    0.0025 ! Chezy coefficient for bottom friction
  wstress_coeff      =    0.3    ! wind stress coefficient for top boundary forcing
/
&ocean_forcing_and_init_nml
  iforc_oce          = ${iforc}  ! ocean forcing:
                                 ! NO_FORCING                 = 10
                                 ! ANALYT_FORC                = 11  - dependent on testcase
                                 ! FORCING_FROM_FILE_FLUX     = 12  - OMIP type forcing
                                 ! FORCING_FROM_FILE_FIELD    = 13  - not yet
                                 ! FORCING_FROM_COUPLED_FLUX  = 14  - not yet
                                 ! FORCING_FROM_COUPLED_FIELD = 15  - not yet
  iforc_omip         = ${iforc_omip}  ! type of ocean forcing, see above
  iforc_len          = ${iforc_len}   ! length of ocean forcing data set, see above
  iforc_stat_oce     =    3      ! stationary (wind) forcing for iforc_oce=11 only:
                                 ! 1=locally varying u,v (testcase 27, 29)
                                 ! 2=varying u with latitude for basin using basin_width_deg
                                 ! 3=varying u with latitude globally
  init_oce_prog      = ${init_oce}    ! read ocean initialization file, see above
  itestcase_oce      =   40      ! 25=shallow-water-Laeuter-Test; 26=shallow-water-Williamson test5;
                                 ! 30=3D-multilayer Stommel; 31=3D-gravity wave
                                 ! 32=Multilayer Munk-Gyre test (following Sergey Danilov)
                                 ! 33=Collapsing density front, requires realistic lsm and topography
                                 ! 34=Adjusting density front in an ocean basin
                                 ! 40=global temperature initialization for wind and temperature forcing tests
                                 ! 43=Collapsing density front at first level only with smaller amplitude (global)
  idiag_oce          =    0      ! 0: no diagnostics; 1: write diagnostics to stderr
  temperature_relaxation= 1      ! 1=tracer_forc=tracer_init for some testcases only
                                 ! 2=read 2m-temperature data for relaxation from bulk (3: copy SST on omip-T)
  relaxation_param   =    1.0    ! relaxation of tracer surface fluxes (same value for all tracers in months)
                                 ! this value is divided by number of seconds per month (=30*24*3600)
/
&io_nml
 out_expname   = '${EXPNAME}'
 dt_data       = ${dt_data}
 dt_file       = ${dt_file}
 dt_checkpoint = ${dt_checkpoint}
 lkeep_in_sync = .TRUE.          ! sync after each timestep
/
EOF
#-----------------------------------------------------------------------------


#-----------------------------------------------------------------------------
# Different choices for parameters and levels:

# k_veloc_h       =   0.04
# k_veloc_v       =   0.01

# 4 level stommel test case
# n_zlev          =   4
# dzlev_m(1:20)   =  500.0,  500.0,  500.0,  500.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0,
#                   1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0

# 2 levels for shallow water - with 12m depth as in MPIOM and create_ocean_grid
# n_zlev          =   2
# dzlev_m(1:20)   =   12.0, 4976.0,  150.0,  300.0,  500.0,  500.0, 1000.0, 1000.0, 1000.0, 1000.0,
#                   1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0

# 5 levels for simple test case
# n_zlev          =   5
# dzlev_m(1:20)   =   50.0,  100.0,  350.0, 1500.0, 2000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0,
#                   1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0

# 5 levels for test case beginning with 12m depth as in MPIOM and create_ocean_grid
# n_zlev          =   5
# dzlev_m(1:20)   =   12.0,   38.0,  450.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0,
#                   1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0

# 10 levels for test case beginning with 12m depth as in MPIOM and create_ocean_grid
#  n_zlev         =   10
# dzlev_m(1:20)   =   12.0,   38.0,  150.0,  300.0,  500.0,  500.0, 1000.0, 1000.0, 1000.0, 1000.0,
#                   1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0

# 20 levels, low top resolution guess:
#  n_zlev         =   20
# dzlev_m(1:20)   =   20.0,   30.0,   50.0,   50.0,   50.0,  100.0,  150.0,  200.0,  250.0,  300.0,
#                    400.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0
                  
# 20 levels MPIOM GR60 Helmuth
# n_zlev          =   20
# dzlev_m(1:20)   =   20.0,   20.0,   20.0,   30.0,   40.0,   50.0,   70.0,   90.0,  120.0,  150.0,
#                    180.0,  210.0,  250.0,  300.0,  400.0,  500.0,  600.0,  700.0,  900.0, 1400.0

# MPIOM 40 levels:
# n_zlev          =   40
# dzlev_m(1:40)   =   12.0,   10.0,   10.0,   10.0,   10.0,   10.0,   13.0,   15.0,   20.0,   25.0,
#                     30.0,   35.0,   40.0,   45.0,   50.0,   55.0,   60.0,   70.0,   80.0,   90.0,
#                    100.0,  110.0,  120.0,  130.0,  140.0,  150.0,  170.0,  180.0,  190.0,  200.0,
#                    220.0,  250.0,  270.0,  300.0,  350.0,  400.0,  450.0,  500.0,  500.0,  600.0

# MPIOM 80 levels:
# n_zlev          =   80
# dzlev_m(1:80)   =   12.0,   10.0,   10.0,   10.0,   10.0,   10.0,   10.0,   11.0,   11.0,   12.0,
#                     13.,13.,14.,14.,15.,16.,16.,17.,18.,19.,
#                     20.,21.,21.,22.,24.,25.,26.,27.,28.,29.,
#                     31.,32.,34.,35.,37.,39.,40.,42.,44.,46.,
#                     48.,50.,53.,55.,58.,60.,63.,66.,69.,72.,
#                     76.,79.,83.,87.,91.,95.,99.,104.,108.,113.,
#                     119.,124.,130.,136.,142.,149.,155.,163.,170.,178.,
#                     186.,195.,204.,213.,223.,233.,244.,255.,267.,279.,

