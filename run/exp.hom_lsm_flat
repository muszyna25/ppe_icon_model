#!/bin/ksh

#=============================================================================
#
# This section of the run script containes the specifications of the ocean experiment.
# The specifications are passed by namelist to the program.
# For a complete list see Namelist_overview.pdf
#
# Default EXPNAME is the suffix of this script after "exp."
#
# Stephan Lorenz, MPI-M, 2011-01-26
#
#-----------------------------------------------------------------------------
#
# Preliminary test phase: run on specific systems and compiler only
#  - 2011-01-31: mpipc/tornado/squall - all compilers
#  - 2011-03-03: blizzard serial run included
#  - 2011-12-13: SX9 and HPC_serial - all machines in serial mode included
#-----------------------------------------------------------------------------

#  exit all buildbot slaves that run in parallel mode:
if [ -z "$BB_SYSTEM" ]
then
  echo " ===== (no buildbot) ======="
  echo " Run ocean testcase $EXPNAME"
  echo " ==========================="
else
  echo " ================================================="
  echo " Run ocean testcase $EXPNAME on BB_SLAVE=$BB_SLAVE"
  echo " ================================================="
  if [ $mpi_total_procs -gt 1 ] ; then
     echo "The ocean test runs will not run in parallel MPI mode. Exiting."
     check_error 0
     exit
  fi
  if [ $OMP_NUM_THREADS -gt 1 ] ; then
     echo "The ocean test runs will not run in OpenMP mode. Exiting."
     check_error 0
     exit
  fi
fi
#
#-----------------------------------------------------------------------------


#-----------------------------------------------------------------------------
#
# Basic specifications of the simulation
# --------------------------------------
#
# These variables are set in the header section of the completed run script:
#
# EXPNAME = experiment name
# NPROMA  = array blocking length / inner loop length
#-----------------------------------------------------------------------------
#
#-----------------------------------------------------------------------------
# The following values must be set here as shell variables so that they can be used
# also in the executing section of the completed run script
#
#-----------------------------------------------------------------------------
# the namelist filename
ocean_namelist=NAMELIST_${EXPNAME}
#
#-----------------------------------------------------------------------------
# global resolution
R=2   # nroot
B=4   # number of bisections applied
#
#-----------------------------------------------------------------------------
# ocean initialization (init_oce=1) needs an additional file for prognostic variables
init_oce=0     # 1: use ocean initialization file; 0: init with constants or analytically
# prognostic ocean initialization file must be provided and named as
# $HGRIDDIR/ts_phc_season-iconR${R}B0{B}-L11.nc
#
#-----------------------------------------------------------------------------
# relaxation initialization (init_relax=1) needs an additional file for temp/sal
init_relax=0   # 1: use relaxation initialization file
# relaxation initialization file must be provided and named as
# $HGRIDDIR/ts_surf_annual-iconR${R}B0{B}-50m.nc
#
#-----------------------------------------------------------------------------
# ocean forcing = 12 needs an additional flux file dependent on iforc_omip
# NO_FORCING                 = 10
# ANALYT_FORC                = 11  - dependent on testcase
# FORCING_FROM_FILE_FLUX     = 12  - OMIP or NCEP type forcing
# FORCING_FROM_FILE_FIELD    = 13  - not yet
# FORCING_FROM_COUPLED_FLUX  = 14  - coupled experiments
# FORCING_FROM_COUPLED_FIELD = 15  - not yet
iforc=11
#
# type of OMIP forcing to read (iforc=12 only)
#  1 = u/v-stress [and temperature relaxation], depending on "temperature_relaxation" below
#  2 = use full OMIP datasets; 
#  3 = u/v-stress [and temperature relaxation], heat and mass flux
#  4 = u/v-stress [and temperature relaxation], 4 parts of heat flux, precip/evap flux
#  5 = use full NCEP datasets; read monthly mean data of consecutive years, set iforc_len=12 !
iforc_omip=1
iforc_len=1    # length of OMIP dataset: 1 = annual; 12 = monthly data; else = daily data
# flux files must be provided at grid directory and named monmean/annual accordingly
# $HGRIDDIR/omip4icon-R${R}B0{B}-monmean.nc
# $HGRIDDIR/omip4icon-R${R}B0{B}-annual.nc
#
#-----------------------------------------------------------------------------
# global timing
start_date="2000-01-01T00:00:00Z"
end_date="2000-01-02T00:00:00Z"
#
#-----------------------------------------------------------------------------
# model timing
nhours_data=6        # ocean model output interval hours [hours]
ndays_file=360       # new output file generation interval [days]
ndays_checkp=30      # write restart file interval [days]
ndays_restart=1      # stop model for restart [days]
#
#-----------------------------------------------------------------------------
# calculate model timesteps using $ndays
# diagnostic output (not in ocean model)
#dt_diag=`expr 4 \* 3600 `    #  output each 4 hours
dt_data=`expr ${nhours_data} \* 3600`
dt_file=`expr ${ndays_file} \* 86400`
dt_checkpoint=`expr ${ndays_checkp} \* 86400`
dt_restart=`expr ${ndays_restart} \* 86400`
dt_checkpoint=21600  # for buildbot test only
#
#-----------------------------------------------------------------------------
# model parameters
ocean_model_equations=-1 # equation system
#                      0=shallow water model
#                     -1=hydrost. ocean
#
#-----------------------------------------------------------------------------
# the grid files
# USE_BASIN="Y"      # "Y": ocean horizontal gridfile base is "bas0-60N"
# USE_AQUAP="Y"      # "Y": ocean horizontal gridfile base is "aqua_planet"
# USE_FLATB="Y"      # "Y": ocean horizontal gridfile base is "etopo40_flat"
  USE_BATHY="Y"      # "Y": ocean horizontal gridfile base is "etopo40_planet"
# USE_POOLD="Y"      # "Y": overwrite ocean gridfile from pool
#-----------------------------------------------------------------------------
if [ "x$USE_FLATB" = "xY"  ] ; then
  grid_ext="etopo40_flat"
  USE_POOLD="Y"
elif [ "x$USE_BATHY" = "xY"  ] ; then
  grid_ext="etopo40_planet"
  USE_POOLD="Y"
elif [ "x$USE_AQUAP" = "xY"  ] ; then
  grid_ext="aqua_planet"
elif [ "x$USE_BASIN" = "xY"  ] ; then
# grid_ext="bas10-80N"
  grid_ext="bas0-60N"
else
  echo " No ocean topography file chosen - exit now"
  exit 1
fi
ocean_grids="iconR${R}B0${B}-ocean_${grid_ext}.nc"
#-----------------------------------------------------------------------------
# 
#  USE_POOLD="Y"      # "Y": ocean gridfile is read from $POOLDIR/$OCEGRID
#
#  DWD systems: $POOLDIR does not exist
if [ "x$BB_SYSTEM" = "xhpc" -o "x$BB_SYSTEM" = "xnec" ] ; then
   USE_POOLD="N"
fi
USE_POOLD="N"
#
if [ "x$USE_POOLD" = "xY" ] ; then
   POOLDIR="/pool/data/ICON/grids"
   if [ "x$USE_FLATB" = "xY" ] ; then
   # OCEGRID="ocegridR${R}B0${B}.cde2.flat.nc"
   # OCEGRID="ocegridR${R}B0${B}.cde3.1.flat.nc"
     OCEGRID="ocegridR${R}B0${B}.cde3.3.flat.nc"
   fi
   if [ "x$USE_BATHY" = "xY" ] ; then
   # OCEGRID="ocegridR${R}B0${B}.cde2.planet.nc"
   # OCEGRID="ocegridR${R}B0${B}.cde3.1.planet.nc"
     OCEGRID="ocegridR${R}B0${B}.cde3.3.planet.nc"
   fi
   # other ocean grid files can be added here
fi
#
#-----------------------------------------------------------------------------
#
# write ICON namelist parameters
# ------------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#
cat > ${ocean_namelist} << EOF
!
&parallel_nml
 nproma         = ${nproma}
 p_test_run     = .false.
 l_test_openmp  = .false.
 l_log_checks   = .false.
/
&grid_nml
 cell_type = 3            ! triangular cells
 dynamics_grid_filename = "${ocean_grids}",
/
&dynamics_nml
 iequations  = ${ocean_model_equations}       ! -1: hydrost. ocean model
/
&run_nml
 dtime       = 1800         ! model timestep in seconds
/
&ocean_dynamics_nml
! 10 levels of 500m depth
  n_zlev             =   10      ! number of vertical levels and (dzlev_m) thicknesses
  dzlev_m(1:20)      =  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,
                       1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0
/
&ocean_forcing_and_init_nml
  iforc_oce          = ${iforc}       ! ocean forcing:
  iforc_omip         = ${iforc_omip}  ! type of ocean forcing, see above
  iforc_len          = ${iforc_len}   ! length of ocean forcing data set, see above
  init_oce_prog      = ${init_oce}    ! read ocean initialization file, see above
  init_oce_relax     = ${init_relax}  ! read ocean surface relaxation file, see above
  itestcase_oce      =   40      ! 25=shallow-water-Laeuter-Test; 26=shallow-water-Williamson test5;
                                 ! 30=3D-multilayer Stommel; 31=3D-gravity wave
                                 ! 32=Multilayer Munk-Gyre test (following Sergey Danilov)
                                 ! 33=Collapsing density front, requires realistic lsm and topography
                                 ! 34=Adjusting density front in an ocean basin
                                 ! 40=global temperature initialization for wind and temperature forcing tests
                                 ! 43=Collapsing density front at first level only with smaller amplitude (global)
                                 ! 45=horizontally homogen temperature
                                 ! 50=zonally homogen temperature for APE SST (Williamson)
  idiag_oce          =    0      ! 0: no diagnostics; 1: write diagnostics to stderr
  temperature_relaxation= 1      !  0: no relaxation used
                                 !  1: relaxation switched on for reading (init_oce_relax=1) or some testcases only
                                 !  2: use SST read from OMIP/bulk forcing (iforc=12);
                                 !     use atmospheric temperature in case of coupling (iforc=14)
                                 !  3: use initial prognostic T as 2-dim relax, copy SST on tracer_relax(1)
                                 ! -1: use net surface heat flux from atmosphere as boundary condition
  relaxation_param   =    1.0    ! strength of 2-dim relaxation for temperature (months)
                                 ! this value is divided by number of seconds per month (=30*24*3600)
  irelax_2d_S        =    0      ! 2-dim relaxation of salinity - see "temperature_relaxation" for parameter values
  relax_2d_mon_S     =    1.0    ! strength of 2-dim relaxation for salinity (months)
/
&io_nml
  out_expname   = '${EXPNAME}'
  dt_data       = ${dt_data}
  dt_file       = ${dt_file}
  dt_checkpoint = ${dt_checkpoint}
  lkeep_in_sync = .TRUE.          ! sync after each timestep
/
EOF

