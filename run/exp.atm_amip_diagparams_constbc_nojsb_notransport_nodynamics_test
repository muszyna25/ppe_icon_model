#--------------------------------------------------------------------------------------------------
#
# AMIP experiment
#
author_list="Marco Giorgetta, MPIM"
# adapted to the structure of the coupled model scripts, given by R. Redler, and set to new
# grid and input data. M. Esch, MPIM, Oct 2021
#
#--------------------------------------------------------------------------------------------------
#
# This file describes an AMIP experiment based on the non-hydrostatic atmosphere and the
# ECHAM physics, in which neither transport nor dynamics are computed.
# The parametrization are computed, but not used for the time integration.
# The experiment is intialized from IFS analysis.
# Transient boundary conditions are used for:
# - SST and sea ice
# - spectral solar irradiation
# - well mixed greenhouse gases CO2, CH4, N2O, CFCs
# - O3 concentration
# - tropospheric aerosol optical properties
# - stratospheric volcanic aerosol optical properties
#
# _bb_table_Description_  AMIP experiment, diagnostic parameterizations, no transport, no dynamics
# _bb_table_Model_        non-hydrostatic atmosphere with ECHAM physics
#
#--------------------------------------------------------------------------------------------------

# (0) Basic model configuration
# -----------------------------

atmos_gridID="0043"
atmos_refinement="R02B04"

nproma_atm=${nproma}

#
#--------------------------------------------------------------------------------------------------
#
# (1) Define the model time stepping
# ----------------------------------

radTimeStep="PT8M"              # radiation time step:    16 time steps per day
atmTimeStep="PT4M"              # atmosphere time step:   96 time steps per day
                                 #                          6 time steps per radTimeStep
#--------------------------------------------------------------------------------------------------

#  (2) Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# icon_data_poolFolder          = base directory, where grids/, input/ and setup/ exist
# nproma                        = blocking length for array dimensioning and inner loop lengths
#                                 -> deprecated. nproma_atm is used here.

icon_data_poolFolder="${icon_data_rootFolder:-/pool/data/ICON}/grids/public/mpim"

#--------------------------------------------------------------------------------------------------

# (3) Set variables needed by the scripting mechanism
# ---------------------------------------------------

# horizontal grid(s)
# ------------------
atm_grid_name=icon_grid_${atmos_gridID}_${atmos_refinement}_G

atmo_grid_folder=${icon_data_poolFolder}/${atmos_gridID}
atmo_data_InputFolder=${icon_data_poolFolder}/${atmos_gridID}
atmo_dyn_grid=${atm_grid_name}.nc

# start and end date+time
# -----------------------
start_date=${start_date:="1979-01-01T00:00:00Z"}
    end_date=${end_date:="1979-01-01T00:16:00Z"}

# restart intervals
# -----------------
checkpoint_interval="PT8M"
restart_interval="PT16M"

# output intervals
# ----------------
atm_output_interval="PT4M"
atm_file_interval="PT4M"

# namelist files
# --------------
atm_namelist=NAMELIST_${EXPNAME}_atm

atmo_namelist=${atm_namelist}
#--------------------------------------------------------------------------------------------------


#--------------------------------------------------------------------------------------------------

# (6) Output control
# ------------------

# asynchronous diagnostic output processes
# ----------------------------------------

# output file selection
# ---------------------

# Note that "mpi_atm_io_procs" must match the number of output files
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>

output_atm_vgrid=yes               # produces 1 atm file 
output_atm_3d=yes                  # produces 1 atm file 
output_atm_2d=yes                  # produces 1 atm file 
output_phy_3d=yes                  # produces 1 atm file
                                   # Note: "yes" increases the output volume significantly!
output_trc_3d=yes

#-----------------------------------------------------------------------------
#
# (4) Define the model configuration
#-----------------------------------

#
# atmosphere namelist
# -------------------

cat > ${atm_namelist} << EOF
!
&parallel_nml
 nproma            = ${nproma_atm}
/
&grid_nml
 dynamics_grid_filename = "${atmo_dyn_grid}"
/
&run_nml
 num_lev          = 47          ! number of full levels
 modelTimeStep    = "${atmTimeStep}"
 ltestcase        = .FALSE.     ! run testcase
 ldynamics        = .FALSE.     ! dynamics
 ltransport       = .FALSE.     ! transport
 iforcing         = 2           ! 0: none, 1: HS, 2: ECHAM, 3: NWP
 output           = 'nml'
 msg_level        = 15          ! level of details report during integration 
 restart_filename = "${EXPNAME}_restart_atm_<rsttime>.nc"
 activate_sync_timers = .TRUE.
/
&extpar_nml
 itopo            = 1           ! 1: read topography from the grid file
 itype_lwemiss    = 0
/
&initicon_nml
 init_mode        = 2           ! 2: initialize from IFS analysis
 ifs2icon_filename= "ifs2icon.nc"
 pinit_seed       = -1          ! seed for perturbation of initial model state. no perturbation by default
 pinit_amplitude  = 0.          ! amplitude of perturbation
/
&sleve_nml
 min_lay_thckn    = 40.         ! [m]
 top_height       = 83000.      ! [m]
 stretch_fac      = 0.9
 decay_scale_1    = 4000.       ! [m]
 decay_scale_2    = 2500.       ! [m]
 decay_exp        = 1.2
 flat_height      = 16000.      ! [m]
/
&transport_nml
 tracer_names     = 'hus','clw','cli'
/
&echam_phy_nml
!
! domain 1
! --------
!
! atmospheric phyiscs (""=never)
 echam_phy_config(1)%dt_rad = "${radTimeStep}", echam_phy_config(1)%fc_rht = 0
 echam_phy_config(1)%dt_vdf = "${atmTimeStep}", echam_phy_config(1)%fc_vdf = 0
 echam_phy_config(1)%dt_cnv = "${atmTimeStep}", echam_phy_config(1)%fc_cnv = 0
 echam_phy_config(1)%dt_cld = "${atmTimeStep}", echam_phy_config(1)%fc_cld = 0
 echam_phy_config(1)%dt_gwd = "${atmTimeStep}", echam_phy_config(1)%fc_gwd = 0
 echam_phy_config(1)%dt_sso = "${atmTimeStep}", echam_phy_config(1)%fc_sso = 0
!
! atmospheric chemistry (""=never)
 echam_phy_config(1)%dt_mox = "${atmTimeStep}", echam_phy_config(1)%fc_mox = 0
 echam_phy_config(1)%dt_car = ""
 echam_phy_config(1)%dt_art = ""
!
! surface (.TRUE. or .FALSE.)
 echam_phy_config(1)%ljsb   = .FALSE.
 echam_phy_config(1)%lamip  = .FALSE.
 echam_phy_config(1)%lice   = .TRUE.
 echam_phy_config(1)%lmlo   = .FALSE.
 echam_phy_config(1)%llake  = .FALSE.
!
/
&echam_rad_nml
!
! domain 1
! --------
!
 echam_rad_config(1)%isolrad    =  5
 echam_rad_config(1)%l_orbvsop87= .FALSE.
 echam_rad_config(1)%cecc       = 0.0
 echam_rad_config(1)%cobld      = 0.0
 echam_rad_config(1)%ldiur      = .FALSE.
 echam_rad_config(1)%l_sph_symm_irr = .TRUE.
 echam_rad_config(1)%irad_h2o   =  1
 echam_rad_config(1)%irad_co2   =  2
 echam_rad_config(1)%irad_ch4   =  2
 echam_rad_config(1)%irad_n2o   =  2
 echam_rad_config(1)%irad_o3    =  4
 echam_rad_config(1)%irad_o2    =  2
 echam_rad_config(1)%irad_cfc11 =  2
 echam_rad_config(1)%irad_cfc12 =  2
 echam_rad_config(1)%irad_aero  =  0
/
&echam_gwd_nml
/
&echam_sso_nml
/
&echam_vdf_nml
/
&echam_cnv_nml
/
&echam_cld_nml
/
&echam_cop_nml
/
&echam_cov_nml
/
&sea_ice_nml
/
EOF

#--------------------------------------------------------------------------------------------------

# Define the atmosphere input
# ---------------------------

# model files
#
add_link_file ${basedir}/data/lsdata.nc                                 ./
add_link_file ${basedir}/data/ECHAM6_CldOptProps.nc                     ./

# namelist files
# --------------
add_required_file ${basedir}/run/${atm_namelist}                        ./

# dictionary file for output variable names
#
dict_file="dict.${EXPNAME}"
cat dict.iconam.mpim  > ${dict_file}
add_required_file ${basedir}/run/${dict_file}                           ./

# initial conditions
#
# - atmosphere: ECMWF analysis, 1979-01-01T00:00:00Z
datadir=${atmo_data_InputFolder}/initial_condition/r0001
add_link_file ${datadir}/ifs2icon_1979010100_${atmos_refinement}_G.nc   ./ifs2icon.nc
#
# - land: source?, date+time?
datadir=${atmo_data_InputFolder}/land/r0003
add_link_file ${datadir}/ic_land_soil_1979.nc                           ./ic_land_soil.nc

# boundary conditions
#
# - well mixed greenhouse gases (ssp245: years 0-2500)
#
datadir=${icon_data_poolFolder}/independent/greenhouse_gases
add_link_file $datadir/greenhouse_historical_plus.nc                    ./bc_greenhouse_gases.nc
#
# range of years for yearly files
# assume start_date and end_date have the format yyyy-...
#
start_year=$(( ${start_date%%-*} - 1 ))
end_year=$(( ${end_date%%-*} + 1 ))
#
# - ozone
# -- for irad_o3=4
#
datadir=${atmo_data_InputFolder}/ozone/r0001
add_link_file ${datadir}/bc_ozone_picontrol.nc                          ./bc_ozone.nc
#
# - tropospheric anthropogenic aerosols, simple plumes
#
datadir=${icon_data_poolFolder}/independent/MACv2_simple_plumes_merged
add_link_file ${basedir}/data/MACv2.0-SP_v1.nc                          ./MACv2.0-SP_v1.nc
#
#   Kinne background aerosols are needed for the year 1850 (irad_aero=18)
#
#   Here we use revised data based on work by Sebastian Rast
#
datadir=${atmo_data_InputFolder}/aerosol_kinne/r0001
#
add_link_file ${datadir}/bc_aeropt_kinne_lw_b16_coa.nc                  ./
add_link_file ${datadir}/bc_aeropt_kinne_sw_b14_coa.nc                  ./
add_link_file ${datadir}/bc_aeropt_kinne_sw_b14_fin_1850.nc             ./bc_aeropt_kinne_sw_b14_fin.nc
#
# - sst and sic
#
datadir=${atmo_data_InputFolder}/sst_and_seaice/r0001
#
add_link_file ${datadir}/bc_sic_1979_2016.nc                               ./bc_sic.nc
add_link_file ${datadir}/bc_sst_1979_2016.nc                               ./bc_sst.nc
#
# - ssi and tsi
#
datadir=${icon_data_poolFolder}/independent/solar_radiation/3.2
#
add_link_file ${datadir}/swflux_14band_cmip6_1850-2299-v3.2.nc             ./bc_solar_irradiance_sw_b14.nc
#
# - land parameters
#
datadir=${atmo_data_InputFolder}/land/r0003
#
add_link_file ${datadir}/bc_land_frac_1979.nc                              ./bc_land_frac.nc
add_link_file ${datadir}/bc_land_phys_1979.nc                              ./bc_land_phys.nc
add_link_file ${datadir}/bc_land_sso_1979.nc                               ./bc_land_sso.nc
#
# - the atmosphere grid itself (the grid copy section below from $HGRIDDIR is ignored)
#
add_required_file ${atmo_grid_folder}/${atmo_dyn_grid}                     ./
#
#--------------------------------------------------------------------------------------------------

# (5) Define the output
# ---------------------

# Parameters for all output files
# -------------------------------
cat >> ${atm_namelist} << EOF
&io_nml
 output_nml_dict  = "${dict_file}"
 netcdf_dict      = "${dict_file}"
 lnetcdf_flt64_output = .TRUE.
 itype_pres_msl   = 4
 restart_file_type= 5
! restart_write_mode = "joint procs multifile" !not necessary/useful in default r2b4 setup
/
EOF

# Define output files
# -------------------
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>
#
# 3-dimensional files include 'ps' and 'pfull' to allow the vertical
# interpolation to pressure levels by cdo ap2pl.
#
if [[ "$output_atm_vgrid" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_vgrid"
 filename_format  = "<output_filename>_<levtype_l>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"           ! output_start = output_end
 output_end       = "${start_date}"           ! --> write once only irrespective of
 output_interval  = "${atm_output_interval}"  !     the output interval and
 file_interval    = "${atm_file_interval}"    !     the file interval
 ml_varlist       = 'zghalf'  , 'zg'      , 'dzghalf'
/
EOF
fi
#
# Standard AMIP output...
#
#
if [[ "$output_atm_3d" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'zg'      ,
                    'ps'      , 'pfull'   ,
                    'rho'     , 'ta'      ,
                    'ua'      , 'va'      , 'wap'     ,
                    'hus'     , 'clw'     , 'cli'     ,
                    'cl'      ,
/
EOF
fi


if [[ "$output_atm_2d" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'orog'    ,
                    'ps'      , 'psl'     ,
                    'cosmu0'  ,
                    'rsdt'    ,
                    'rsut'    , 'rsutcs'  , 'rlut'    , 'rlutcs'  ,
                    'rsds'    , 'rsdscs'  , 'rlds'    , 'rldscs'  ,
                    'rsus'    , 'rsuscs'  , 'rlus'    ,
                    'ts'      ,
                    'sic'     , 'sit'     ,
                    'albedo'  ,
                    'clt'     ,
                    'prlr'    , 'prls'    , 'prcr'    , 'prcs'    ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'tauu'    , 'tauv'    ,
                    'tauu_sso', 'tauv_sso', 'diss_sso',
                    'sfcwind' , 'uas'     , 'vas'     ,
                    'tas'     , 'dew2'    ,
                    'ptp'
/
EOF
fi


if [[ "$output_phy_3d" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_phy_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'           , 'pfull'        , 'zg'           ,
                    'tend_ta_phy'  ,
                    'tend_ta_rlw'  , 'tend_ta_rsw'  ,
                    'tend_ta_vdf'  , 'tend_ta_gwd'  , 'tend_ta_sso'  ,
                    'tend_ta_cnv'  , 'tend_ta_cld'  ,
                    'tend_ua_phy'  ,
                    'tend_ua_vdf'  , 'tend_ua_gwd'  , 'tend_ua_sso'  ,
                    'tend_ua_cnv'  ,
                    'tend_va_phy'  ,
                    'tend_va_vdf'  , 'tend_va_gwd'  , 'tend_va_sso'  ,
                    'tend_va_cnv'  ,
                    'tend_qhus'    , 'tend_qhus_dyn', 'tend_qhus_phy',
                    'tend_qhus_cld', 'tend_qhus_cnv', 'tend_qhus_vdf',
                    !'tend_qhus_mox'
/
EOF
fi

#
if [[ "$output_trc_3d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_trc_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'        , 'pfull'     , 'zg'        ,
                    'mairvi_phy',
                    'mdryvi_phy',
                    'mh2ovi_phy',
                    'qhus_phy'  , 'mhusvi_phy', 'tend_mhusvi_phy',
                    'qclw_phy'  , 'mclwvi_phy', 'tend_mclwvi_phy',
                    'qcli_phy'  , 'mclivi_phy', 'tend_mclivi_phy',
/
EOF
fi

#--------------------------------------------------------------------------------------------------
