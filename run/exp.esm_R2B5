#--------------------------------------------------------------------------------------------------
#
# MPIESM2 R2B5 coupled experiment
#
author_list="Monika Esch & Rene Redler"
#
#--------------------------------------------------------------------------------------------------
#
# This file describes a coupled experiment setup based on the non-hydrostatic atmosphere
# with ECHAM physics and the hydrostatic ocean. The atmosphere is based on the non-hydrostatic
# dynamics and the ECHAM physics, and is intialized from analysis files and using transient
# boundary conditions (1850) for:
# - spectral solar irradiation
# - well mixed greenhouse gases CO2, CH4, N2O, CFCs
# - O3 concentration
#
# The ocean was initialised from Levitus climatology for 50 years.
#
# The atmosphere uses transient boundary conditions for:
#
# - spectral solar irradiation
# - well mixed greenhouse gases CO2, CH4, N2O, CFCs
# - O3 concentration
# - stratospheric volcanic aerosol optical properties
# - tropospheric aerosol optical properties
#
# - SST and sea ice are transferred via YAC from the ocean.
#
# The coupling:
#
# atmosphere -> ocean:
# . surface_downward_eastward_stress
# . surface_downward_northward_stress
# . surface_fresh_water_flux
# . total_heat_flux
# . atmosphere_sea_ice_bundle
# . river_runoff
#
# ocean -> atmosphere:
# . sea_surface_temperature
# . eastward_sea_water_velocity
# . northward_sea_water_velocity
# . ocean_sea_ice_bundle
# . 10m_wind_speed
#
# currently not activated for coupling:
# . co2_mixing_ratio
# . co2_flux
#
# IMPORTANT NOTE:
# ---------------
#
# This template assumes that both atmosphere and ocean are started from initial conditions!
# Once an ocean restart is available, initial_salinity_type  and initial_temperature_type
# can both be set to zero.
#
#--------------------------------------------------------------------------------------------------

# (0) Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# nproma                        = blocking length for array dimensioning and inner loop lengths

#--------------------------------------------------------------------------------------------------

# (0) Basic model configuration
# -----------------------------

initialiseOcean="fromRestart"
# initialiseOcean="fromClimatology"
# initialiseOcean="FALSE"

atmos_gridID="0019"
atmos_refinement="R02B05"

ocean_gridID="0020"
ocean_refinement="R02B05"

nproma_atm=48
nproma_oce=48

mpi_oce_nodes=1                    # nodes for the ocean model
((mpi_oce_procs=mpi_oce_nodes * mpi_procs_pernode))

#--------------------------------------------------------------------------------------------------

# (1) Define the model time stepping
# ----------------------------------

radTimeStep="PT1H"               # radiation time step:    12 time steps per day
atmTimeStep="PT6M"               # atmosphere time step:  240 time steps per day
                                 #                         10 time steps per radTimeStep
                                 #                          5 time steps per couplingTimeStep
oceTimeStep="PT30M"              # ocean time step:        24 time steps per day
                                 #                          1 time step  per couplingTimeStep
couplingTimeStep="PT30M"         # coupling time step:      2 time steps per radTimeStep 

#--------------------------------------------------------------------------------------------------

# (2) unset some setting of create_target_header for mistral

unset OMPI_MCA_coll_fca_enable
unset OMPI_MCA_coll_fca_priority

#--------------------------------------------------------------------------------------------------

# (3) icon_data_poolFolder

# Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# icon_data_poolFolder          = base directory, where grids/, input/ and setup/ exist

# overwrite the default setting with the new path and handle daint (CSCS)

if [ -d /users/icontest ]
then
    poolFolder_prefix=/users/icontest
else
    poolFolder_prefix=
fi

icon_data_poolFolder="$poolFolder_prefix/work/mh0287/users/rene/public/mpim"

#--------------------------------------------------------------------------------------------------

# (4) Set variables needed for the script, namelists and xml file
# ---------------------------------------------------------------

# horizontal grid(s)

atm_grid_name=icon_grid_${atmos_gridID}_${atmos_refinement}_G

atmo_grid_folder=/pool/data/ICON/grids/public/mpim/${atmos_gridID}
atmo_data_InputFolder=${icon_data_poolFolder}/${atmos_gridID}
atmo_dyn_grid=${atm_grid_name}.nc

# start and end date+time
start_date=${start_date:="1979-01-01T00:00:00Z"}
    end_date=${end_date:="2015-01-01T00:00:00Z"}

# restart intervals
checkpoint_interval="P10Y"
restart_interval="P1Y"

# output intervals
# ----------------

atm_file_interval="P1M"
atm_output_interval="P1M"

oce_file_interval="P1M"
oce_output_interval="P1M"

# file types
#
# 1: grib
# 2: grib2
# 3: NetCDF
# 4: NetCDF2
# 5: NetCDF4
#
# namelist files
atm_namelist=NAMELIST_${EXPNAME}_atm
lnd_namelist=NAMELIST_${EXPNAME}_lnd
oce_namelist=NAMELIST_${EXPNAME}_oce

#--------------------------------------------------------------------------------------------------

# (3) Define the model configuration
#-----------------------------------

# JSBACH settings
run_jsbach=yes
jsbach_usecase=jsbach_pfts       # jsbach_lite or jsbach_pfts
jsbach_with_lakes=yes
jsbach_with_hd=yes               # hydrological discharge: yes/no
jsbach_with_carbon=no            # yes needs jsbach_pfts usecase
jsbach_check_wbal=no             # check water balance

# Some further processing for land configuration
# ----------------------------------------------

ljsbach=$([ "${run_jsbach:=no}" == yes ]          && echo .TRUE. || echo .FALSE. )
llake=$([ "${jsbach_with_lakes:=yes}" == yes ]    && echo .TRUE. || echo .FALSE. )
lcarbon=$([ "${jsbach_with_carbon:=yes}" == yes ] && echo .TRUE. || echo .FALSE. )

if [[ $jsbach_usecase == *pfts* ]]
then
  pft_file_tag="11pfts_"
else
  pft_file_tag=""
fi

#--------------------------------------------------------------------------------------------------

# (4) Output control
# ------------------

# asynchronous diagnostic output processes
# ----------------------------------------

mpi_atm_io_procs=3                 # for atmosphere plus land
mpi_oce_io_procs=0                 # for ocean (not working yet)

# output file selection
# ---------------------

# Note that "mpi_atm_io_procs" must match the number of output files
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>

output_atm_vgrid=no                # produces 1 atm file 
output_atm_debug=no                # produces 1 atm file 
output_atm_3d=yes                  # produces 1 atm file 
output_atm_2d=yes                  # produces 1 atm file 
output_phy_3d=no                   # produces 1 atm file
                                   # Note: "yes" increases the output volume significantly!

output_trc_3d=no                   # produces 1 atm file
output_lnd=no                      # produces 1 lnd file

output_oce=yes                     # produces 1 oce file

#--------------------------------------------------------------------------------------------------
# I. coupling section
#--------------------------------------------------------------------------------------------------

if [ $mpi_total_procs -lt 2 ] ; then
  check_error 0 "This setup requires at least 2 mpi processes. Exit"
fi

# I.1 Split the number of total procs and assign to each component
# ----------------------------------------------------------------
oce_min_rank=`expr ${mpi_total_procs} - ${mpi_oce_procs}`
oce_max_rank=`expr ${oce_min_rank} + ${mpi_oce_procs} - 1`
oce_inc_rank=1
atm_min_rank=0
atm_max_rank=`expr ${oce_min_rank} - 1`
atm_inc_rank=1
#
# I.2 Fill model list
# -------------------
#
namelist_list[0]="$atm_namelist"
modelname_list[0]="atmo"
modeltype_list[0]=1
minrank_list[0]=$atm_min_rank
maxrank_list[0]=$atm_max_rank
incrank_list[0]=$atm_inc_rank
#
namelist_list[1]="$oce_namelist"
modelname_list[1]="ocean"
modeltype_list[1]=2
minrank_list[1]=$oce_min_rank
maxrank_list[1]=$oce_max_rank
incrank_list[1]=$oce_inc_rank


# I.3 YAC coupling library configuration
#-----------------------------------------------------------------------------

atm_lag=1
oce_lag=1

# co2_flux and co2_mixing_ratio are listed as transients
# below but are not configured for coupling in the couples
# section. There fields are therefore not considered for
# the search not for the data exchange even if yac_fget and
# yac_fput are called for these fields.
#
# component names in coupling.xml must (!) match with modelname_list[*]
#
cat > coupling_${EXPNAME}.xml << EOF
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<coupling xmlns="http://www.w3schools.com"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xsi:schemaLocation="http://www.w3schools.com coupling.xsd">
   <redirect redirect_of_root="false" redirect_stdout="false"/>
   <components>
      <component id="1">
         <name>${modelname_list[0]}</name>
         <model>ICON</model>
         <simulated>atmosphere</simulated>
         <transient_grid_refs>
            <transient_grid_ref collection_size="2" grid_ref="1" id="1" transient_ref="1"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="2" transient_ref="2"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="3" transient_ref="3"/>
            <transient_grid_ref collection_size="4" grid_ref="1" id="4" transient_ref="4"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="5" transient_ref="5"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="6" transient_ref="6"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="7" transient_ref="7"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="8" transient_ref="8"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="9" transient_ref="9"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="10" transient_ref="10"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="11" transient_ref="11"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="12" transient_ref="12"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="13" transient_ref="13"/>
         </transient_grid_refs>
      </component>
      <component id="2">
         <name>${modelname_list[1]}</name>
         <model>ICON</model>
         <simulated>ocean</simulated>
         <transient_grid_refs>
            <transient_grid_ref collection_size="2" grid_ref="1" id="1" transient_ref="1"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="2" transient_ref="2"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="3" transient_ref="3"/>
            <transient_grid_ref collection_size="4" grid_ref="1" id="4" transient_ref="4"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="5" transient_ref="5"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="6" transient_ref="6"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="7" transient_ref="7"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="8" transient_ref="8"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="9" transient_ref="9"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="10" transient_ref="10"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="11" transient_ref="11"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="12" transient_ref="12"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="13" transient_ref="13"/>
         </transient_grid_refs>
      </component>
      <component id="3">
         <name>name_list_io</name>
         <model>ICON</model>
         <simulated>IO</simulated>
      </component>
   </components>
   <transients>
      <transient id="1" transient_standard_name="surface_downward_eastward_stress"/>
      <transient id="2" transient_standard_name="surface_downward_northward_stress"/>
      <transient id="3" transient_standard_name="surface_fresh_water_flux"/>
      <transient id="4" transient_standard_name="total_heat_flux"/>
      <transient id="5" transient_standard_name="atmosphere_sea_ice_bundle"/>
      <transient id="6" transient_standard_name="sea_surface_temperature"/>
      <transient id="7" transient_standard_name="eastward_sea_water_velocity"/>
      <transient id="8" transient_standard_name="northward_sea_water_velocity"/>
      <transient id="9" transient_standard_name="ocean_sea_ice_bundle"/>
      <transient id="10" transient_standard_name="10m_wind_speed"/>
      <transient id="11" transient_standard_name="river_runoff"/>
      <transient id="12" transient_standard_name="co2_mixing_ratio"/>
      <transient id="13" transient_standard_name="co2_flux"/>
   </transients>
   <grids>
      <grid alias_name="grid1" id="1"/>
   </grids>
   <dates>
      <start_date>+1800-01-01T00:00:00.000</start_date>
      <end_date>+2100-01-01T00:00:00.000</end_date>
      <calendar>proleptic-gregorian</calendar>
   </dates>
   <timestep_unit>ISO_format</timestep_unit>
   <couples>
      <couple>
         <component1 component_id="1"/>
         <component2 component_id="2"/>
         <transient_couple transient_id="1">
            <source component_ref="1" transient_grid_ref="1"/>
            <target transient_grid_ref="1"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="2">
            <source component_ref="1" transient_grid_ref="2"/>
            <target transient_grid_ref="2"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="3">
            <source component_ref="1" transient_grid_ref="3"/>
            <target transient_grid_ref="3"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="4">
            <source component_ref="1" transient_grid_ref="4"/>
            <target transient_grid_ref="4"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="5">
            <source component_ref="1" transient_grid_ref="5"/>
            <target transient_grid_ref="5"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="6">
            <source component_ref="2" transient_grid_ref="6"/>
            <target transient_grid_ref="6"/>
            <timestep>
               <source>${oceTimeStep}</source>
               <target>${atmTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${oce_lag}</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="7">
            <source component_ref="2" transient_grid_ref="7"/>
            <target transient_grid_ref="7"/>
            <timestep>
               <source>${oceTimeStep}</source>
               <target>${atmTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${oce_lag}</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="8">
            <source component_ref="2" transient_grid_ref="8"/>
            <target transient_grid_ref="8"/>
            <timestep>
               <source>${oceTimeStep}</source>
               <target>${atmTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${oce_lag}</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="9">
            <source component_ref="2" transient_grid_ref="9"/>
            <target transient_grid_ref="9"/>
            <timestep>
               <source>${oceTimeStep}</source>
               <target>${atmTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${oce_lag}</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="10">
            <source component_ref="1" transient_grid_ref="10"/>
            <target transient_grid_ref="10"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
      </couple>
   </couples>
   <created date="20-03-2018 11:54" tool="YAC-CouplingGUI v.1.3.0"/>
</coupling>
EOF

#
# xsd and xml files for yac
# -------------------------
#
add_required_file ${ICON_BUILD_PATH}/run/coupling_${EXPNAME}.xml          ./coupling.xml
add_required_file ${ICON_SRC_PATH}/externals/yac/input/coupling.xsd.in  ./coupling.xsd

#-----------------------------------------------------------------------------
# II. ATMOSPHERE and LAND
#-----------------------------------------------------------------------------
#

# atmospheric dynamics and physics
# --------------------------------
cat > ${atm_namelist} << EOF
!
&coupling_mode_nml
  coupled_mode     = .TRUE.
/
&parallel_nml
 nproma            = ${nproma_atm}
 num_io_procs      = ${mpi_atm_io_procs}
/
&grid_nml
 dynamics_grid_filename = "${atmo_dyn_grid}"
/
&run_nml
 num_lev           = 47          ! number of full levels
 modelTimeStep     = "${atmTimeStep}"
 ltestcase         = .FALSE.     ! run testcase
 ldynamics         = .TRUE.      ! dynamics
 ltransport        = .TRUE.      ! transport
 ntracer           = 3           ! number of tracers; 3: hus, clw, cli; 4: hus, clw, cli, o3
 iforcing          = 2           ! 0: none, 1: HS, 2: ECHAM, 3: NWP
 output            = 'nml'
 profiling_output  = 1           ! aggregated: 1; detailed: 2; in files: 3
 msg_level         = 12          ! level of details report during integration 
 restart_filename  = "${EXPNAME}_restart_atm_<rsttime>.nc"
 activate_sync_timers = .TRUE.
/
&extpar_nml
 itopo             = 1           ! 1: read topography from the grid file
 l_emiss           = .FALSE.
/
&initicon_nml
 init_mode         = 2           ! 2: initialize from IFS analysis
 ifs2icon_filename = "ifs2icon.nc"
/
&nonhydrostatic_nml
 ndyn_substeps     = 10          ! dtime/dt_dyn
 damp_height       = 50000.      ! [m]
 rayleigh_coeff    = 0.10
 vwind_offctr      = 0.2
 divdamp_fac       = 0.004
/
&interpol_nml
 rbf_scale_mode_ll = 1
/
&sleve_nml
 min_lay_thckn     = 40.         ! [m]
 top_height        = 83000.      ! [m]
 stretch_fac       = 0.9
 decay_scale_1     = 4000.       ! [m]
 decay_scale_2     = 2500.       ! [m]
 decay_exp         = 1.2
 flat_height       = 16000.      ! [m]
/
&diffusion_nml
/
&transport_nml
!                    hus,clw,cli, o3
 ivadv_tracer      =   3,  3,  3,  3
 itype_hlimit      =   3,  4,  4,  3
 ihadv_tracer      =  52,  2,  2, 52
/
&echam_phy_nml
!
! domain 1
! --------
!
! atmospheric phyiscs (""=never)
 echam_phy_config(1)%dt_rad = "${radTimeStep}"
 echam_phy_config(1)%dt_vdf = "${atmTimeStep}"
 echam_phy_config(1)%dt_cnv = "${atmTimeStep}"
 echam_phy_config(1)%dt_cld = "${atmTimeStep}"
 echam_phy_config(1)%dt_gwd = "${atmTimeStep}"
 echam_phy_config(1)%dt_sso = "${atmTimeStep}"
!
! atmospheric chemistry (""=never)
 echam_phy_config(1)%dt_mox = "${atmTimeStep}"
 echam_phy_config(1)%dt_car = ""
 echam_phy_config(1)%dt_art = ""
!
! surface (.TRUE. or .FALSE.)
 echam_phy_config(1)%ljsb   = ${ljsbach} ! .TRUE. if run_jsbach=yes
 echam_phy_config(1)%lamip  = .FALSE.
 echam_phy_config(1)%lice   = .TRUE.
 echam_phy_config(1)%lmlo   = .FALSE.
 echam_phy_config(1)%llake  = ${llake}   ! .TRUE. if jsbach_with_lakes=yes
!
/
&echam_rad_nml
!
! domain 1
! --------
!
 echam_rad_config(1)%isolrad    =  1
 echam_rad_config(1)%irad_h2o   =  1
 echam_rad_config(1)%irad_co2   =  4
 echam_rad_config(1)%irad_ch4   =  4
 echam_rad_config(1)%irad_n2o   =  4
 echam_rad_config(1)%irad_o3    =  8
 echam_rad_config(1)%irad_o2    =  2
 echam_rad_config(1)%irad_cfc11 =  4
 echam_rad_config(1)%irad_cfc12 =  4
 echam_rad_config(1)%irad_aero  = 18
/
&echam_gwd_nml
/
&echam_sso_nml
/
&echam_vdf_nml
/
&echam_cnv_nml
/
&echam_cld_nml
/
&echam_cov_nml
/
&sea_ice_nml
/
EOF

# land surface and soil
# ---------------------
cat > ${lnd_namelist} << EOF
&jsb_model_nml
  usecase              = "${jsbach_usecase}"
  use_lakes            = ${llake}
  fract_filename       = "bc_land_frac.nc"
  output_tiles         = ${output_tiles}     ! List of tiles to output
/
&jsb_seb_nml
  bc_filename          = 'bc_land_phys.nc'
  ic_filename          = 'ic_land_soil.nc'
/
&jsb_rad_nml
  use_alb_veg_simple   = .FALSE.          ! Use TRUE for jsbach_lite, FALSE for jsbach_pfts
  bc_filename          = 'bc_land_phys.nc'
  ic_filename          = 'ic_land_soil.nc'
/
&jsb_turb_nml
  bc_filename          = 'bc_land_phys.nc'
  ic_filename          = 'ic_land_soil.nc'
/
&jsb_sse_nml
  l_heat_cap_map       = .FALSE.
  l_heat_cond_map      = .FALSE.
  l_heat_cap_dyn       = .FALSE.
  l_heat_cond_dyn      = .FALSE.
  l_snow               = .TRUE.
  l_dynsnow            = .TRUE.
  l_freeze             = .TRUE.
  l_supercool          = .TRUE.
  bc_filename          = 'bc_land_soil.nc'
  ic_filename          = 'ic_land_soil.nc'
/
&jsb_hydro_nml
  l_organic            = .FALSE.
  bc_filename          = 'bc_land_soil.nc'
  ic_filename          = 'ic_land_soil.nc'
  bc_sso_filename      = 'bc_land_sso.nc'
/
&jsb_assimi_nml
  active               = .TRUE.              ! Use FALSE for jsbach_lite, TRUE for jsbach_pfts
/
&jsb_pheno_nml
  scheme               = 'logrop'            ! scheme = logrop / climatology; use climatology for jsbach_lite
  bc_filename          = 'bc_land_phys.nc'
  ic_filename          = 'ic_land_soil.nc'
/
&jsb_carbon_nml
  active               = ${lcarbon}   ! TRUE if jsbach_with_carbon=yes
  bc_filename          = 'bc_land_carbon.nc'
  ic_filename          = 'ic_land_carbon.nc'
  read_cpools          = .FALSE.
/
&jsb_fuel_nml
  active                 = ${lcarbon}
  fuel_algorithm         = 1
/
&jsb_disturb_nml
  active               = .FALSE.
  ic_filename          = 'ic_land_soil.nc'
  bc_filename          = 'bc_land_phys.nc'
  fire_algorithm       = 1
  windbreak_algorithm  = 1
  lburn_pasture        = .FALSE.
/
EOF
if [[ ${jsbach_with_hd} = yes ]]; then
  cat >> ${lnd_namelist} << EOF
&jsb_hd_nml
  active               = .TRUE.
  routing_scheme       = 'zero'          ! simple scheme with zero runoff everywhere
  bc_filename          = 'bc_land_hd.nc'
  diag_water_budget    = .TRUE.
  debug_hd             = .FALSE.
  enforce_water_budget = .FALSE.         ! Rene: check! TRUE: stop in case of water conservation problem
/
EOF
fi

#--------------------------------------------------------------------------------------------------

# Define the atmosphere and land input
# ------------------------------------

# model files
#
add_link_file ${ICON_SRC_PATH}/data/lsdata.nc                                 ./
add_link_file ${ICON_SRC_PATH}/data/ECHAM6_CldOptProps.nc                     ./

# namelist files
#
add_required_file ${ICON_BUILD_PATH}/run/${atm_namelist}                        ./
add_required_file ${ICON_BUILD_PATH}/run/${lnd_namelist}                        ./

# dictionary file for output variable names
#
dict_file="dict.${EXPNAME}"
cat dict.iconam.mpim  > ${dict_file}
add_required_file ${ICON_BUILD_PATH}/run/${dict_file}                           ./

# initial conditions
#
# - atmosphere: ECMWF analysis, 1979-01-01T00:00:00Z
datadir=${icon_data_poolFolder}/${atmos_gridID}/initial_condition/r0001
add_link_file ${datadir}/ifs2icon_1979010100_${atmos_refinement}_G.nc   ./ifs2icon.nc
#
# - land: source?, date+time?
datadir=${icon_data_poolFolder}/${atmos_gridID}/land/r0001
add_link_file ${datadir}/ic_land_soil_1976.nc                           ./ic_land_soil.nc
# added in namelist, but not active and not yet available (2017-Dec-07)
#add_link_file ${datadir}/ic_land_carbon_1976.nc                        ./ic_land_carbon.nc

# boundary conditions
#
# range of years for yearly files
# assume start_date and end_date have the format yyyy-...
#
start_year=$(( ${start_date%%-*} - 1 ))
end_year=$(( ${end_date%%-*} + 1 ))
#
#
# - well mixed greenhouse gases
#
datadir=${icon_data_poolFolder}/independent/greenhouse_gases
add_link_file ${datadir}/greenhouse_historical_plus.nc                  ./bc_greenhouse_gases.nc
#
# - ozone
# -- for irad_o3=8
#
datadir=${icon_data_poolFolder}/${atmos_gridID}/ozone/r0001
#
add_link_file ${datadir}/bc_ozone_picontrol.nc                          ./bc_ozone.nc
#
# The following is required for AMIP
#
year=$start_year
while [[ $year -le $end_year ]]
do
  if [[ $year -le 2014 ]]
  then
    add_link_file ${datadir}/bc_ozone_historical_${year}.nc             ./bc_ozone_${year}.nc
  else
    add_link_file ${datadir}/bc_ozone_historical_2014.nc                ./bc_ozone_${year}.nc
  fi
  (( year = year+1 ))
done
#
# -- for irad_o3=1 with Cariolle ozone chemistry
#
datadir=${icon_data_poolFolder}/independent/greenhouse_gases
add_link_file ${datadir}/bc_ozone_cariolle.nc                           ./cariolle_coeff.nc
#
# - tropospheric anthropogenic aerosols, simple plumes
#
add_link_file ${ICON_SRC_PATH}/data/MACv2.0-SP_v1.nc                          ./MACv2.0-SP_v1.nc
#
#   Kinne background aerosols are needed for the year 1850 (irad_aero=18)
#
#   Here we use revised data based on work by Sebastian Rast
#
datadir=${icon_data_poolFolder}/${atmos_gridID}/aerosol_kinne/r0001
#
add_link_file ${datadir}/bc_aeropt_kinne_lw_b16_coa.nc                  ./
add_link_file ${datadir}/bc_aeropt_kinne_sw_b14_coa.nc                  ./
add_link_file ${datadir}/bc_aeropt_kinne_sw_b14_fin_1850.nc             ./bc_aeropt_kinne_sw_b14_fin.nc
#
# - stratospheric aerosol
#
datadir=${icon_data_poolFolder}/independent/aerosol_stenchikov
year=$start_year
while [[ $year -le $end_year ]]
do
  if [[ $year -le 1999 ]]
  then
    add_link_file ${datadir}/bc_aeropt_stenchikov_lw_b16_sw_b14_${year}.nc ./bc_aeropt_stenchikov_lw_b16_sw_b14_${year}.nc
  else
    add_link_file ${datadir}/bc_aeropt_stenchikov_lw_b16_sw_b14_1999.nc    ./bc_aeropt_stenchikov_lw_b16_sw_b14_${year}.nc
  fi
  (( year = year+1 ))
done
#
# - sst and sic
#
datadir=${icon_data_poolFolder}/${atmos_gridID}/sst_and_seaice/r0001
add_link_file ${datadir}/bc_sic_1979_2016.nc                               ./bc_sic.nc
add_link_file ${datadir}/bc_sst_1979_2016.nc                               ./bc_sst.nc
#
# - ssi and tsi
#
datadir=${icon_data_poolFolder}/independent/solar_radiation/3.2
add_link_file ${datadir}/swflux_14band_cmip6_1850-2299-v3.2.nc             ./bc_solar_irradiance_sw_b14.nc
#
# - land parameters
#
datadir=${icon_data_poolFolder}/${atmos_gridID}/land/r0001
add_link_file ${datadir}/bc_land_frac_${pft_file_tag}1976.nc               ./bc_land_frac.nc
add_link_file ${datadir}/bc_land_phys_1976.nc                              ./bc_land_phys.nc
add_link_file ${datadir}/bc_land_soil_1976.nc                              ./bc_land_soil.nc
add_link_file ${datadir}/bc_land_sso_1976.nc                               ./bc_land_sso.nc
#
# added in namelist, but not active and not yet available (2017-Dec-07)
#
#add_link_file ${datadir}/bc_land_carbon_1976.nc                           ./bc_land_carbon.nc
#
# The following bc_land_hd-file is not yet available...
#
if [[ ${jsbach_with_hd} = yes ]]; then
  add_link_file ${datadir}/bc_land_hd.nc                                   ./bc_land_hd.nc
fi
#
# - lctlib file for JSBACH
#
add_link_file ${ICON_SRC_PATH}/externals/jsbach/data/lctlib_nlct21.def           ./lctlib_nlct21.def
#
# - HD mask for interpolation of runoff
#
add_required_file ${atmo_grid_folder}/${atmo_dyn_grid}                     ./hd_mask.nc
#
# - the atmosphere grid itself (the gid copy section below from $HGRIDDIR is ignored)
#
add_required_file ${atmo_grid_folder}/${atmo_dyn_grid}                     ./
#
#--------------------------------------------------------------------------------------------------

# Define the atmosphere and land output
# -------------------------------------

# Parameters for all output files
# -------------------------------
cat >> ${atm_namelist} << EOF
&io_nml
 output_nml_dict    = "${dict_file}"
 netcdf_dict        = "${dict_file}"
 write_last_restart = .TRUE.
 itype_pres_msl     = 4
 restart_file_type  = 5
!restart_write_mode = "joint procs multifile"
!lkeep_in_sync      = .TRUE.
/
EOF

if [[ "$output_atm_vgrid" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_vgrid"
 filename_format  = "<output_filename>_<levtype_l>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"           ! output_start = output_end
 output_end       = "${start_date}"           ! --> write once only irrespective of
 output_interval  = "${atm_output_interval}"  !     the output interval and
 file_interval    = "${atm_file_interval}"    !     the file interval
 ml_varlist       = 'zghalf'  , 'zg'      , 'dzghalf'
/
EOF
fi

if [[ "$output_atm_3d" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'      , 'pfull'   , 'zg'      ,
                    'rho'     , 'ta'      ,
                    'ua'      , 'va'      , 'wap'     ,
                    'hus'     , 'clw'     , 'cli'     ,
                    'hur'     , 'cl'
/
EOF
fi

if [[ "$output_atm_2d" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'orog'    ,
                    'ps'      , 'psl'     ,
                    'cosmu0'  ,
                    'rsdt'    ,
                    'rsut'    , 'rsutcs'  , 'rlut'    , 'rlutcs'  ,
                    'rsds'    , 'rsdscs'  , 'rlds'    , 'rldscs'  ,
                    'rsus'    , 'rsuscs'  , 'rlus'    ,
                    'ts'      ,
                    'sic'     , 'sit'     ,
                    'albedo'  ,
                    'clt'     ,
                    'prlr'    , 'prls'    , 'prcr'    , 'prcs'    ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'tauu'    , 'tauv'    ,
                    'tauu_sso', 'tauv_sso', 'diss_sso',
                    'sfcwind' , 'uas'     , 'vas'     ,
                    'tas'     , 'dew2'    ,
                    'ptp'
/
EOF
fi

if [[ "$output_phy_3d" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_phy_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'           , 'pfull'        , 'zg'           ,
                    'tend_ta'      , 'tend_ta_dyn'  , 'tend_ta_phy'  ,
                    'tend_ta_rlw'  , 'tend_ta_rsw'  ,
                    'tend_ta_vdf'  , 'tend_ta_gwd'  , 'tend_ta_sso'  ,
                    'tend_ta_cnv'  , 'tend_ta_cld'  , 
                    'tend_ua'      , 'tend_ua_dyn'  , 'tend_ua_phy'  ,
                    'tend_ua_vdf'  , 'tend_ua_gwd'  , 'tend_ua_sso'  ,
                    'tend_ua_cnv'  , 
                    'tend_va'      , 'tend_va_dyn'  , 'tend_va_phy'  ,
                    'tend_va_vdf'  , 'tend_va_gwd'  , 'tend_va_sso'  ,
                    'tend_va_cnv'  ,
                    'tend_qhus'    , 'tend_qhus_dyn', 'tend_qhus_phy',
                    'tend_qhus_cld', 'tend_qhus_cnv', 'tend_qhus_vdf'
/
EOF
fi

if [[ "$output_trc_3d" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_trc_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'        , 'pfull'     , 'zg'        ,
                    'mairvi_phy',
                    'mdryvi_phy',
                    'mh2ovi_phy',
                    'qhus_phy'  , 'mhusvi_phy', 'tend_mhusvi_phy',
                    'qclw_phy'  , 'mclwvi_phy', 'tend_mclwvi_phy',
                    'qcli_phy'  , 'mclivi_phy', 'tend_mclivi_phy',
                    !'qo3_phy'   , 'mo3vi_phy' , 'tend_mo3vi_phy',
/
EOF
fi

if [[ "$output_lnd" == "yes" ]]; then
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_lnd"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'pheno_lai_box'         , 'pheno_fract_fpc_veg'         , 'hydro_fract_water_box' , 
                    'hydro_fract_snow_box'  , 'hydro_w_skin_box'            , 'hydro_w_snow_box'      ,
                    'hydro_w_soil_column_box'
/
EOF
fi

#-----------------------------------------------------------------------------
# III. OCEAN and SEA-ICE (and HAMOCC) 
#-----------------------------------------------------------------------------

ocean_vertical_levels=40
ocean_grid="icon_grid_${ocean_gridID}_${ocean_refinement}_O.nc"
ocean_grid_folder="/pool/data/ICON/grids/public/mpim/${ocean_gridID}"
ocean_data_InputFolder="${icon_data_poolFolder}/${ocean_gridID}/ocean"
 
#-----------------------------------------------------------------------------
#
# HAMOCC
#
use_hamocc=no
if [  "x${use_hamocc}"  = "xyes" ]; then
lhamocc=".TRUE."
lbgcadv=".TRUE."
nlev_eu=$ocean_vertical_levels
# set nlev_eu to level belonging to approx 500m
if [ "x$ocean_vertical_levels" = "x40" ];then
nlev_eu=19
fi
if [ "x$ocean_vertical_levels" = "x64" ];then
nlev_eu=26
fi
if [ "x$ocean_vertical_levels" = "x20" ];then
nlev_eu=16
fi
else
lhamocc=".FALSE."
lbgcadv=".FALSE."
fi
#
#-----------------------------------------------------------------------------
#
# write namelist parameters
# -------------------------

cat > ${oce_namelist} << EOF
!
&coupling_mode_nml
  coupled_mode               = .TRUE.
/
&parallel_nml
 nproma                      = ${nproma_oce}
 num_io_procs                = ${mpi_oce_io_procs}
 p_test_run                  = .FALSE.
 l_fast_sum                  = .TRUE.
/
&grid_nml
 dynamics_grid_filename      = "${ocean_grid}"
 use_dummy_cell_closure      = .TRUE.
 use_duplicated_connectivity = .FALSE.
/
&dynamics_nml
 iequations                  = -1                               ! -1: hydrost. ocean model
/
&run_nml
 modelTimeStep               = "${oceTimeStep}"
 output                      = 'nml'                            ! namelist controlled output scheme
 activate_sync_timers        = .TRUE.
 profiling_output            = 1                                ! aggregated: 1; detailed: 2; in files: 3
 msg_timestamp               = .FALSE.
 timers_level                = 10
 debug_check_level           = 1
 restart_filename            = "${EXPNAME}_restart_oce_<rsttime>.nc"
/
EOF
#
if [[ "$output_oce" == "yes" ]]; then
   #
   cat >> ${oce_namelist} << EOF
&output_nml
  filetype                   = 5
  output_filename            = "${EXPNAME}_oce"
  filename_format            = "<output_filename>_<datetime2>"
  output_start               = "${start_date}"                  ! start in ISO-format
  output_end                 = "${end_date}"                    ! end in ISO-format
  output_interval            = "${oce_output_interval}"
  file_interval              = "${oce_file_interval}"
  mode                       = 1                                ! 1: forecast mode (relative t-axis)
                                                                ! 2: climate mode (absolute t-axis)
  include_last               = .FALSE.
  output_grid                = .FALSE.
  filename_format            = "<output_filename>_<datetime2>"
  operation                  = "mean"
  ml_varlist                 = 'group:oce_default', 'group:oce_essentials', 'group:ice_default'
/
EOF
fi

cat >> ${oce_namelist} << EOF
&dbg_index_nml
  idbg_mxmn                  = 0                                ! initialize MIN/MAX  debug output
  idbg_val                   = 0                                ! initialize one cell debug output
  idbg_slev                  = 1                                ! initialize start level for debug output
  idbg_elev                  = 5                                ! initialize end level for debug output
  dbg_lat_in                 = 30.0                             ! latitude location of one cell debug output
  dbg_lon_in                 = -30.0                            ! longitude location of one cell debug output
  str_mod_tst                = 'all'                            ! define modules to print out in debug mode
/
&ocean_dynamics_nml
! 40 unevenly spaced levels used by MPIOM/GR30
 n_zlev         =   ${ocean_vertical_levels}
 dzlev_m(1:40)  =   12.0,   10.0,   10.0,   10.0,   10.0,   10.0,   13.0,   15.0,   20.0,   25.0,
                    30.0,   35.0,   40.0,   45.0,   50.0,   55.0,   60.0,   70.0,   80.0,   90.0,
                   100.0,  110.0,  120.0,  130.0,  140.0,  150.0,  170.0,  180.0,  190.0,  200.0,
                   220.0,  250.0,  270.0,  300.0,  350.0,  400.0,  450.0,  500.0,  500.0,  600.0
  l_edge_based                               = .FALSE.          ! edge- or cell-based mimetic discretization

  select_solver                   = 4       ! 1=gmres_oce_old; 2=ocean_restart_gmres, 3=mixed precisison restart 
                                            ! 4=CG (default) 5=CGJ 6=BiCG 7=GMRES restart (legacy) 8=MINRES
  use_absolute_solver_tolerance   = .true.
  solver_tolerance                = 1.0E-13 ! this may further be reduced

  select_lhs                      = 1       ! 1=operator based (default) 2=matrix based
  l_lhs_direct                    = .false. ! .true.= use lhs implementation directly  .false.= matrix scanner (default) 
  solver_FirstGuess               = 2       ! 0=start from zeros 1=last timestep smoothed 2=last timestep (default) 

  fast_performance_level          = 200       ! performance level 12: for cell-based; 5: default
  use_continuity_correction       = .TRUE.    ! height adjustment according to vertical velocity in dynamics
  cfl_check                       = .FALSE.
  cfl_write                       = .FALSE.

  i_bc_veloc_top                  =   1
  i_bc_veloc_bot                  =   1       ! 0: (def) bottom friction off, 1: on
/
&ocean_tracer_transport_nml
  flux_calculation_horz                      = 5                ! 1=upwind, 2=central, 3=Lax-Friedrichs,
                                                                ! 4=Miura, 5=FCT with Zalesak limiter (default)
  flux_calculation_vert                      = 7                ! 6=adpo; 7=upwind biased ppm (default); 8=FCT with zalesak limiter
  ! define low and high order methods to be used in
  ! horizontal flux corrected transport methods
  ! (flux_calculation_horz=4,5)
  fct_low_order_flux                         = 1                ! horizontal low  order method: 1=upwind (def), no other implemented
  fct_high_order_flux                        = 5                ! horizontal high order method: 1=upwind, 2=central, 3=lax_friedrichs, 4=miura_order1
  fct_limiter_horz                           = 100              ! zalesak
  threshold_min_T                            = -4.0             ! to avoid abort
/
&ocean_horizontal_diffusion_nml
  laplacian_form                             = 1                ! 1=curlcurl-graddiv
  VelocityDiffusion_order                    = 1                ! 21=biharmonic+laplacian (for the laplacian leith)
                                                                !
  BiharmonicViscosity_scaling                = 1
  BiharmonicViscosity_reference              = 1.0E13           ! [m2/s] constant horizontal viscosity coefficient for velocity
  BiharmonicViscosity_background             = 0.0              ! [m2/s] constant horizontal viscosity coefficient for velocity

  HarmonicViscosity_scaling                  = 1
  HarmonicViscosity_reference                = 1.0E+4           ! [m2/s] constant horizontal viscosity coefficient for velocity
  HarmonicViscosity_background               = 0.0  

  TracerHorizontalDiffusion_scaling          = 1
  Temperature_HorizontalDiffusion_Background = 0.0
  Temperature_HorizontalDiffusion_Reference  = 0
  Salinity_HorizontalDiffusion_Background    = 0.0
  Salinity_HorizontalDiffusion_Reference     = 0
/
&ocean_vertical_diffusion_nml
  PPscheme_type                              = 4
  velocity_VerticalDiffusion_background      = 5.0E-5           ! [m2/s]  vertical background viscosity coefficient for velocity
  temperature_VerticalDiffusion_background   = 1.0E-5           ! [m2/s]  vertical background diffusion coefficient for temperature
  salinity_VerticalDiffusion_background      = 1.0E-5           ! [m2/s]  vertical background diffusion coefficient for salinity
  tracer_convection_MixingCoefficient        = 0.1              ! max vertical tracer diffusion for convection used in case of instability
  convection_InstabilityThreshold            = -1.0E-6          ! used in update_ho_params - default=-5e-8
  richardsonDiffusion_threshold              = 0.0              ! used in update_ho_params - default=+5e-8
  tracer_RichardsonCoeff                     = 2.0E-3           ! factor for vertical diffusion coefficient in PP scheme
  velocity_RichardsonCoeff                   = 2.0E-3           ! factor for vertical viscosity coefficient in PP scheme
  bottom_drag_coeff                          = 3.0E-3           ! default=2.5E-3; active for i_bc_veloc_bot=1
  use_wind_mixing                            = .TRUE.           ! TRUE: use wind mixing scheme in MPIOM-type pp-scheme
  lambda_wind                                = 0.03
  tracer_TopWindMixing                       = 1.0E-5
  velocity_TopWindMixing                     = 1.0E-5
/
&ocean_GentMcWilliamsRedi_nml
  GMRedi_configuration                       = 1                ! 0=cartesian diffusion; 1=GM-Redi: bolus advection + isopycnal diffusion
  tapering_scheme                            = 1
  GMRedi_usesRelativeMaxSlopes               = .FALSE.
  S_max                                      = 1.0e-3           ! 1.0
  S_d                                        = 1.0e-4           ! 5e-3 to 5e-4
                                                                !
  k_tracer_GM_kappa_parameter                = 800.0            !
  k_tracer_isoneutral_parameter              = 800.0            ! value for cell-based cartesian diffusion - mpiom: 1000/400km = 400/160km
  k_tracer_dianeutral_parameter              = 0.0              ! 1.0E-5  !
                                                                !
  switch_off_diagonal_vert_expl              = .TRUE.
  gmredi_combined_diagnostic                 = .FALSE.
! switch_on_redi_balance_diagnostic          = .FALSE.          ! not yet available in icon-aes-dyamond++
  revert_vertical_recon_and_transposed       = .TRUE.
  slope_calc_via_temperture_salinity         = .TRUE.
  include_slope_squared_implicit             = .TRUE.           ! think of l_with_vert_tracer_diffusion
  switch_on_tapering_horizontal_diffusion    = .TRUE.
/
&ocean_physics_nml
  i_sea_ice                                  = 1                ! 0 = no sea ice; 1 = sea ice model on; default=1
  lhamocc                                    = ${lhamocc}
  lbgcadv                                    = ${lbgcadv}
/                                           
&sea_ice_nml
  i_ice_therm                                = 1                ! 1=zero-layer (default), 2=Winton, 0/2: not allowed
  i_ice_dyn                                  = 1                ! 1/0=switch on/off AWI ice dynamics
! i_Qio_type                                 = 3                ! 3 (default): energy of whole grid-area used for melting (MPIOM-type)
! use_constant_tfreez                        = .TRUE.           ! default: TRUE
! use_no_flux_gradients                      = .FALSE.          ! default: TRUE
! leadclose_1                                = 0.25             ! default: 0.5 - value of MPIOM: 0.25
! leadclose_2n                               = 0.666            ! default: 0.0 - value of MPIOM: 2/3
/
EOF

cat >> ${oce_namelist} << EOF
&ocean_forcing_nml
  iforc_oce                                  = 14               ! ocean forcing: 14 from coupling via YAC
  type_surfRelax_Temp                        = -1               ! -1: use net surface heat flux from atmosphere
                                                                !  0: no relaxation used
                                                                !  1: relaxation switched on for reading (init_oce_relax=1)
                                                                !     or some testcases only
  forcing_enable_freshwater                  = .TRUE.           ! enable/disable freshwater flux
  forcing_windstress_u_type                  = 2                ! 0: zero wind stress, 1: read from file, 2: none
  forcing_windstress_v_type                  = 2                ! 0: zero wind stress, 1: read from file, 2: none

  limit_seaice                               = .TRUE.           ! default: TRUE
  seaice_limit                               = 0.6              ! hard limit set to 60% of upper layer for sea ice
                                                                ! (R2B4-R2B6 versions use 0.8)
  limit_elevation                            = .TRUE.           ! to be checked!
/
EOF
#
if [[ "$initialiseOcean" == "fromRestart" ]]; then
  #
  cat >> ${oce_namelist} << EOF
&ocean_initialConditions_nml
  initial_salinity_type                      = 0                ! 0: none, 1: read S from initial_state.nc
  initial_temperature_type                   = 0                ! 0: none, 1: read T from initial_state.nc
  initialize_fromRestart                     = .TRUE.
/
EOF
#
else
#
  if [[ "$initialiseOcean" == "fromClimatology" ]]; then
    cat >> ${oce_namelist} << EOF
&ocean_initialConditions_nml
  initial_salinity_type                      = 1                ! 0: none, 1: read S from initial_state.nc
  initial_temperature_type                   = 1                ! 0: none, 1: read T from initial_state.nc
  initialize_fromRestart                     = .FALSE.
/
EOF
  else
    cat >> ${oce_namelist} << EOF
&ocean_initialConditions_nml
  initial_salinity_type                      = 0                ! 0: none, 1: read S from initial_state.nc
  initial_temperature_type                   = 0                ! 0: none, 1: read T from initial_state.nc
  initialize_fromRestart                     = .FALSE.
/
EOF
  fi
fi
#
cat >> ${oce_namelist} << EOF
&ocean_diagnostics_nml
  diagnostics_level                          = 1
  diagnose_for_horizontalVelocity            = .FALSE.
/
&io_nml
  restart_file_type                          = 5
  write_last_restart                         = .TRUE.
! restart_write_mode                         = "joint procs multifile"
! lkeep_in_sync                              = .TRUE.           ! sync after each timestep
/
EOF

add_required_file ${ICON_BUILD_PATH}/run/${oce_namelist} ./

#-----------------------------------------------------------------------------
#
# Ocean initialisation input
#
if [[ "$initialiseOcean" == "fromRestart" ]]; then
  add_link_file ${ocean_data_InputFolder}/restart/r0001/rar0034_restart_oce_20500101T000000Z.nc restart_oce_DOM01.nc 
fi
#
if [[ "$initialiseOcean" == "fromClimatology" ]]; then
  add_link_file ${ocean_data_InputFolder}/initial_condition/r0001/ts_phc3.0_annual_icon_grid_0020_R02B05_O_L40.nc initial_state.nc
fi
#
# For a restart run the ocean only requires the grid
# and the restart file. No other files are required.
#
add_required_file ${ocean_grid_folder}/${ocean_grid} ./
#
#-----------------------------------------------------------------------------

if [ $mpi_total_procs -lt `expr $mpi_oce_procs + 1` ] ; then
   echo "Too few mpi_total_procs for requested mpi_oce_procs."
   echo "-> check mpi_total_procs and mpi_oce_procs. Exiting."
   check_error 0
   exit
fi

#-----------------------------------------------------------------------------


