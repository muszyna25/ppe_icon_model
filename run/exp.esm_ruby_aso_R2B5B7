#!/bin/bash
#--------------------------------------------------------------------------------------------------
#
# ICON-ESM R2B5 atmosphere including jsbach coupled to R2B7 ocean on equatorial-symmetric grids
# Atmosphere-Land-Ocean YAC Coupled Experiment:
#  - atmosphere-soil-ocean (aso) spinup script without HAMOCC biogeochemistry
#
author_list="Monika Esch, Rene Redler, Stephan Lorenz"
#
#--------------------------------------------------------------------------------------------------
#
# This file describes a coupled experiment setup on a R2B4 grid based on the non-hydrostatic
# atmosphere with ECHAM physics and the hydrostatic ocean running on a R2B6 grid. The atmosphere
# is intialized from analysis files and using transient boundary conditions (1850) for:
# - spectral solar irradiation
# - well mixed greenhouse gases CO2, CH4, N2O, no CFCs
# - O3 concentration
# - SST and sea ice are transferred via YAC from the ocean.
# - and no (!) aerosols
#
# Here, the ocean is already spun up from PHC3.0 (Levitus) climatology for several centuries
# initialiseOcean="fromRestart"
# initialiseOcean="fromClimatology" is possible, see below.
#
# The coupling:
#
# atmosphere -> ocean:
# . surface_downward_eastward_stress
# . surface_downward_northward_stress
# . surface_fresh_water_flux
# . total_heat_flux
# . atmosphere_sea_ice_bundle
# . river_runoff
#
# ocean -> atmosphere:
# . sea_surface_temperature
# . eastward_sea_water_velocity
# . northward_sea_water_velocity
# . ocean_sea_ice_bundle
# . 10m_wind_speed
#
# currently not activated for coupling:
# . co2_mixing_ratio
# . co2_flux
#
#--------------------------------------------------------------------------------------------------

# (0) Basic model configuration
# -----------------------------

atmos_gridID="0019"
atmos_refinement="R02B05"

ocean_gridID="0032"
ocean_refinement="R02B07"

# use alternatively: full restart, init from (ocean) restart, init from climatology or false
#  - set to false if ocean was already initialised
initialiseOcean="fromRestart"
# initialiseOcean="fromClimatology"
# initialiseOcean="FALSE"
# restart=.true.

#mpi_oce_nodes=56   #  this is a suitable value for 100 nodes = 44 atm + 56 oce nodes
mpi_oce_nodes=${mpi_oce_nodes:=((no_of_nodes/2))}   # default: half of requested nodes
((mpi_oce_procs=mpi_oce_nodes * mpi_procs_pernode))

# do not read namelists from ocean restart-file
read_restart_namelists=".false."

#--------------------------------------------------------------------------------------------------

# (1) Define the model time stepping
# ----------------------------------

radTimeStep="PT2H"               # radiation time step
atmTimeStep="PT5M"               # atmosphere time step
atm_substeps=5                   # atmosphere dynamics substeps
oceTimeStep="PT20M"              # ocean time step
couplingTimeStep="PT20M"         # coupling time step

#--------------------------------------------------------------------------------------------------

# (2) unset some setting of create_target_header for mistral

unset OMPI_MCA_coll_fca_enable
unset OMPI_MCA_coll_fca_priority

#--------------------------------------------------------------------------------------------------

# (3) icon_data_poolFolder

# Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# icon_data_poolFolder          = base directory, where grids/, input/ and setup/ exist
# nproma                        = blocking length for array dimensioning and inner loop lengths
#                                 -> deprecated. nproma_atm and nproma_ocn are used here.
nproma_atm=16
nproma_oce=16

# overwrite the default setting with the new path and handle daint (CSCS)

if [ -d /users/icontest ]
then
    poolFolder_prefix=/users/icontest
else
    poolFolder_prefix=
fi

#icon_data_poolFolder="$poolFolder_prefix/work/mh0287/users/rene/public/mpim"
icon_data_poolFolder="$poolFolder_prefix/pool/data/ICON/grids/private/rene/mpim"

# horizontal grid(s)
# ------------------
atm_grid_name=icon_grid_${atmos_gridID}_${atmos_refinement}_G     #  global grid incl. land

atmo_grid_folder=/pool/data/ICON/grids/private/rene/mpim/${atmos_gridID}  # still some private path!
atmo_data_InputFolder=${icon_data_poolFolder}/${atmos_gridID}
atmo_dyn_grid=${atm_grid_name}.nc

#--------------------------------------------------------------------------------------------------

# (4) Set variables to configure the experiment:
# ----------------------------------------------

# start and end date+time of experiment
# -------------------------------------
start_date=${start_date:="1000-01-01T00:00:00Z"}
    end_date=${end_date:="1000-01-03T00:00:00Z"}   #  test run 30 min, 2x 1day, no production
#   end_date=${end_date:="1200-01-01T00:00:00Z"}   #  production run, annual

fx_date="1000-01-02T00:00:00Z"                     #  output of fixed geometry

# restart/checkpoint/output intervals
# -----------------
#restart_interval="P5Y"                             #  production run - 5y
restart_interval="P1D"                             #  test run 30 min

# restart and output files are written once per job
checkpoint_interval="P20Y"                        
atm_file_interval="P20Y"
oce_file_interval="P20Y"
lnd_file_interval="P20Y"

#  output interval: test run - 6-hourly; production run - monthly
#atm_output_interval="P1M"
#oce_output_interval="P1M"
#lnd_output_interval="P1M"
atm_output_interval="PT6H"
oce_output_interval="PT6H"
lnd_output_interval="PT6H"

# asynchronous diagnostic output processes
# ----------------------------------------

# Note that "mpi_atm_io_procs" must match the number of output files
mpi_atm_io_procs=0      # >0 for atmosphere plus land (not working for monitoring)
mpi_oce_io_procs=0      # >0 for ocean is not working yet

# output file selection
# ---------------------
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>

# monitoring output switches
output_atm_mon=yes
output_oce_mon=yes
output_oce_moc=yes      #  calc_moc is called every timestep - switch off for high resolutions

# sea ice, snow, SST and some deeper levels ocean output
output_oce_ice=yes

# standard debug-flux arrays at surface
output_atm_dbg=no 
output_oce_dbg=no 
output_lnd_dbg=yes

# land masks
output_lnd_msk=no

# default output files for atm/oce needed for standard quickplots
output_atm_3d=yes
output_atm_2d=yes
output_oce_def=yes      #  annual mean output is sufficient

# output interval for default atm/oce files, normally set to general atmos interval:
atm_output_interval_3d="$atm_output_interval"
atm_output_interval_2d="$atm_output_interval"
# annual mean output for deep ocean, since monthly output increases cpu-time!
oce_output_interval_def="P1Y"

# output switches for large atm/oce files - set to "yes" if needed for additional analysis
output_atm_cgrid=no     # produces 1 atm file 
output_lnd_amip=no      #  land output for atm_amip experiment
output_phy_3d=no        #  atmosphere physics, note: "yes" increases the output volume significantly!


#--------------------------------------------------------------------------------------------------

# (5) Define the model configuration
#-----------------------------------

# JSBACH settings
run_jsbach=yes
jsbach_usecase=jsbach_pfts    # jsbach_lite or jsbach_pfts
jsbach_with_lakes=yes 
jsbach_check_wbal=yes         # check water balance
jsbach_with_carbon=no         # yes needs jsbach_pfts usecase

# Some further processing for land configuration
# ----------------------------------------------

ljsbach=$([ "${run_jsbach:=no}" == yes ]          && echo .TRUE. || echo .FALSE. )
llake=$([ "${jsbach_with_lakes:=yes}" == yes ]    && echo .TRUE. || echo .FALSE. )
lcarbon=$([ "${jsbach_with_carbon:=yes}" == yes ] && echo .TRUE. || echo .FALSE. )

if [[ $jsbach_usecase == *pfts* ]]
then
  pft_file_tag="11pfts_"
else
  pft_file_tag=""
fi

# namelist files
# --------------
atm_namelist=NAMELIST_${EXPNAME}_atm
lnd_namelist=NAMELIST_${EXPNAME}_lnd
oce_namelist=NAMELIST_${EXPNAME}_oce


#--------------------------------------------------------------------------------------------------
# I. coupling section
#--------------------------------------------------------------------------------------------------

if [ $mpi_total_procs -lt 2 ] ; then
  check_error 0 "This setup requires at least 2 mpi processes. Exit"
fi

# I.1 Split the number of total procs and assign to each component
# ----------------------------------------------------------------
oce_min_rank=`expr ${mpi_total_procs} - ${mpi_oce_procs}`
oce_max_rank=`expr ${oce_min_rank} + ${mpi_oce_procs} - 1`
oce_inc_rank=1
atm_min_rank=0
atm_max_rank=`expr ${oce_min_rank} - 1`
atm_inc_rank=1
#
# I.2 Fill model list
# -------------------
#
namelist_list[0]="$atm_namelist"
modelname_list[0]="atmo"
modeltype_list[0]=1
minrank_list[0]=$atm_min_rank
maxrank_list[0]=$atm_max_rank
incrank_list[0]=$atm_inc_rank
#
namelist_list[1]="$oce_namelist"
modelname_list[1]="ocean"
modeltype_list[1]=2
minrank_list[1]=$oce_min_rank
maxrank_list[1]=$oce_max_rank
incrank_list[1]=$oce_inc_rank


# I.3 YAC coupling library configuration
#-----------------------------------------------------------------------------

# Mapping parameter for coupling:
#  in order to enforce errors if unmapped grid-cells are found:
#  - for conservative remapping  use: user_value=-999.9 as second method only
#  - for method bernstein_bezier use: (2) n-nearest_neighbor and (3) user_value=-999.9
#

atm_lag=1
oce_lag=1

# write weights for runoff-coupling (source_to_target mapping) into file
runoffweightfile=runoff_$EXPNAME

# co2_flux and co2_mixing_ratio are listed as transients
# below but are not configured for coupling in the couples
# section. There fields are therefore not considered for
# the search not for the data exchange even if yac_fget and
# yac_fput are called for these fields.
#
# component names in coupling.xml must (!) match with modelname_list[*]
#
cat > coupling_${EXPNAME}.xml << EOF
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<coupling xmlns="http://www.w3schools.com"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.w3schools.com coupling.xsd">
   <redirect redirect_of_root="false" redirect_stdout="false"/>
   <components>
      <component id="1">
         <name>${modelname_list[0]}</name>
         <model>ICON</model>
         <simulated>atmosphere</simulated>
         <transient_grid_refs>
            <transient_grid_ref collection_size="2" grid_ref="1" id="1" transient_ref="1"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="2" transient_ref="2"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="3" transient_ref="3"/>
            <transient_grid_ref collection_size="4" grid_ref="1" id="4" transient_ref="4"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="5" transient_ref="5"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="6" transient_ref="6"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="7" transient_ref="7"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="8" transient_ref="8"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="9" transient_ref="9"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="10" transient_ref="10"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="11" transient_ref="11"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="12" transient_ref="12"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="13" transient_ref="13"/>
         </transient_grid_refs>
      </component>
      <component id="2">
         <name>${modelname_list[1]}</name>
         <model>ICON</model>
         <simulated>ocean</simulated>
         <transient_grid_refs>
            <transient_grid_ref collection_size="2" grid_ref="1" id="1" transient_ref="1"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="2" transient_ref="2"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="3" transient_ref="3"/>
            <transient_grid_ref collection_size="4" grid_ref="1" id="4" transient_ref="4"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="5" transient_ref="5"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="6" transient_ref="6"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="7" transient_ref="7"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="8" transient_ref="8"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="9" transient_ref="9"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="10" transient_ref="10"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="11" transient_ref="11"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="12" transient_ref="12"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="13" transient_ref="13"/>
         </transient_grid_refs>
      </component>
      <component id="3">
         <name>name_list_io</name>
         <model>ICON</model>
         <simulated>IO</simulated>
      </component>
   </components>
   <transients>
      <transient id="1" transient_standard_name="surface_downward_eastward_stress"/>
      <transient id="2" transient_standard_name="surface_downward_northward_stress"/>
      <transient id="3" transient_standard_name="surface_fresh_water_flux"/>
      <transient id="4" transient_standard_name="total_heat_flux"/>
      <transient id="5" transient_standard_name="atmosphere_sea_ice_bundle"/>
      <transient id="6" transient_standard_name="sea_surface_temperature"/>
      <transient id="7" transient_standard_name="eastward_sea_water_velocity"/>
      <transient id="8" transient_standard_name="northward_sea_water_velocity"/>
      <transient id="9" transient_standard_name="ocean_sea_ice_bundle"/>
      <transient id="10" transient_standard_name="10m_wind_speed"/>
      <transient id="11" transient_standard_name="river_runoff"/>
      <transient id="12" transient_standard_name="co2_mixing_ratio"/>
      <transient id="13" transient_standard_name="co2_flux"/>
   </transients>
   <grids>
      <grid alias_name="grid1" id="1"/>
   </grids>
   <dates>
      <start_date>+1800-01-01T00:00:00.000</start_date>
      <end_date>+2100-01-01T00:00:00.000</end_date>
      <calendar>proleptic-gregorian</calendar>
   </dates>
   <timestep_unit>ISO_format</timestep_unit>
   <couples>
      <couple>
         <component1 component_id="1"/>
         <component2 component_id="2"/>
         <transient_couple transient_id="1">
            <source component_ref="1" transient_grid_ref="1"/>
            <target transient_grid_ref="1"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="bernstein_bezier"/>
               <interpolation method="n-nearest_neighbor" n="4" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="2">
            <source component_ref="1" transient_grid_ref="2"/>
            <target transient_grid_ref="2"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="bernstein_bezier"/>
               <interpolation method="n-nearest_neighbor" n="4" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="3">
            <source component_ref="1" transient_grid_ref="3"/>
            <target transient_grid_ref="3"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation enforced_conservation="false" method="conservative" normalisation="FRACAREA" order="1" partial_coverage="true"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="4">
            <source component_ref="1" transient_grid_ref="4"/>
            <target transient_grid_ref="4"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation enforced_conservation="false" method="conservative" normalisation="FRACAREA" order="1" partial_coverage="true"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="5">
            <source component_ref="1" transient_grid_ref="5"/>
            <target transient_grid_ref="5"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation enforced_conservation="false" method="conservative" normalisation="FRACAREA" order="1" partial_coverage="true"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="6">
            <source component_ref="2" transient_grid_ref="6"/>
            <target transient_grid_ref="6"/>
            <timestep>
               <source>${oceTimeStep}</source>
               <target>${atmTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${oce_lag}</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation enforced_conservation="false" method="conservative" normalisation="FRACAREA" order="1" partial_coverage="true"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="7">
            <source component_ref="2" transient_grid_ref="7"/>
            <target transient_grid_ref="7"/>
            <timestep>
               <source>${oceTimeStep}</source>
               <target>${atmTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${oce_lag}</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation enforced_conservation="false" method="conservative" normalisation="FRACAREA" order="1" partial_coverage="true"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="8">
            <source component_ref="2" transient_grid_ref="8"/>
            <target transient_grid_ref="8"/>
            <timestep>
               <source>${oceTimeStep}</source>
               <target>${atmTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${oce_lag}</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation enforced_conservation="false" method="conservative" normalisation="FRACAREA" order="1" partial_coverage="true"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="9">
            <source component_ref="2" transient_grid_ref="9"/>
            <target transient_grid_ref="9"/>
            <timestep>
               <source>${oceTimeStep}</source>
               <target>${atmTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${oce_lag}</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation enforced_conservation="false" method="conservative" normalisation="FRACAREA" order="1" partial_coverage="true"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="10">
            <source component_ref="1" transient_grid_ref="10"/>
            <target transient_grid_ref="10"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="bernstein_bezier"/>
               <interpolation method="n-nearest_neighbor" n="4" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.9"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="11">
            <source component_ref="1" transient_grid_ref="11"/>
            <target transient_grid_ref="11"/>
            <timestep>
               <source>${atmTimeStep}</source>
               <target>${oceTimeStep}</target>
               <coupling_period operation="average">${couplingTimeStep}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>${oce_lag}</target_timelag>
            </timestep>
            <mapping_on_source>true</mapping_on_source>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="source_to_target_map"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="$runoffweightfile">true</enforce_write_weight_file>
         </transient_couple>
      </couple>
   </couples>
   <created date="16-04-2019 15:49" tool="YAC-CouplingGUI v.1.5"/>
</coupling>
EOF


# xsd and xml files for yac
# -------------------------
#
add_required_file ${basedir}/run/coupling_${EXPNAME}.xml          ./coupling.xml
add_required_file ${basedir}/externals/yac/input/coupling.xsd.in  ./coupling.xsd

#-----------------------------------------------------------------------------
# II. ATMOSPHERE and LAND
#-----------------------------------------------------------------------------
#

# atmosphere namelist
# -------------------
cat > ${atm_namelist} << EOF
!
&coupling_mode_nml
  coupled_mode     = .TRUE.
/
&parallel_nml
 nproma            = ${nproma_atm}
 num_io_procs      = ${mpi_atm_io_procs}
 num_prefetch_proc = 0
 pio_type          = 0
/
&grid_nml
 dynamics_grid_filename = "${atmo_dyn_grid}"
/
&run_nml
 num_lev          = 47          ! number of full levels
 modelTimeStep    = "${atmTimeStep}" ! model time step in ISO-format
 ltestcase        = .FALSE.     ! run testcase
 ldynamics        = .TRUE.      ! dynamics
 ltransport       = .TRUE.      ! transport
 ntracer          = 3           ! number of tracers; 3: hus, clw, cli; 4: hus, clw, cli, o3
 iforcing         = 2           ! 0: none, 1: HS, 2: ECHAM, 3: NWP
 output           = 'nml'
 msg_level        = 12          ! level of details report during integration 
 restart_filename = "${EXPNAME}_restart_atm_<rsttime>.nc"
 activate_sync_timers = .TRUE.
 profiling_output = 1           ! aggregated: 1; detailed: 2; in files: 3
/
&extpar_nml
 itopo            = 1           ! 1: read topography from the grid file
 l_emiss          = .FALSE.
/
&initicon_nml
 init_mode        = 2           ! 2: initialize from IFS analysis
 ifs2icon_filename= "ifs2icon.nc"
/
&nonhydrostatic_nml
 ndyn_substeps    = $atm_substeps ! dtime/dt_dyn
 damp_height      = 50000.      ! [m]
 rayleigh_coeff   = 0.1000      ! set to 0.1001 for rerun with little change
 vwind_offctr     = 0.2
 divdamp_fac      = 0.004
/
&interpol_nml
 rbf_scale_mode_ll = 1
/
&sleve_nml
 min_lay_thckn    = 40.         ! [m]
 top_height       = 83000.      ! [m]
 stretch_fac      = 0.9
 decay_scale_1    = 4000.       ! [m]
 decay_scale_2    = 2500.       ! [m]
 decay_exp        = 1.2
 flat_height      = 16000.      ! [m]
/
&diffusion_nml
/
&transport_nml
!                   hus,clw,cli, o3
 ivadv_tracer     =   3,  3,  3,  3
 itype_hlimit     =   3,  4,  4,  3
 itype_vlimit     =   1,  3,  3,  1     !  positive definite vertical flux limiter for cli, clw
 ihadv_tracer     =  52,  2,  2, 52
/
&echam_phy_nml
!
! domain 1
! --------
!
! atmospheric phyiscs (""=never)
 echam_phy_config(1)%dt_rad = "${radTimeStep}"
 echam_phy_config(1)%dt_vdf = "${atmTimeStep}"
 echam_phy_config(1)%dt_cnv = "${atmTimeStep}"
 echam_phy_config(1)%dt_cld = "${atmTimeStep}"
 echam_phy_config(1)%dt_gwd = "${atmTimeStep}"
 echam_phy_config(1)%dt_sso = "${atmTimeStep}"
!
! atmospheric chemistry (""=never)
 echam_phy_config(1)%dt_mox = "${atmTimeStep}"
 echam_phy_config(1)%dt_car = ""
 echam_phy_config(1)%dt_art = ""
!
! surface (.TRUE. or .FALSE.)
 echam_phy_config(1)%ljsb   = ${ljsbach}
 echam_phy_config(1)%lamip  = .FALSE.
 echam_phy_config(1)%lice   = .TRUE.
 echam_phy_config(1)%lmlo   = .FALSE.
 echam_phy_config(1)%llake  = ${llake}
!
! fix negative humidity (default=0, no correction)
! echam_phy_config(1)%iqneg_d2p = 0
! echam_phy_config(1)%iqneg_p2d = 0
/
&echam_rad_nml
!
! domain 1
! --------
!
 echam_rad_config(1)%isolrad    =  6
 echam_rad_config(1)%irad_h2o   =  1
 echam_rad_config(1)%irad_co2   =  2
 echam_rad_config(1)%irad_ch4   =  2
 echam_rad_config(1)%irad_n2o   =  2
 echam_rad_config(1)%irad_o3    =  2          ! constant annual cycle climatology
 echam_rad_config(1)%irad_o2    =  2
 echam_rad_config(1)%irad_cfc11 =  0
 echam_rad_config(1)%irad_cfc12 =  0
 echam_rad_config(1)%irad_aero  =  0
 echam_rad_config(1)%vmr_co2    = 284.317e-6  ! constant volume mixing ration
 echam_rad_config(1)%vmr_ch4    = 808.249e-9  ! constant volume mixing ration
 echam_rad_config(1)%vmr_n2o    = 273.021e-9  ! constant volume mixing ration
 echam_rad_config(1)%lyr_perp   =  .TRUE.
 echam_rad_config(1)%yr_perp    =  1850
/
&echam_gwd_nml
/
&echam_sso_nml
 !echam_sso_config(1)%gkdrag     = 0.02      ! default: 0.05
 !echam_sso_config(1)%gkwake     = 0.05      ! default: 0.05
/
&echam_vdf_nml
 echam_vdf_config(1)%pr0        = 0.8       ! neutral limit Prandtl no - default:  1.0
/
&echam_cnv_nml
 !echam_cnv_config(1)%entrpen    = 0.0003    ! default: 0.0003    (old default:  0.0002)
 !echam_cnv_config(1)%cmfctop    = 0.1       ! default: 0.1       (old default:  0.2)
 !echam_cnv_config(1)%entrscv    = 0.0003    ! default: 0.0003    (old default:  0.003)
/
&echam_cld_nml
 !echam_cld_config(1)%csecfrl    = 1.0e-5    ! threshold for ice and water in clouds, default 5.e-6
 !echam_cld_config(1)%ccraut     = 2.0       ! default: 2.0      (default was 15.0)
 !echam_cld_config(1)%ccsaut     = 2.0       ! default: 2.0      (default was 95.0)
 !echam_cld_config(1)%cauloc     = 1.0       ! default: 1.0      (default was 10.0)
/
&echam_cov_nml
 !echam_cov_config(1)%crs        = 0.968     ! Critical relative humidity at surface, default 0.968
 !echam_cov_config(1)%crt        = 0.80      ! Critical relative humidity at toa, default 0.8
/
&sea_ice_nml
 ! albs                           =   0.80    ! Albedo of snow (not melting)              !  def: 0.85
 ! albsm                          =   0.65    ! Albedo of snow (melting)                  !  def: 0.70
 ! albi                           =   0.70    ! Albedo of ice (not melting)               !  def: 0.75
 ! albim                          =   0.65    ! Albedo of ice (melting)                   !  def: 0.70
/
EOF

# jsbach namelist
# ---------------

cat > ${lnd_namelist} << EOF
&jsb_model_nml
  usecase              = "${jsbach_usecase}"
  use_lakes            = ${llake}
  fract_filename       = "bc_land_frac.nc"
  output_tiles         = ${output_tiles}     ! List of tiles to output
/
&jsb_seb_nml
  bc_filename          = 'bc_land_phys.nc'
  ic_filename          = 'ic_land_soil.nc'
/
&jsb_rad_nml
  use_alb_veg_simple   = .FALSE.          ! Use TRUE for jsbach_lite, FALSE for jsbach_pfts
  bc_filename          = 'bc_land_phys.nc'
  ic_filename          = 'ic_land_soil.nc'
/
&jsb_turb_nml
  bc_filename          = 'bc_land_phys.nc'
  ic_filename          = 'ic_land_soil.nc'
/
&jsb_sse_nml
  l_heat_cap_map       = .FALSE.
  l_heat_cond_map      = .FALSE.
  l_heat_cap_dyn       = .FALSE.
  l_heat_cond_dyn      = .FALSE.
  l_snow               = .TRUE.
  l_dynsnow            = .TRUE.
  l_freeze             = .TRUE.
  l_supercool          = .TRUE.
  bc_filename          = 'bc_land_soil.nc'
  ic_filename          = 'ic_land_soil.nc'
/
&jsb_hydro_nml
  l_organic            = .FALSE.
  bc_filename          = 'bc_land_soil.nc'
  ic_filename          = 'ic_land_soil.nc'
  bc_sso_filename      = 'bc_land_sso.nc'
/
&jsb_assimi_nml
  active               = .TRUE.              ! Use FALSE for jsbach_lite, TRUE for jsbach_pfts
/
&jsb_pheno_nml
  scheme               = 'logrop'            ! scheme = climatology for jsbach_lite / scheme = logrop for jsbach_pfts
  bc_filename          = 'bc_land_phys.nc'
  ic_filename          = 'ic_land_soil.nc'
/
&jsb_carbon_nml
  active               = ${lcarbon}
  bc_filename          = 'bc_land_carbon.nc'
  ic_filename          = 'ic_land_carbon.nc'
  read_cpools          = .FALSE.
/
&jsb_fuel_nml
  active               = ${lcarbon}
  fuel_algorithm       = 1
/
&jsb_disturb_nml
  active               = .FALSE.
  ic_filename          = 'ic_land_soil.nc'
  bc_filename          = 'bc_land_phys.nc'
  fire_algorithm       = 1
  windbreak_algorithm  = 1
  lburn_pasture        = .FALSE.
/
&jsb_hd_nml
  active               = .TRUE.
  routing_scheme       = 'full'          ! 'zero' no HD, runoff=0; 'full' incl. full HD model; 'weighted_to_coast'
  bc_filename          = 'bc_land_hd.nc'
  diag_water_budget    = .TRUE.
  debug_hd             = .FALSE.
  enforce_water_budget = .FALSE.         ! TRUE: stop in case of water conservation problem
/
EOF

#--------------------------------------------------------------------------------------------------

# Define the atmosphere and land input
# ------------------------------------

# model files
#
add_link_file ${basedir}/data/lsdata.nc                                 ./
add_link_file ${basedir}/data/ECHAM6_CldOptProps.nc                     ./

# namelist files
# --------------
add_required_file ${basedir}/run/${atm_namelist}                        ./
add_required_file ${basedir}/run/${lnd_namelist}                        ./

# dictionary file for output variable names
#
dict_file="dict.${EXPNAME}"
cat dict.iconam.mpim  > ${dict_file}
add_required_file ${basedir}/run/${dict_file}                           ./

# initial conditions
#
# - atmosphere: ECMWF analysis, 1979-01-01T00:00:00Z
datadir=${atmo_data_InputFolder}/initial_condition/r0002
add_link_file ${datadir}/ifs2icon_1979010100_${atmos_refinement}_G.nc   ./ifs2icon.nc
#
# - land: source?, date+time? - not yet set to 1850!
datadir=${atmo_data_InputFolder}/land/r0003
add_link_file ${datadir}/ic_land_soil_1992.nc                           ./ic_land_soil.nc

# boundary conditions
#
# - ozone
# -- for irad_o3=8
#
datadir=${atmo_data_InputFolder}/ozone/r0002
#
add_link_file ${datadir}/bc_ozone_picontrol.nc                          ./bc_ozone.nc
#
# - sst and sic
#
datadir=${atmo_data_InputFolder}/sst_and_seaice/r0002
#
add_link_file ${datadir}/bc_sic_1979_2016.nc                            ./bc_sic.nc
add_link_file ${datadir}/bc_sst_1979_2016.nc                            ./bc_sst.nc
#
# - ssi and tsi
#
datadir=${icon_data_poolFolder}/independent/solar_radiation/3.2
#
add_link_file ${datadir}/swflux_14band_cmip6_1850-2299-v3.2.nc          ./bc_solar_irradiance_sw_b14.nc
#
# - land parameters
#
datadir=${atmo_data_InputFolder}/land/r0003
#
#  - not yet set to 1850!
add_link_file ${datadir}/bc_land_frac_${pft_file_tag}1992.nc            ./bc_land_frac.nc
add_link_file ${datadir}/bc_land_phys_1992.nc                           ./bc_land_phys.nc
add_link_file ${datadir}/bc_land_soil_1992.nc                           ./bc_land_soil.nc
add_link_file ${datadir}/bc_land_sso_1992.nc                            ./bc_land_sso.nc
#
# - HD model input by Tom Riddick 
#
#  prelinminary test version
datadir=/work/mh0287/users/stephan/Icon/Coupled/Ruby-coupling/New-r2b5-b7
add_link_file $datadir/hdpara_icon_r2b5_${atmos_gridID}_32.nc           ./bc_land_hd.nc
#
# - lctlib file for JSBACH
#
add_link_file ${basedir}/externals/jsbach/data/lctlib_nlct21.def        ./lctlib_nlct21.def
#
# - HD mask for interpolation of runoff
#
add_required_file ${atmo_grid_folder}/${atmo_dyn_grid}                  ./hd_mask.nc
#
# - the atmosphere grid itself (the grid copy section below from $HGRIDDIR is ignored)
#
add_required_file ${atmo_grid_folder}/${atmo_dyn_grid}                  ./
#
#--------------------------------------------------------------------------------------------------

# (5) Define the output
# ---------------------

# Parameters for all output files
# -------------------------------
cat >> ${atm_namelist} << EOF
&io_nml
  output_nml_dict  = "${dict_file}"
  netcdf_dict      = "${dict_file}"
  itype_pres_msl   = 4
  restart_file_type= 5
! restart_write_mode = "joint procs multifile"  ! not necessary/useful in default r2b4 setup
! lnetcdf_flt64_output = .TRUE.   ! 64 bit output in all files
  lkeep_in_sync = .TRUE.          ! sync after each timestep
! lkeep_in_sync = .FALSE.
/
&dbg_index_nml
  idbg_mxmn        = 0                        ! initialize MIN/MAX  debug output
  idbg_val         = 0                        ! initialize one cell debug output
  idbg_slev        = 1                        ! initialize start level for debug output
  idbg_elev        = 2                        ! initialize end level for debug output
  dbg_lat_in       =  30.0                    ! latitude location of one cell debug output
  dbg_lon_in       = -30.0                    ! longitude location of one cell debug output
  str_mod_tst      ='InterFaceOce'            ! define modules to print out in debug mode
/
EOF

# Define output files
# -------------------
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>
#
# 3-dimensional files include 'ps' and 'pfull' to allow the vertical
# interpolation to pressure levels by cdo ap2pl.
#
if [[ "$output_atm_cgrid" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_cgrid"
 filename_format  = "<output_filename>_<levtype_l>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"           ! output_start = output_end
 output_end       = "${start_date}"           ! --> write once only irrespective of
 output_interval  = "${atm_output_interval}"  !     the output interval and
 file_interval    = "${atm_file_interval}"    !     the file interval
 ml_varlist       = 'clon', 'clat', 'areacella', 'zghalf', 'zg'
/
EOF
fi

# output atmospheric monitoring
if [[ "$output_atm_mon" == "yes" ]]; then
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_mon"
 filename_format  = "<output_filename>_<datetime2>"
 filetype         = 5                                ! output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
 remap            = 0
 mode             = 1                                ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
 operation        = 'mean'                           ! mean over output interval
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'tas_gmean','rsdt_gmean','rsut_gmean','rlut_gmean','radtop_gmean',
                    'prec_gmean','evap_gmean','fwfoce_gmean'
/
EOF
fi

# interface debug output
if [[ "$output_atm_dbg" == "yes" ]]; then
  cat >> ${atm_namelist} <<EOF
&output_nml 
 filetype         = 5                                ! output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
 output_filename  = "${EXPNAME}_atm_dbg"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 operation        = 'mean'
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'orog'    , 'ps'      ,
                    'frac_wtr', 'frac_ice', 'frac_lnd', 'alake', 'lake_ice_frc',
                    'hs_icecl', 'ts_icecl', 'qtop_icecl','qbot_icecl',
                    'sic'     , 'sit'     , 'sic_icecl', 'sit_icecl',
                    'clt'     , 'psl'     , 'tas'     , 'ts'      ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'prlr'    , 'prls'    , 'prcr'    , 'prcs'    ,
                    'tauu'    , 'tauv'    , 'albedo'  ,
                    'albedo_wtr', 'albedo_ice', 'albedo_lnd',
                    'albvisdir','albvisdif' , 'albnirdir' , 'albnirdif',
                    'albvisdir_ice', 'albvisdir_wtr', 'albvisdir_lnd',
                    'rvds_dir','rvds_dif','rnds_dir','rnds_dif','rvus','rnus',
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'hfls_wtr', 'hfls_ice', 'hfls_lnd',
                    'hfss_wtr', 'hfss_ice', 'hfss_lnd',
                    'rsns_wtr', 'rsns_ice', 'rsns_lnd',
                    'rlns_wtr', 'rlns_ice', 'rlns_lnd', 
                    'rsut'    , 'rsutcs'  , 'rlut'    , 'rlutcs',
                    'rsds'    , 'rsdscs'  , 'rlds'    , 'rldscs',
                    'rsus'    , 'rsuscs'  , 'rlus'    , 'rsdt'  ,
                    'evspsbl_wtr', 'evspsbl_ice', 'evspsbl_lnd',
                    'ts_wtr'  , 'ts_ice'  , 'ts_lnd'  ,
                    'tauu_wtr', 'tauu_ice', 'tauu_lnd',
                    'tauv_wtr', 'tauv_ice', 'tauv_lnd',
                    'sfcwind' , 'uas'     , 'vas'
/
EOF
fi
#
# Standard AMIP output...
#
#
if [[ "$output_atm_3d" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'zg'      ,
                    'ps'      , 'pfull'   ,
                    'rho'     , 'ta'      ,
                    'ua'      , 'va'      , 'wap'     ,
                    'hus'     , 'clw'     , 'cli'     ,
                    'hur'     , 'cl'      ,
!                    'qo3_phy' ,
/
EOF
fi


if [[ "$output_atm_2d" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'orog'    ,
                    'ps'      , 'psl'     ,
                    'cosmu0'  ,
                    'rsdt'    ,
                    'rsut'    , 'rsutcs'  , 'rlut'    , 'rlutcs'  ,
                    'rsds'    , 'rsdscs'  , 'rlds'    , 'rldscs'  ,
                    'rsus'    , 'rsuscs'  , 'rlus'    ,
                    'ts'      ,
                    'sic'     , 'sit'     ,
                    'albedo'  ,
                    'clt'     ,
                    'prlr'    , 'prls'    , 'prcr'    , 'prcs'    ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'tauu'    , 'tauv'    ,
                    'tauu_sso', 'tauv_sso', 'diss_sso',
                    'sfcwind' , 'uas'     , 'vas'     ,
                    'tas'     , 'dew2'    ,
                    'ptp'
/
EOF
fi


if [[ "$output_phy_3d" == "yes" ]]; then
  #
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_phy_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${atm_output_interval}"
 file_interval    = "${atm_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'           , 'pfull'        ,
                    'tend_ta'      , 'tend_ta_dyn'  , 'tend_ta_phy'  ,
                    'tend_ta_vdf'  , 'tend_ta_gwd'  , 'tend_ta_sso'  ,
                    'tend_ta_cnv'  , 'tend_ta_cld'  , 
                    'tend_ua'      , 'tend_ua_dyn'  , 'tend_ua_phy'  ,
                    'tend_ua_vdf'  , 'tend_ua_gwd'  , 'tend_ua_sso'  ,
                    'tend_ua_cnv'  ,
                    'tend_va'      , 'tend_va_dyn'  , 'tend_va_phy'  ,
                    'tend_va_vdf'  , 'tend_va_gwd'  , 'tend_va_sso'  ,
                    'tend_va_cnv'  ,
                    'tend_qhus'    , 'tend_qhus_dyn', 'tend_qhus_phy',
                    'tend_qhus_cld', 'tend_qhus_cnv', 'tend_qhus_vdf'
/
EOF
fi

if [[ "$output_lnd_dbg" == "yes" ]]; then
  cat >> ${atm_namelist} << EOF
&output_nml
 filetype         = 5                                ! output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
 output_filename  = "${EXPNAME}_lnd_dbg"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 operation        = 'mean'
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${lnd_output_interval}"
 file_interval    = "${lnd_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'fract_box',
                    'seb_t_box'                   , 'seb_qsat_star_box'      ,
                    'rad_alb_vis_box'             , 'rad_alb_nir_box'        ,
                    'rad_rad_srf_net_box'         , 'rad_lw_srf_net_box'     , 'rad_sw_srf_net_box',
                    'seb_latent_hflx_box'         , 'seb_sensible_hflx_box'  , 'pheno_lai_box'     ,
                    'hydro_evapotrans_box'        , 'hydro_w_soil_column_box',
                    'hydro_runoff_box'            , 'hydro_drainage_box'     ,
                    'hydro_discharge_ocean_box'   , 'hydro_discharge_box'    ,
/
EOF
fi

if [[ "$output_lnd_msk" == "yes" ]]; then
  cat >> ${atm_namelist} << EOF
&output_nml
 filetype         = 5                                ! output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
 output_filename  = "${EXPNAME}_lnd_msk"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 !operation        = 'mean'
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${lnd_output_interval}"
 file_interval    = "${lnd_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'group:jsb_tile_fractions'                        
/
EOF
fi

# minimal jsbach output for running atm_amip experiment
# for more jsbach output see exp.atm_amip_les
#
if [[ "$output_lnd_amip" == "yes" ]]; then
  cat >> ${atm_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_lnd"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${lnd_output_interval}"
 file_interval    = "${lnd_file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'pheno_lai_box'         , 'pheno_fract_fpc_veg'         , 'hydro_fract_water_box' ,
                    'hydro_fract_snow_box'  , 'hydro_w_skin_box'            , 'hydro_w_snow_box'      ,
                    'hydro_w_soil_column_box'
/
EOF
fi

#-----------------------------------------------------------------------------
# III. OCEAN and SEA-ICE (and HAMOCC) 
#-----------------------------------------------------------------------------

ocean_vertical_levels=64
#ocean_grid="icon_grid_${ocean_gridID}_${ocean_refinement}_O.nc"    #  no land points
ocean_grid="icon_grid_${ocean_gridID}_${ocean_refinement}_G.nc"    #  global ocean mask - wrong name, is without land!
ocean_data_InputFolder="${icon_data_poolFolder}/${ocean_gridID}"
ocean_grid_folder="$ocean_data_InputFolder"
#ocean_grid_folder="/pool/data/ICON/grids/public/mpim/${ocean_gridID}"

#-----------------------------------------------------------------------------
#
# ocean namelist
# --------------

cat > ${oce_namelist} << EOF
!
&coupling_mode_nml
  coupled_mode               = .TRUE.
/
&parallel_nml
 nproma                      = ${nproma_oce}
 num_io_procs                = ${mpi_oce_io_procs}
 num_prefetch_proc           = 0
 pio_type                    = 0
 p_test_run                  = .FALSE.
 l_fast_sum                  = .TRUE.
/
&grid_nml
 dynamics_grid_filename      = "${ocean_grid}"
 use_dummy_cell_closure      = .TRUE.
 use_duplicated_connectivity = .FALSE.
/
&dynamics_nml
 iequations                  = -1                               ! -1: hydrost. ocean model
/
&run_nml
 modelTimeStep               = "${oceTimeStep}"
 output                      = 'nml'                            ! namelist controlled output scheme
 activate_sync_timers        = .TRUE.
 profiling_output            = 1                                ! aggregated: 1; detailed: 2; in files: 3
 msg_timestamp               = .FALSE.
 timers_level                = 10
 debug_check_level           = 1
 restart_filename            = "${EXPNAME}_restart_oce_<rsttime>.nc"
/
EOF
# output of fixed geometry - at start of integration only
cat >> ${oce_namelist} << EOF
 &output_nml
  filetype         =  5                               ! output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
  output_filename  = "${EXPNAME}_oce_fx"
  filename_format  = "<output_filename>_<datetime2>"
  output_start     = "${fx_date}"                     ! start date in ISO-format
  output_end       = "${fx_date}"                     ! end date in ISO-format
  output_interval  = "${oce_output_interval}"         ! interval in ISO-format
  file_interval    = "${oce_file_interval}"           ! interval in ISO-format
  output_grid      = .TRUE.
  mode             =  2                               ! 1: forecast mode (relative t-axis); 2: climate mode
  include_last     = .false.
  ml_varlist       =  'wet_c','basin_c','regio_c','lsm_ctr_c'
/
EOF
#
if [[ "$output_oce_def" == "yes" ]]; then
   #
   cat >> ${oce_namelist} << EOF
&output_nml
  filetype                   = 5
  output_filename            = "${EXPNAME}_oce_def"
  filename_format            = "<output_filename>_<datetime2>"
  output_start               = "${start_date}"                  ! start in ISO-format
  output_end                 = "${end_date}"                    ! end in ISO-format
  output_interval            = "${oce_output_interval_def}"     ! interval in ISO-format
  file_interval              = "${oce_file_interval}"
  mode                       = 1                                ! 1: forecast mode (relative t-axis)
                                                                ! 2: climate mode (absolute t-axis)
  include_last               = .FALSE.
  output_grid                = .FALSE.
  filename_format            = "<output_filename>_<datetime2>"
  operation                  = "mean"
  ml_varlist                 = 'group:oce_default', 'group:oce_essentials'
/
EOF
fi

if [[ "$output_oce_ice" == "yes" ]]; then
  cat >> ${oce_namelist} <<EOF

&output_nml
  output_start     = "${start_date}"                  ! start date in ISO-format
  output_end       = "${end_date}"                    ! end date in ISO-format
  output_interval  = "${oce_output_interval}"         ! interval in ISO-format
  file_interval    = "${oce_file_interval}"           ! interval in ISO-format
  mode             =  1                               ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
  operation        = 'mean'                           ! mean over output interval
  output_grid      = .TRUE.
  output_filename  = "${EXPNAME}_oce_ice"
  filename_format  = "<output_filename>_<datetime2>"
  filetype         =  5                               ! output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
  m_levels         = "1...28"                         ! upper 500m
  ml_varlist       =  'mld','condep','draftave','hi','hs','conc','to','so'
/
EOF
fi

if [[ "$output_oce_mon" == "yes" ]]; then
   #
   cat >> ${oce_namelist} << EOF
&output_nml
  filetype                   = 4
  output_filename            = "${EXPNAME}_oce_mon"
  filename_format            = "<output_filename>_<datetime2>"
  output_start               = "${start_date}"                  ! start in ISO-format
  output_end                 = "${end_date}"                    ! end in ISO-format
  output_interval            = "${oce_output_interval}"
  file_interval              = "${oce_file_interval}"
  mode                       = 1                                ! 1: forecast mode (relative t-axis)
                                                                ! 2: climate mode (absolute t-axis)
  include_last               = .FALSE.
  output_grid                = .FALSE.
  filename_format            = "<output_filename>_<datetime2>"
  operation                  = "mean"
  ml_varlist                 = 'group:ocean_monitor'
/
EOF
fi
#
if [[ "$output_oce_moc" == "yes" ]]; then
   #
   cat >> ${oce_namelist} << EOF
&output_nml
  filetype                   = 5
  output_filename            = "${EXPNAME}_oce_moc"
  filename_format            = "<output_filename>_<datetime2>"
  output_start               = "${start_date}"                  ! start in ISO-format
  output_end                 = "${end_date}"                    ! end in ISO-format
  output_interval            = "${oce_output_interval}"
  file_interval              = "${oce_file_interval}"
  mode                       = 1                                ! 1: forecast mode (relative t-axis)
                                                                ! 2: climate mode (absolute t-axis)
  include_last               = .FALSE.
  output_grid                = .FALSE.
  filename_format            = "<output_filename>_<datetime2>"
  operation                  = "mean"
  ml_varlist                 = 'group:ocean_moc'
/
EOF
fi

if [[ "$output_oce_dbg" == "yes" ]]; then
  cat >> ${oce_namelist} <<EOF

&output_nml
  filetype         =  5                               ! output format: 2=GRIB2, 4=NETCDFv2, 5=NETCDFv4
  output_filename  = "${EXPNAME}_oce_dbg"
  filename_format  = "<output_filename>_<datetime2>"
  output_start     = "${start_date}"                  ! start date in ISO-format
  output_end       = "${end_date}"                    ! end date in ISO-format
  output_interval  = "${oce_output_interval}"         ! interval in ISO-format
  file_interval    = "${oce_file_interval}"           ! interval in ISO-format
  output_grid      = .TRUE.
  mode             =  1                               ! 1: forecast mode (relative t-axis); 2: climate mode
  operation        = 'mean'                           ! mean over output interval
  include_last     = .false.
  m_levels         = "1,2"                            ! surface and subsurface level only
  filename_format  = "<output_filename>_<datetime2>"
  ml_varlist       =  'Qtop', 'Qbot','Qbot_slow', 'zHeatOceI','heatOceI','heatOceW','draftave','zUnderIce',
                      'mld','condep','zos','u_vint','hi','hs','conc','to','so','u',
                      'HeatFlux_Total','atmos_fluxes_HeatFlux_ShortWave','atmos_fluxes_HeatFlux_LongWave',
                      'HeatFlux_ShortWave','HeatFlux_LongWave','HeatFlux_Sensible','HeatFlux_Latent',
                      'FrshFlux_Runoff','FrshFlux_Precipitation','FrshFlux_Evaporation','FrshFlux_SnowFall',
                      'FrshFlux_TotalOcean','FrshFlux_VolumeIce','totalsnowfall','Wind_Speed_10m'
/
EOF
fi

cat >> ${oce_namelist} << EOF
&dbg_index_nml
  idbg_mxmn                  = 0                                ! initialize MIN/MAX  debug output
  idbg_val                   = 0                                ! initialize one cell debug output
  idbg_slev                  = 1                                ! initialize start level for debug output
  idbg_elev                  = 2                                ! initialize end level for debug output
  dbg_lat_in                 = 30.0                             ! latitude location of one cell debug output
  dbg_lon_in                 = -30.0                            ! longitude location of one cell debug output
  str_mod_tst                ='oceanCouplng'                    ! define modules to print out in debug mode
  !str_mod_tst                = 'all'                            ! define modules to print out in debug mode
/
&ocean_dynamics_nml
 n_zlev         =   ${ocean_vertical_levels}
! 64 unevenly spaced levels, updated by Leonidas/Helmuth 201906
 dzlev_m(1:64)  =  12,  10,  10,  10,  10,  10,  10,  10,  10,  10, 
                   11,  12,  13,  14,  15,  16,  17,  18,  20,  22, 
                   24,  26,  28,  30,  32,  35,  38,  41,  45,  49, 
                   53,  58,  62,  66,  71,  75,  80,  85,  91,  97, 
                  104, 111, 118, 125, 132, 138, 145, 152, 160, 167, 
                  175, 182, 188, 195, 201, 208, 213, 219, 224, 230, 
                  235, 241, 250, 260
  l_edge_based                               = .FALSE.     ! edge- or cell-based mimetic discretization
! l_partial_cells                            = .FALSE.     ! partial bottom cells=TRUE: local varying bottom depth
  select_solver                              = 4           ! 1=gmres_oce_old; 2=ocean_restart_gmres, 3=mixed precisison restart 
                                                           ! 4=CG (default) 5=CGJ 6=BiCG 7=GMRES restart (legacy) 8=MINRES
  use_absolute_solver_tolerance              = .TRUE.
  solver_tolerance                           = 1.0E-10     ! 1e-10 in omip-YVF - this maybe further reduced
  select_lhs                                 = 2           ! 1=operator based (default) 2=matrix based
  l_lhs_direct                               = .TRUE.      ! .true.= use lhs implementation directly  .false.= matrix scanner (default) 
  solver_FirstGuess                          = 2           ! 0=start from zeros 1=last timestep smoothed 2=last timestep (default) 

  fast_performance_level                     = 200         ! performance level 12: for cell-based; 5: default
  use_continuity_correction                  = .TRUE.      ! height adjustment according to vertical velocity in dynamics
  cfl_check                                  = .FALSE.
  cfl_write                                  = .FALSE.

  i_bc_veloc_top                             = 1
  i_bc_veloc_bot                             = 1           ! 0: (def) bottom friction off, 1: on
/
&ocean_tracer_transport_nml
  flux_calculation_horz                      = 5           ! 1=upwind, 2=central, 3=Lax-Friedrichs,
                                                           ! 4=Miura, 5=FCT with Zalesak limiter (default)
  flux_calculation_vert                      = 7           ! 6=adpo; 7=upwind biased ppm (default); 8=FCT with zalesak limiter
  ! define low and high order methods to be used in
  ! horizontal flux corrected transport methods
  ! (flux_calculation_horz=4,5)
  fct_low_order_flux                         = 1           ! horizontal low  order method: 1=upwind (def), no other implemented
  fct_high_order_flux                        = 5           ! horizontal high order method: 1=upwind, 2=central, 3=lax_friedrichs, 4=miura_order1
  fct_limiter_horz                           = 100         ! zalesak
/
&ocean_horizontal_diffusion_nml
  laplacian_form                             = 1           ! 1=curlcurl-graddiv
  VelocityDiffusion_order                    = 2           ! 1=laplacian (def); 2=biharmonic; 21=biharmonic+laplacian (for the laplacian leith)
                                                           !
  BiharmonicViscosity_scaling                = 1
  BiharmonicViscosity_reference              = 5.0E11      ! enhanced value (old: 1e12, def: 0, r2b6: 3.5e12)
  BiharmonicViscosity_background             = 0.0         ! [m2/s] constant horizontal viscosity coefficient for velocity

  HarmonicViscosity_scaling                  = 1
  HarmonicViscosity_reference                = 0.0         ! [m2/s] constant horizontal viscosity coefficient for velocity
  HarmonicViscosity_background               = 0.0  

  TracerHorizontalDiffusion_scaling          = 1
  Temperature_HorizontalDiffusion_Background = 0.0
  Temperature_HorizontalDiffusion_Reference  = 0
  Salinity_HorizontalDiffusion_Background    = 0.0
  Salinity_HorizontalDiffusion_Reference     = 0
/
&ocean_vertical_diffusion_nml
  vert_mix_type                              = 2           ! 1: PP; 2: TKE
  PPscheme_type                              = 0           ! 4: current PPscheme - 0: switched off
  velocity_VerticalDiffusion_background      = 5.0E-5      ! [m2/s]  vertical background viscosity coefficient for velocity
  temperature_VerticalDiffusion_background   = 1.0E-5      ! [m2/s]  vertical background diffusion coefficient for temperature
  salinity_VerticalDiffusion_background      = 1.0E-5      ! [m2/s]  vertical background diffusion coefficient for salinity
  tracer_convection_MixingCoefficient        = 0.1         ! max vertical tracer diffusion for convection used in case of instability
  convection_InstabilityThreshold            = -1.0E-6     ! used in update_ho_params - default=-5e-8
  richardsonDiffusion_threshold              = 0.0         ! used in update_ho_params - default=+5e-8
  tracer_RichardsonCoeff                     = 2.0E-3      ! factor for vertical diffusion coefficient in PP scheme
  velocity_RichardsonCoeff                   = 2.0E-3      ! factor for vertical viscosity coefficient in PP scheme
  bottom_drag_coeff                          = 3.0E-3      ! default=2.5E-3; active for i_bc_veloc_bot=1
  use_wind_mixing                            = .TRUE.      ! TRUE: use wind mixing scheme in MPIOM-type pp-scheme
  lambda_wind                                = 0.03
  tracer_TopWindMixing                       = 2.31480E-6  ! eqals 0.5e-3 m2s-1 (MPIOM)
  velocity_TopWindMixing                     = 2.31480E-6
  ! cvmix/tke parameters
  c_k        = 0.1
  c_eps      = 0.7
  alpha_tke  = 30.0
  mxl_min    = 1.d-8
  kappaM_min = 0.0
  kappaM_max = 100.0
  cd         = 3.75
  tke_min    = 1.d-6
  tke_mxl_choice = 2                                                              
  tke_surf_min = 1.d-4
  only_tke = .true.                                                               
  use_ubound_dirichlet = .false.                                                  
  use_lbound_dirichlet = .false. 
/
&ocean_GentMcWilliamsRedi_nml
  GMRedi_configuration                       = 0           ! 0=cartesian diffusion; 1=GM-Redi: bolus advection + isopycnal diffusion
  tapering_scheme                            = 1
  GMRedi_usesRelativeMaxSlopes               = .FALSE.
  S_max                                      = 1.0e-3      ! 1.0
  S_d                                        = 1.0e-4      ! 5e-3 to 5e-4
                                                           !
  k_tracer_GM_kappa_parameter                = 1000.0      !
  k_tracer_isoneutral_parameter              = 1000.0      ! value for cell-based cartesian diffusion - mpiom: 1000/400km = 400/160km
  k_tracer_dianeutral_parameter              = 0.0         ! 1.0E-5  !
                                                           !
  switch_off_diagonal_vert_expl              = .TRUE.
  gmredi_combined_diagnostic                 = .FALSE.
! switch_on_redi_balance_diagnostic          = .FALSE.     ! not yet available in icon-aes-dyamond++
  revert_vertical_recon_and_transposed       = .TRUE.
  slope_calc_via_temperture_salinity         = .TRUE.
  include_slope_squared_implicit             = .TRUE.      ! think of l_with_vert_tracer_diffusion
  switch_on_tapering_horizontal_diffusion    = .TRUE.
/
&ocean_physics_nml
  i_sea_ice                                  = 1           ! 0 = no sea ice; 1 = sea ice model on; default=1
/                                           
&sea_ice_nml
  i_ice_therm                                = 1           ! 1=zero-layer (default), 2=Winton, 0/2: not allowed
  i_ice_dyn                                  = 1           ! 1/0=switch on/off AWI ice dynamics
! i_Qio_type                                 = 3           ! 3 (default): energy of whole grid-area used for melting (MPIOM-type)
  albedoW_sim                                = 0.10        ! albedo of the ocean used in sea ice model
  leadclose_1                                = 0.25        ! default: 0.5 - value of MPIOM: 0.25
  leadclose_2n                               = 0.666       ! default: 0.0 - value of MPIOM: 2/3
  !albs                                      = 0.80         ! Albedo of snow (not melting)              !  def: 0.85
  !albsm                                     = 0.65         ! Albedo of snow (melting)                  !  def: 0.70
  !albi                                      = 0.70         ! Albedo of ice (not melting)               !  def: 0.75
  !albim                                     = 0.65         ! Albedo of ice (melting)                   !  def: 0.70
  pstar                                      = 40000.      ! default: 27500.; MPIOM=20000.
/
&ocean_forcing_nml
  iforc_oce                                  = 14          ! ocean forcing: 14 from coupling via YAC
  type_surfRelax_Temp                        = -1          ! -1: use net surface heat flux from atmosphere
                                                           !  0: no relaxation used
                                                           !  1: relaxation switched on for reading (init_oce_relax=1)
                                                           !     or some testcases only
  forcing_enable_freshwater                  = .TRUE.      ! enable/disable freshwater flux
  forcing_windstress_u_type                  = 2           ! 0: zero wind stress, 1: read from file, 2: none
  forcing_windstress_v_type                  = 2           ! 0: zero wind stress, 1: read from file, 2: none
                                                           ! salt-change due to internal fluxes only
  limit_seaice                               = .TRUE.      ! default: TRUE
  seaice_limit                               = 0.8         ! hard limit set to 80% of upper layer for sea ice
  limit_elevation                            = .FALSE.     ! true: adjust daily to zero, default=false: free surface
  lswr_jerlov                                = .TRUE.      ! use jerlov water types for sw absorption (default=T)
  jerlov_atten                               = 0.08        ! jerlov water type IB
  jerlov_bluefrac                            = 0.36        ! jerlov water type IB
/
EOF
#
if [[ "$initialiseOcean" == "fromRestart" ]]; then
  #
  cat >> ${oce_namelist} << EOF
&ocean_initialConditions_nml
  initial_salinity_type                      = 0           ! 0: none, 1: read S from initial_state.nc
  initial_temperature_type                   = 0           ! 0: none, 1: read T from initial_state.nc
  initialize_fromRestart                     = .TRUE.
/
EOF
#
else
#
  if [[ "$initialiseOcean" == "fromClimatology" ]]; then
    cat >> ${oce_namelist} << EOF
&ocean_initialConditions_nml
  initial_salinity_type                      = 1           ! 0: none, 1: read S from initial_state.nc
  initial_temperature_type                   = 1           ! 0: none, 1: read T from initial_state.nc
  initialize_fromRestart                     = .FALSE.
/
EOF
  else
    cat >> ${oce_namelist} << EOF
&ocean_initialConditions_nml
  initial_salinity_type                      = 0           ! 0: none, 1: read S from initial_state.nc
  initial_temperature_type                   = 0           ! 0: none, 1: read T from initial_state.nc
  initialize_fromRestart                     = .FALSE.
/
EOF
  fi
fi
#
cat >> ${oce_namelist} << EOF
&ocean_diagnostics_nml
  diagnostics_level                          = 1
  diagnose_for_horizontalVelocity            = .FALSE.
/
&io_nml
  restart_file_type                          = 5
  write_last_restart                         = .TRUE.
! restart_write_mode                         = "joint procs multifile"  ! not yet available in ocean model
! lnetcdf_flt64_output = .TRUE.                            ! 64 bit output in all files
  lkeep_in_sync                              = .TRUE.      ! sync after each timestep
/
EOF

add_required_file ${basedir}/run/${oce_namelist} ./

#-----------------------------------------------------------------------------
#
# Ocean initialisation input
#
if [[ "$initialiseOcean" == "fromRestart" ]]; then
  # initialise atmosphere and use link to ocean restart:
  # R02B07: link to OMIP-spinup 20022-FAA by Helmuth
  add_link_file /work/mh0287/users/stephan/Icon/Coupled/Ruby-coupling/New-r2b5-b7/ocean_omip_long_r2b7_20022-FAA_restart_oce_20200101T000000Z.nc init-restart-oce.nc
  add_link_file init-restart-oce.nc restart_oce_DOM01.nc
fi
#
if [[ "$initialiseOcean" == "fromClimatology" ]]; then
  echo " no climatology yet"
  check_error 0
  exit
fi
# Ocean grid
#
add_required_file ${ocean_grid_folder}/${ocean_grid} ./
#
#-----------------------------------------------------------------------------

if [ $mpi_total_procs -lt `expr $mpi_oce_procs + 1` ] ; then
   echo "Too few mpi_total_procs for requested mpi_oce_procs."
   echo "-> check mpi_total_procs and mpi_oce_procs. Exiting."
   check_error 0
   exit
fi

#-----------------------------------------------------------------------------
