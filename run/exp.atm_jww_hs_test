#--------------------------------------------------------------------------------------------------
#
# Jablonowski Williamson baroclinic wave test
#
author_list="Marco Giorgetta, Hui Wan, Leonidas Linardakis, Monika Esch"
#
#--------------------------------------------------------------------------------------------------
#
# This file describes the baroclinic wave test of Jablonowski and Williamson for atmospheric
# dynamical cores using:
# - the hydrostatic dynamical core
#
# _bb_table_Description_  Jablonowski Williamson baroclinic wave test
# _bb_table_Model_        hydrostatic dynamics
#
#--------------------------------------------------------------------------------------------------

# (1) Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# nproma                        = blocking length for array dimensioning and inner loop lengths
# second, minute, hour, day     = length of these intervals in [s]

#--------------------------------------------------------------------------------------------------

# (2) Set variables needed by the scripting mechanism

# horizontal grid(s)
grids_folder=/pool/data/ICON/grids/private/r2b4_amip
atmo_dyn_grids='r2b4_amip.nc'

# vertical grid
nlev=47

# start and end date+time
start_date="2008-09-01T00:00:00Z"
  end_date="2008-09-01T01:00:00Z"

# restart interval
(( dt_checkpoint =  30 * minute))

# namelist files
atmo_namelist=NAMELIST_${EXPNAME}_atm

#--------------------------------------------------------------------------------------------------

# (3) Define the model configuration

# atmospheric dynamics
# --------------------
cat > ${atmo_namelist} << EOF
!
&parallel_nml
 nproma           = ${nproma}
 l_fast_sum       = .false.
/
&grid_nml
 dynamics_grid_filename = "${atmo_dyn_grids}",
/
&run_nml
 num_lev          = ${nlev},    ! number of full levels
 dtime            = 600         ! [s]
 ltestcase        = .TRUE.      ! run testcase
 ldynamics        = .TRUE.      ! dynamics
 ltransport       = .FALSE.     ! transport 
 ntracer          = 0           ! number of tracers
 iforcing         = 0           ! 0: none, 1: HS, 2: 2: ECHAM, 3: NWP
 output           = 'nml','totint'
 msg_level        = 10          ! detailed report during integration 
 restart_filename = "${EXPNAME}_restart_atm_<rsttime>.nc"
/
&ha_testcase_nml
 ctest_name       = 'JWw'       ! test case identifier
/
&dynamics_nml
 iequations       = 1           ! 1: ICOHAM dynamics with T as prognostic variable
/
EOF

#--------------------------------------------------------------------------------------------------

# (4) Define the input

# namelist files
#
add_required_file ${basedir}/run/${atmo_namelist}                       ./

# dictionary file for output variable names
#
dict_file="dict.${EXPNAME}"
rm -f ${dict_file}
add_required_file ${basedir}/run/${dict_file}                           ./

# vertical grid
#
add_required_file ${basedir}/vertical_coord_tables/atm_hyb_sp_${nlev}   ./

#--------------------------------------------------------------------------------------------------

# (5) Define the output

# Parameters for all output files
# -------------------------------
cat >> ${atmo_namelist} << EOF
&io_nml
 dt_checkpoint    = ${dt_checkpoint}  ! [s] restart file interval
 output_nml_dict  = "${dict_file}"
 netcdf_dict      = "${dict_file}"
 lzaxis_reference = .FALSE.
/
EOF


# Define output files
# -------------------
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>

output_dyn=yes
#
if [[ "$output_dyn" == "yes" ]]; then
  #
  cat dict.icoham.mpim >> ${dict_file}
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"                  ! ISO-format date+time
 output_end       = "${end_date}"                    ! ISO-format date+time
 output_interval  = "PT10M"                          ! ISO-format interval
 file_interval    = "PT10M"                          ! ISO-format interval
 include_last     = .FALSE.
 ml_varlist       = 'orog','ps','sd','svo','ta','ua','va','wap','pfull','gpfull'
/
EOF
fi

#--------------------------------------------------------------------------------------------------
