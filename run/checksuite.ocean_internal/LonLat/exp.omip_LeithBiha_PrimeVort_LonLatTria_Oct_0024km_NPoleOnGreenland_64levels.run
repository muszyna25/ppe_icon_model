#!/bin/bash
#=============================================================================
# btc batch job parameters
#-----------------------------------------------------------------------------
#SBATCH --account=mh0033
#SBATCH --job-name=exp.omip_LeithBiha_PrimeVort_LonLatTria_Oct_0024km_NPoleOnGreenland_64levels.run
#SBATCH --partition=compute
#SBATCH --workdir=/mnt/lustre01/work/mh0287/users/leonidas/icon/ocean_ll/intel_yMyO_hiopt/run
#SBATCH --nodes=128
#SBATCH --threads-per-core=2
#SBATCH --output=/work/mh0287/users/leonidas/icon/ocean_ll/intel_yMyO_hiopt/run/LOG.exp.omip_LeithBiha_PrimeVort_LonLatTria_Oct_0024km_NPoleOnGreenland_64levels.run.%j.o
#SBATCH --error=/work/mh0287/users/leonidas/icon/ocean_ll/intel_yMyO_hiopt/run/LOG.exp.omip_LeithBiha_PrimeVort_LonLatTria_Oct_0024km_NPoleOnGreenland_64levels.run.%j.o
#SBATCH --exclusive
#SBATCH --no-requeue
# #SBATCH --exclude=m11278,m11297,m11324,m11294,m11362,m11321,m10400,m10518,m10925,m11406,m10554,m10580,m11415,m10138,m10126,m10960
# #SBATCH --time=00:10:00
#=============================================================================
set -x
. ./add_run_routines
. ../config/set-up.info
#-----------------------------------------------------------------------------
# target parameters
# ----------------------------
site="dkrz.de"
target="bullx"
compiler="intel"
loadmodule=$use_load_modules
with_mpi="yes"
with_openmp="yes"
job_name="exp.omip_LeithBiha_PrimeVort_LonLatTria_Oct_0024km_NPoleOnGreenland_64levels.run"
submit="sbatch"
#-----------------------------------------------------------------------------
# openmp environment variables
# ----------------------------
export OMP_NUM_THREADS=6
export OMP_SCHEDULE=dynamic,1
export OMP_DYNAMIC="false"
export OMP_STACKSIZE=1024M
#-----------------------------------------------------------------------------
# MPI variables
# ----------------------------
mpi_root=$use_mpi_root
mpi_procs_pernode=4
no_of_nodes=${SLURM_JOB_NUM_NODES:-1}
((mpi_total_procs=no_of_nodes * mpi_procs_pernode))
START="srun --cpu-freq=2500000 --kill-on-bad-exit=1 --nodes=$no_of_nodes --cpu_bind=verbose,cores --distribution=block:block --ntasks=$mpi_total_procs --ntasks-per-node=${mpi_procs_pernode} --cpus-per-task=$((2 * OMP_NUM_THREADS)) --propagate=STACK --mpi=openmpi"
#-----------------------------------------------------------------------------
# load ../setting if exists  
if [ -a ../setting ]
then
  echo "Load Setting"
  . ../setting
fi
#-----------------------------------------------------------------------------
bindir="${basedir}/build/x86_64-unknown-linux-gnu/bin"   # binaries
BUILDDIR=build/x86_64-unknown-linux-gnu
#-----------------------------------------------------------------------------
#=============================================================================
# load modules
if [ "x$loadmodule" != "x" ] ; then
$use_load_profile
module purge
module load "$loadmodule"
module list
fi
#=============================================================================
nproma=16
cdo="cdo"
cdo_diff="cdo diffn"
icon_data_rootFolder="/mnt/lustre01/work/mh0287"
icon_data_poolFolder="/pool/data/ICON"
ocean_location="fluent"
export EXPNAME=omip_LeithBiha_PrimeVort_LonLatTria_Oct_0024km_NPoleOnGreenland_64levels
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
export LD_LIBRARY_PATH=$use_netcdflibpath:$LD_LIBRARY_PATH
export KMP_AFFINITY="verbose,granularity=core,compact,1,1"
export KMP_LIBRARY="turnaround"
export KMP_KMP_SETTINGS="1"
export OMP_WAIT_POLICY="active"
export I_MPI_FABRICS="shm:dapl"
export I_MPI_DAPL_UD="enable"
export I_MPI_DAPL_UD_PROVIDER="ofa-v2-mlx5_0-1u"
export DAPL_UCM_REP_TIME="8000"
export DAPL_UCM_RTU_TIME="4000"
export DAPL_UCM_CQ_SIZE="1000"
export DAPL_UCM_QP_SIZE="1000"
export DAPL_UCM_RETRY="10"
export DAPL_ACK_RETRY="10"
export DAPL_ACK_TIMER="20"
export DAPL_UCM_TX_BURST="100"
export DAPL_WR_MAX="500"
export MALLOC_TRIM_THRESHOLD_="-1"
export OMPI_MCA_coll_fca_enable=1
export OMPI_MCA_coll_fca_priority=95
ulimit -s 3145728
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# the namelist filename
ocean_namelist=NAMELIST_${EXPNAME}
#-----------------------------------------------------------------------------
start_date="2001-01-01T00:00:00Z"
  end_date="2801-01-01T00:00:00Z"  #  201 years to ensure write of restart at end
restart=".true."
exit
#-----------------------------------------------------------------------------
# model timing
(( dtime = 300 ))

#(( days_checkpoint = 90 ))
#(( dt_checkpoint  = days_checkpoint  * day ))
#(( months_checkpoint = 900 ))    # write restart file interval [days]
#(( dt_checkpoint  = months_checkpoint  * month ))
(( years_checkpoint = 1 ))    # write restart file interval [days]
(( dt_checkpoint  = years_checkpoint  * year ))

(( years_restart    = 4 ))    # stop model for restart [days]
(( dt_restart     = years_restart   * year ))
#(( months_restart =  12 ))    # stop model for restart [days]
#(( dt_restart     = months_restart   * month ))

output_interval="P10D"
(( timeSteps_per_outputStep = 30 * day / dtime ))
# (( timeSteps_per_outputStep = 2 * hour / dtime ))
steps_per_file=365

autoPostProcessing="false"
#-----------------------------------------------------------------------------
# global resolution
iforc=12
forcing_timescale=365  # length of OMIP/NCEP dataset: 1 = annual; 12 = monthly data; 365/else = daily data
init_relax=1
ocean_vertical_levels=64
ocean_grids="EarthOceanOnly_LonLatTria_Oct_0024km_NPoleOnGreenland_srtm30.nc"
#-----------------------------------------------------------------------------
#
# write namelist parameters
# -------------------------
cat > ${ocean_namelist} << EOF
!
&parallel_nml
 nproma         = $nproma
 p_test_run     = .false.
 l_fast_sum     = .true.
/
&grid_nml
 dynamics_grid_filename = "${ocean_grids}",
 use_dummy_cell_closure = .true.
 use_duplicated_connectivity = .false.
/
&dynamics_nml
 iequations           = -1           ! -1: hydrost. ocean model
/
&run_nml
 dtime                = $dtime ! model timestep in seconds
 output               = 'nml'        ! namelist controlled output scheme
 activate_sync_timers = .TRUE.
 profiling_output     = 3
 msg_timestamp        = .FALSE.
 timers_level         = 100
 debug_check_level    = 1
/
&output_nml
  filetype         =  4                       ! output format: 2=GRIB2, 4=NETCDFv2
  output_filename  = "${EXPNAME}"
  filename_format  = "<output_filename>_<datetime2>"
  output_start     = "${start_date}"
  output_end       = "${end_date}"
  output_interval  = "${output_interval}"
  steps_per_file   = $steps_per_file 
  mode             =  2                               ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
  include_last     = .false.
  output_grid      = .TRUE.
  ml_varlist       =  'u', 'v', 'w', 'h', 't', 's', 'edgeFlux_total_acc', 'HeatFlux_Total', 'hi_acc', 'mld', 'HarmonicViscosity_coeff'
    !, 'bc_top_u', 'bc_top_v'
  ! ml_varlist       =  't', 's', 'lsm_c'
/
!&output_nml
!  output_start     = "${start_date}"
!  output_end       = "${end_date}"
!  output_interval  = "${output_interval}"
!  steps_per_file   = 999999
!  output_grid      = .TRUE.
!  output_filename  = "${EXPNAME}_oceanMonitor"
!  filename_format  = "<output_filename>_<datetime2>"
!  ml_varlist       =  'group:ocean_monitor'
!/
&dbg_index_nml
  idbg_mxmn=1                     ! initialize MIN/MAX  debug output
  idbg_val =0                     ! initialize one cell debug output
  idbg_slev=1                     ! initialize start level for debug output
  idbg_elev=1                     ! initialize end level for debug output
  !dbg_lat_in=   30.0              ! latitude location of one cell debug output
  !dbg_lon_in=  -30.0              ! longitude location of one cell debug output
  str_mod_tst='all'               ! define modules to print out in debug mode
/
&ocean_dynamics_nml
 n_zlev             =   $ocean_vertical_levels
 dzlev_m(1:64)      =  12.0,   10.0,   10.0,   10.0,   10.0,   10.0,   10.0,   11.0,   11.0,   12.0,
                       13.0,   14.0,   15.0,   16.0,   17.0,   18.0,   20.0,   22.0,   24.0,   26.0,
                       29.0,   33.0,   36.0,   39.0,   42.0,   45.0,   48.0,   52.0,   56.0,   60.0,
                       64.0,   68.0,   72.0,   76.0,   80.0,   85.0,   90.0,   95.0,  100.0,  106.0,
                      112.0,  118.0,  124.0,  130.0,  138.0,  146.0,  154.0,  162.0,  170.0,  178.0,
                      186.0,  196.0,  206.0,  216.0,  226.0,  236.0,  246.0,  256.0,  266.0,  276.0,
                      286.0,  296.0,  306.0,  318.0
  l_edge_based                    = .FALSE.   ! edge- or cell-based mimetic discretization
! l_partial_cells                 = .FALSE.   ! partial bottom cells=true: local varying bottom depth
  select_solver                   =   2       ! 1=gmres_oce_old; 2=restart gmres, 3=mixed precisison restart
  use_absolute_solver_tolerance   = .true.
  solver_tolerance                = 7.5E-14
  solver_max_iter_per_restart     =  13
  solver_FirstGuess               = 1
  solver_tolerance_sp             =  1.0E-12 !
  solver_max_iter_per_restart_sp  =  26  !
  solver_max_restart_iterations   = 100       ! outer (restart solver)
  fast_performance_level          = 800       ! performance level 12: for cell-based; 5: default
  use_continuity_correction       = .TRUE.    ! height adjustment according to vertical velocity in dynamics
  cfl_check                       = .FALSE.
  cfl_write                       = .FALSE.
  
  i_bc_veloc_top                  = 4
  i_bc_veloc_bot                  = 1

  NonlinearCoriolis_type          = 201
  HorizonatlVelocity_VerticalAdvection_form = 3
!  KineticEnergy_type              = 200 default
/
&ocean_tracer_transport_nml
  tracer_HorizontalAdvection_type = 1 ! cell based=edge_based
  FLUX_CALCULATION_HORZ =  5 ! 5      ! 1=upwind, 2=central, 3=Lax-Friedrichs, 4=Miura, 5=FCT with Zalesak limiter (default)
  FLUX_CALCULATION_VERT =  7 ! 7      ! 6=adpo; 7=upwind biased ppm (default); 8=FCT with zalesak limiter
  ! define low and high order methods to be used in horizontal flux corrected transport methods (flux_calculation_horz=4,5)
  fct_low_order_flux    = 1      ! horizontal low  order method: 1=upwind (def), no other implemented
  fct_high_order_flux   = 5      ! horizontal high order method: 1=upwind, 2=central (def), 3=lax_friedrichs, 4=miura_order1
  fct_limiter_horz      = 100    ! zalesak
  threshold_min_T       = -4.0   ! to avoid abort
/

&ocean_horizontal_diffusion_nml
  laplacian_form = 1                   ! 1=curlcurl-graddiv
  VelocityDiffusion_order = 21         ! 1=biharmonic+laplacian (for the laplacian leith)

  HarmonicViscosity_scaling       =  6 !  zero HarmonicViscosity
  HarmonicViscosity_background    = 0
  HarmonicViscosity_reference     = 5.0E-13
  BiharmonicViscosity_scaling     =  6
  BiharmonicViscosity_reference   =  4.0E-2 !  [m2/s] constant horizontal viscosity coefficient for velocity
  BiharmonicViscosity_background  =  1.0E4  ! [m2/s] constant horizontal viscosity coefficient for velocity

  LeithClosure_form               = 4 ! 4
  LeithClosure_order              = 1 ! laplacian
  LeithHarmonicViscosity_background = 10.0
  LeithHarmonicViscosity_reference  = 2.0E-3
  LeithHarmonicViscosity_scaling    = 6

  TracerDiffusion_LeithWeight = 0.0
  TracerHorizontalDiffusion_scaling          = 3 ! 2
  Temperature_HorizontalDiffusion_Background = 5.0
  Temperature_HorizontalDiffusion_Reference  = 5.0E-8 ! 2.25E-3
  Salinity_HorizontalDiffusion_Background    = 5.0
  Salinity_HorizontalDiffusion_Reference     = 5.0E-8 ! 2.25E-3

  GMRedi_configuration = 0
/
&ocean_vertical_diffusion_nml
  PPscheme_type                            = 4
  velocity_VerticalDiffusion_background    =   1.5E-5  ! [m2/s]  vertical background viscosity coefficient for velocity
  Temperature_VerticalDiffusion_background =   1.5E-5  ! [m2/s]  vertical background diffusion coefficient for temperature
  Salinity_VerticalDiffusion_background    =   1.5E-5  ! [m2/s]  vertical background diffusion coefficient for salinity
  tracer_convection_MixingCoefficient =   0.1 ! max vertical tracer diffusion for convection used in case of instability
  convection_InstabilityThreshold =  -1.0E-6  ! used in update_ho_params - default=-5e-8
  RichardsonDiffusion_threshold   =   0.0     ! used in update_ho_params - default=+5e-8
  tracer_RichardsonCoeff          =   1.5E-3  ! factor for vertical diffusion coefficient in PP scheme
  velocity_RichardsonCoeff        =   1.5E-3  ! factor for vertical viscosity coefficient in PP scheme
  bottom_drag_coeff               =   2.0E-3  ! default=2.5E-3; active for i_bc_veloc_bot=1
  use_wind_mixing                 = .true.    ! true: use wind mixing scheme in MPIOM-type pp-scheme
  lambda_wind                     = 0.03
  tracer_TopWindMixing            = 2.0E-5
  velocity_TopWindMixing          = 2.0E-5
  Salinity_ConvectionRestrict     = 1.0
/
&ocean_physics_nml
  EOS_TYPE           = 2 ! 2
  i_sea_ice          =   1       ! 0 = no sea ice; 1 = sea ice model on; default=1
/                                           
&sea_ice_nml
  i_ice_therm                     =   1       ! 1=zero-layer (default), 2=Winton, 0/2: not allowed
!  use_no_flux_gradients           = .FALSE.
  i_ice_dyn                       =   1       ! 1/0=switch on/off AWI ice dynamics
/
&ocean_forcing_nml
  iforc_oce                       = ${iforc}            ! ocean forcing
  forcing_timescale               = $forcing_timescale  ! length of ocean forcing data set, see above
  init_oce_relax                  = $init_relax         ! read ocean surface relaxation file, see above
  type_surfRelax_Temp             =   0       ! 0: no relaxation used
                                              ! 1: relaxation switched on for reading (init_oce_relax=1) or some testcases only
  para_surfRelax_Temp             =   1.0     ! strength of 2-dim relaxation for temperature (months)
                                              ! this value is divided by number of seconds per month (=30*24*3600)
  type_surfRelax_Salt             =   1       ! 2-dim relaxation of salinity - see temperature relaxation for type values
  para_surfRelax_Salt             =   3.0     ! strength of 2-dim relaxation for salinity (months)
  forcing_windstress_u_type       =   1       ! read from file
  forcing_windstress_v_type       =   1       ! read from file
  forcing_fluxes_type             =   1       ! read from file
  forcing_smooth_steps            = 72000  ! full wind after 20 days
  forcing_windStress_weight      = 1.00
!  forcing_enable_freshwater       = .true.    ! apply freshwater forcing boundary condition (OMIP only)
!  forcing_set_runoff_to_zero      = .false.   ! set runoff to zero for comparison to MPIOM; default: false
!  zero_freshwater_flux            = .true.   ! set external freshwater flux to zero; default: false 
                                              ! salt-change due to internal fluxes only
  limit_seaice                    = .TRUE.    ! default: true
  seaice_limit                    =  0.7     ! hard limit set to 80% of upper layer for sea ice
  limit_elevation                 = .TRUE.
/
&ocean_initialConditions_nml
 ! initial_salinity_type           = 1         ! read from file
 ! initial_temperature_type        = 1         ! read from file
 ! sea_surface_height_type         = 1         ! read from file
 ! smooth_initial_height_weights   = 0.8, 0.1999999
 ! smooth_initial_height_iterations = 22
 ! smooth_initial_salinity_weights = 0.995, 0.005
 ! smooth_initial_salinity_iterations = 32
 ! smooth_initial_temperature_weights = 0.995, 0.005
 ! smooth_initial_temperature_iterations = 32
/
&ocean_diagnostics_nml
   diagnostics_level            = 0
   diagnose_for_horizontalVelocity = .false.
/
                                    
&io_nml
  dt_checkpoint = ${dt_checkpoint}
  lkeep_in_sync = .true.          ! sync after each timestep
  write_last_restart = .true.
  timeSteps_per_outputStep = $timeSteps_per_outputStep
/
EOF
#-----------------------------------------------------------------------------


#-----------------------------------------------------------------------------
# add standard atmo_non-hydrostatic_files
. ${thisdir}/add_required_ocean_files
#-----------------------------------------------------------------------------
. ${thisdir}/exec.iconrun
#-----------------------------------------------------------------------------

