#!/bin/bash
#=============================================================================
#-----------------------------------------------------------------------------
# the namelist filename
ocean_namelist=NAMELIST_${EXPNAME}
#-----------------------------------------------------------------------------
# global timing
start_date="2001-01-01T00:00:00Z"
  end_date="2001-01-02T08:00:00Z"  # test
# restart=".true."
#-----------------------------------------------------------------------------
# model timing
(( years_checkpoint  = 25 ))    # write restart file interval [days]
(( years_restart     = 25 ))    # stop model for restart [days]
(( days_data         = 30 ))    # ocean model output interval in days
(( hours_data        =  6 ))    # ocean model output interval hours [hours] - for test runs
#
#-----------------------------------------------------------------------------
# calculate model timesteps using $days_data or hours_data
output_interval="P${days_data}D"                  # ocean model output interval in days
output_interval="PT${hours_data}H"                # ocean model output interval in hours (alternatively)
(( dt_data        = days_data         * day  ))   # used for output_bounds and buildbot
(( dt_data        = hours_data        * hour ))   # used for output in hours
(( dt_checkpoint  = years_checkpoint  * year ))
(( dt_restart     = years_restart     * year ))
(( steps_per_file = dt_restart / dt_data+10  ))   # calculated output intervals per file interval
#steps_per_file=610                               # assigned output intervals per file interval
#-----------------------------------------------------------------------------
# global resolution
iforc=12
forcing_timescale=365  # length of OMIP/NCEP dataset: 1 = annual; 12 = monthly data; 365/else = daily data
init_relax=0
ocean_vertical_levels=40
ocean_grids="iconR2B02-ocean_etopo40_planet.nc"   #  R2B02 global grid and forcing data (on oes/testsetup)
ocean_grids="OceanOnly_Icos_0158km_etopo40.nc"    #  default R2B04 without land-points
#-----------------------------------------------------------------------------
#
# write namelist parameters
# -------------------------
cat > ${ocean_namelist} << EOF
!
&parallel_nml
 nproma         = $nproma
 p_test_run     = .false.
 l_fast_sum     = .true.
 num_prefetch_proc = 0 
 pio_type       = 0
 num_io_procs   = 0
/
&grid_nml
 dynamics_grid_filename = "${ocean_grids}",
 use_dummy_cell_closure = .true.
 use_duplicated_connectivity = .false.
/
&dynamics_nml
 iequations           = -1           ! -1: hydrost. ocean model
/
&run_nml
 dtime                = 3600         ! model timestep in seconds
 output               = 'nml'        ! namelist controlled output scheme
 activate_sync_timers = .TRUE.
 test_mode            = 41
/
&output_nml
  filetype         =  4                       ! output format: 2=GRIB2, 4=NETCDFv2
  output_filename  = "${EXPNAME}"
  filename_format  = "<output_filename>_<datetime2>"
  output_start     = "${start_date}"                  ! start in ISO-format
  output_end       = "${end_date}"                    ! end in ISO-format
  output_interval  = "${output_interval}"
  steps_per_file   = ${steps_per_file}                ! error with ""
  mode             =  2                               ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
  include_last     = .false.
  output_grid      = .TRUE.
  filename_format  = "<output_filename>_<datetime2>"
! ml_varlist       = 'basin_c','regio_c','wet_c','wet_e','group:oce_diag','group:oce_prog','group:ice_diag','FrshFlux_VolumeTotal'
  ml_varlist       = 'group:oce_default','group:ice_default','FrshFlux_VolumeTotal','group:oce_diag','group:ice_diag'
/
&dbg_index_nml
  idbg_mxmn=4                     ! initialize MIN/MAX  debug output
  idbg_val =0                     ! initialize one cell debug output
  idbg_slev=1                     ! initialize start level for debug output
  idbg_elev=2                     ! initialize end level for debug output
  dbg_lat_in=   60.0              ! latitude location of one cell debug output
  dbg_lon_in=  -30.0              ! longitude location of one cell debug output
  str_mod_tst='all'               ! define modules to print out in debug mode
/
&ocean_dynamics_nml
! 20 unevenly spaced levels used by MPIOM/GR60, limited to 700m at bottom
!  n_zlev             =   20      ! number of vertical levels and (dzlev_m) thicknesses
!  dzlev_m(1:20)      =   20.0,   20.0,   20.0,   30.0,   40.0,   50.0,   70.0,   90.0,  120.0,  150.0,
!                        180.0,  210.0,  250.0,  300.0,  400.0,  500.0,  600.0,  700.0,  700.0,  700.0
! 40 unevenly spaced levels used by MPIOM/GR30
 n_zlev             =   $ocean_vertical_levels
 n_zlev             =   4  !  reduced for testbed without ocean dynamics
 dzlev_m(1:40)      =   12.0,   10.0,   10.0,   10.0,   10.0,   10.0,   13.0,   15.0,   20.0,   25.0,
                        30.0,   35.0,   40.0,   45.0,   50.0,   55.0,   60.0,   70.0,   80.0,   90.0,
                       100.0,  110.0,  120.0,  130.0,  140.0,  150.0,  170.0,  180.0,  190.0,  200.0,
                       220.0,  250.0,  270.0,  300.0,  350.0,  400.0,  450.0,  500.0,  500.0,  600.0
  l_edge_based                    = .FALSE.   ! edge- or cell-based mimetic discretization
  l_partial_cells                 = .FALSE.   ! partial bottom cells=true: local varying bottom depth

  select_solver                   = 4       ! 1=gmres_oce_old; 2=ocean_restart_gmres, 3=mixed precisison restart 
                                            ! 4=CG (default) 5=CGJ 6=BiCG 7=GMRES restart (legacy) 8=MINRES
  use_absolute_solver_tolerance   = .true.
  solver_tolerance                = 1.0E-13 ! this may further be reduced

  select_lhs                      = 1       ! 1=operator based (default) 2=matrix based
  l_lhs_direct                    = .false. ! .true.= use lhs implementation directly  .false.= matrix scanner (default) 
  solver_FirstGuess               = 2       ! 0=start from zeros 1=last timestep smoothed 2=last timestep (default) 

  fast_performance_level          = 200       ! performance level 12: for cell-based; 5: default
  use_continuity_correction       = .TRUE.    ! height adjustment according to vertical velocity in dynamics
  cfl_check                       = .FALSE.
  cfl_write                       = .FALSE.
                                              ! horizontal viscosity parametrization:
  veloc_diffusion_form            =   1       ! 1: laplace; 2: biharmonic
  veloc_diffusion_order           =   1       ! 1: curlcurl 2: divgrad
/
&ocean_tracer_transport_nml
! no_tracer             = 2      ! tracer-transport: 0=no transport, 1=temperature, 2=temp. and salinity
! FLUX_CALCULATION_HORZ = 5      ! 1=upwind, 2=central, 3=Lax-Friedrichs, 4=Miura, 5=FCT with Zalesak limiter (default)
! FLUX_CALCULATION_VERT = 7      ! 6=adpo; 7=upwind biased ppm (default); 8=FCT with zalesak limiter
  ! define low and high order methods to be used in horizontal flux corrected transport methods (flux_calculation_horz=4,5)
  fct_low_order_flux    = 1      ! horizontal low  order method: 1=upwind (def), no other implemented
  fct_high_order_flux   = 2      ! horizontal high order method: 1=upwind, 2=central (def), 3=lax_friedrichs, 4=miura_order1
  threshold_min_T       = -4.0   ! to avoid abort
/
&ocean_diffusion_nml
  HorizontalViscosity_type            =   1       ! 3: calculate varying horizontal viscosity coefficient according to Munk criterion
  k_veloc_h                       =   3.0E+4  ! [m2/s] constant horizontal viscosity coefficient for velocity
  biharmonic_const                =   0.01    ! used with veloc_diffusion_form=2 only
  k_veloc_v                       =   1.5E-5  ! [m2/s]  vertical background viscosity coefficient for velocity
  MAX_VERT_DIFF_VELOC             =   0.0     ! max vertical viscosity for convection used in case of instability
  k_pot_temp_h                    = 600.0     ! [m2/s] constant horizontal diffusion coefficient for temperature
  k_pot_temp_v                    =   1.5E-5  ! [m2/s]  vertical background diffusion coefficient for temperature
  k_sal_h                         = 600.0     ! [m2/s] constant horizontal diffusion coefficient for salinity
  k_sal_v                         =   1.5E-5  ! [m2/s]  vertical background diffusion coefficient for salinity
  MAX_VERT_DIFF_TRAC              =   0.1     ! max vertical tracer diffusion for convection used in case of instability
! convection_InstabilityThreshold =  -5.0E-5  ! used in update_ho_params - default=-5e-8
! RichardsonDiffusion_threshold   =   0.0     ! used in update_ho_params - default=+5e-8
  k_tracer_GM_kappa_parameter     = 600.0     !
  k_tracer_isoneutral_parameter   = 600.0     ! 600: value for cell-based cartesian diffusion - mpiom: 1000/400km = 400/160km
  k_tracer_dianeutral_parameter   =   1.0E-5  !
/
&ocean_physics_nml
  i_sea_ice                       =   1       ! 0 = no sea ice; 1 = sea ice model on
  richardson_tracer               =   2.0E-3  ! factor for vertical diffusion coefficient in PP scheme
  richardson_veloc                =   2.0E-3  ! factor for vertical viscosity coefficient in PP scheme
! bottom_drag_coeff               =   2.5E-3  ! default=2.5E-3
  physics_parameters_type         =   1       ! type of pp-scheme: 1=ICON-optimized; 2=MPIOM-type
  use_wind_mixing                 = .FALSE.   ! true: use wind mixing scheme in MPIOM-type pp-scheme
  GMRedi_configuration            =   0       ! 0=cartesian diffusion 1=GM-Redi: bolus advection + isopycnal diffusion
/                                           
&sea_ice_nml
! i_ice_therm                     =   1       ! 1=zero-layer (default), 2=Winton, 0/2: not allowed
! i_ice_dyn                       =   0       ! 1/0=switch on/off AWI ice dynamics
! i_Qio_type                      =   3       ! 3 (default): energy of whole grid-area used for melting (MPIOM-type)
! i_therm_slo                     =   0       ! 0 (default): old style of thermodynamic sea ice calls (after review)
! use_constant_tfreez             = .TRUE.    ! default: true
  leadclose_1                     =   0.25    ! default: 0.5 - value of MPIOM: 0.25
  leadclose_2n                    =   0.666   ! default: 0.0 - value of MPIOM: 2/3
  use_IceInitialization_fromTemperature = .false.  ! no automatic sea ice initialization
  init_analytic_hi_param          =   0.0     ! no sea ice at start
  init_analytic_hs_param          =   0.0
  init_analytic_conc_param        =   0.0
/
&ocean_forcing_nml
  iforc_oce                       = ${iforc}            ! ocean forcing
  forcing_timescale               = $forcing_timescale  ! length of ocean forcing data set, see above
  init_oce_relax                  = $init_relax         ! read ocean surface relaxation file, see above
  type_surfRelax_Temp             =   0       ! 0: no relaxation used
                                              ! 1: relaxation switched on for reading (init_oce_relax=1) or some testcases only
  para_surfRelax_Temp             =   1.0     ! strength of 2-dim relaxation for temperature (months)
                                              ! this value is divided by number of seconds per month (=30*24*3600)
  type_surfRelax_Salt             =   0       ! 2-dim relaxation of salinity - see temperature relaxation for type values
  para_surfRelax_Salt             =   3.0     ! strength of 2-dim relaxation for salinity (months)
  forcing_windstress_u_type       =   1       ! read from file
  forcing_windstress_v_type       =   1       ! read from file
  forcing_fluxes_type             =   1       ! read from file
! forcing_enable_freshwater       = .TRUE.    ! apply freshwater forcing boundary condition (OMIP only)
! forcing_set_runoff_to_zero      = .FALSE.   ! set runoff to zero for comparison to MPIOM; default: false
! zero_freshwater_flux            = .FALSE.   ! set external freshwater flux to zero; default: false 
                                              ! salt-change due to internal fluxes only
  limit_seaice                    = .FALSE.   ! default: true
  seaice_limit                    =   0.8     ! hard limit set to 80% of upper layer for sea ice
  limit_elevation                 = .FALSE.
/                                    
&ocean_initialConditions_nml
  initial_temperature_type        = 200
  initial_temperature_top         = -1.78
  initial_temperature_bottom      = -1.78
  initial_salinity_type           = 200
  initial_salinity_top            = 35.0
  initial_salinity_bottom         = 35.0
/
&io_nml
  dt_checkpoint = ${dt_checkpoint}
  lkeep_in_sync = .true.          ! sync after each timestep
/
EOF
#-----------------------------------------------------------------------------



#-----------------------------------------------------------------------------
# add standard atmo_non-hydrostatic_files
. ${thisdir}/add_required_ocean_files
#-----------------------------------------------------------------------------
