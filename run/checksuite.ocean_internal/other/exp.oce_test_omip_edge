#!/bin/bash
#=============================================================================
#-----------------------------------------------------------------------------
# the namelist filename
ocean_namelist=NAMELIST_${EXPNAME}
#
#-----------------------------------------------------------------------------
# global resolution
R=2   # nroot
B=4   # number of bisections applied
#-----------------------------------------------------------------------------
# ocean initialization, forcing, and grid file location specifics:
  LOC='POOL'   # all ocean files needed for running are found on pool
# LOC='othr'   # else all ocean files needed for running are found on local 'grids' directory
# specific path of input data is set by exec.iconrun
# 
#-----------------------------------------------------------------------------
use_file_initialConditions=".true."
# prognostic ocean initialization file must match the vertical levels
#   ts_phc_annual-iconR${R}B0{B}-L10x500m.nc      # 10 levels, 500m each
#   ts_phc_annual-iconR${R}B0{B}-L10_50-1000m.nc  # 10 levels, 10-1000m varying thickness
# provide name suffix for vertical resolution
#init_oce_suff='L10_50-1000m.nc'
#init_oce_suff='L40_12-600m.nc'
init_oce_suff='L20_20-700m.nc'
#
#-----------------------------------------------------------------------------
# surface relaxation initialization (init_relax=1) needs an additional file for temperature/salinity
init_relax=1   # 1: use relaxation initialization file
#init_rel_suff='50m.nc'  # 50m thickness
#init_rel_suff='12m.nc'  # 12m thickness
init_rel_suff='20m.nc'  # 20m thickness
# surface relaxation file must match the thickness of the surface level
#   ts_surf_annual-iconR${R}B0{B}-50m.nc          # 50m thickness
#
grid_ext="etopo40_planet"
#=============================================================================
# SETUP FOR mpiom-like INPUT
#external_interpolation_type="mpiom"
#init_oce_suff='L20.nc'
#init_rel_suff='surf.nc'
#-----------------------------------------------------------------------------
# SETUP FOR mpiom-like INPUT ON NEW GRID (newgeom)
# provide an ocean horizontal grid file
#grid_ext="etopo40_planet_newgeom"
#use_gridfile_for_grabbing_externale_data='true'
#-----------------------------------------------------------------------------
# SETUP FOR mpiom-like INPUT ON NEW GRID without land (newgeom_noinland)
#use_gridfile_for_grabbing_externale_data='true'
#grid_ext="etopo40_planet_newgeom_noinland"
#-----------------------------------------------------------------------------
ocean_grids="iconR${R}B0${B}-ocean_${grid_ext}.nc"
#=============================================================================
#-----------------------------------------------------------------------------
# ocean forcing (iforc=12) needs an additional flux file 
iforc=12
#
# type of OMIP or NCEP forcing to read (iforc=12 only)
#  1 = u/v-stress [and temperature relaxation]
#  2 = use all 12 datasets of full OMIP forcing
#  5 = use full NCEP datasets; read monthly mean data of consecutive years, set forcing_timescale=12 !
forcing_timescale=365  # length of OMIP/NCEP dataset: 1 = annual; 12 = monthly data; 365/else = daily data
# surface flux file must match the length given by forcing_timescale
#   omip4icon-R${R}B0{B}-monmean.nc  # 12 monthly mean datasets
#   omip4icon-R${R}B0{B}-annual.nc   #  1 annual mean dataset
#   ncep4icon-R${R}B0{B}.nc          # consecutive 12 monthly mean datasets (forcing_timescale=12)
#
#-----------------------------------------------------------------------------
# global timing
start_date="2001-01-01T00:00:00Z"  #  do not change - restart/output problems!
  end_date="3001-01-01T00:00:00Z"
#
#-----------------------------------------------------------------------------
# model timing
((  years_checkp  = 25  ))  # write restart file interval [days]
((  years_restart = 50 ))   # stop model for restart [days]
(( dt_checkpoint  = years_checkp  * year360 ))
(( dt_restart     = years_restart * year360 ))
steps_per_file=300
days_data=30
#
#-----------------------------------------------------------------------------
# model parameters
ocean_model_equations=-1 # equation system: -1=hydrost. ocean
#
# 
#-----------------------------------------------------------------------------
#
# write ICON namelist parameters
# ------------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#
cat > ${ocean_namelist} << EOF
!
&parallel_nml
 nproma         = ${nproma}
 p_test_run     = .false.     
 l_fast_sum     = .true.          ! false: results are reproducable, gmres_oce_old is used; true: production run
/
&grid_nml
 dynamics_grid_filename = "${ocean_grids}",
/
&dynamics_nml
 iequations  = ${ocean_model_equations}       ! -1: hydrost. ocean model
/
&run_nml
 dtime       = 3600               ! model timestep in seconds
 output      = 'nml'              ! output mechanism via namelist
 activate_sync_timers = .TRUE.
 profiling_output     = 3
 msg_timestamp        = .FALSE.
/
&output_nml
  filetype         =  4                       ! output format: 2=GRIB2, 4=NETCDFv2
  output_start     = "${start_date}"
  output_end       = "${end_date}"
  output_interval  = "P${days_data}D"
  steps_per_file   = ${steps_per_file}
  mode             =  2                       ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
  include_last     = .false.
  output_grid      = .TRUE.
  output_filename  = "${EXPNAME}_R${R}B0${B}_oce"
  filename_format  = "<output_filename>_<datetime2>"
  ml_varlist       =  'group:oce_essentials','group:ice_default', 'topBoundCond_windStress_u', 'A_tracer_v_T'
/
&dbg_index_nml
  idbg_mxmn=1                     ! initialize MIN/MAX  debug output
  idbg_val =0                     ! initialize one cell debug output
  idbg_slev=1                     ! initialize start level for debug output
  idbg_elev=5                     ! initialize end level for debug output
  dbg_lat_in=   30.0              ! latitude location of one cell debug output
  dbg_lon_in=  -30.0              ! longitude location of one cell debug output
  str_mod_tst='all'               ! define modules to print out in debug mode
/
&ocean_dynamics_nml
! 20 unevenly spaced levels used by MPIOM/GR60, limited to 700m at bottom
  n_zlev             =   20      ! number of vertical levels and (dzlev_m) thicknesses
  dzlev_m(1:20)      =   20.0,   20.0,   20.0,   30.0,   40.0,   50.0,   70.0,   90.0,  120.0,  150.0,
                        180.0,  210.0,  250.0,  300.0,  400.0,  500.0,  600.0,  700.0,  700.0,  700.0
! 40 unevenly spaced levels used by MPIOM/GR30
! n_zlev             =   40
! dzlev_m(1:40)      =   12.0,   10.0,   10.0,   10.0,   10.0,   10.0,   13.0,   15.0,   20.0,   25.0,
!                        30.0,   35.0,   40.0,   45.0,   50.0,   55.0,   60.0,   70.0,   80.0,   90.0,
!                       100.0,  110.0,  120.0,  130.0,  140.0,  150.0,  170.0,  180.0,  190.0,  200.0,
!                       220.0,  250.0,  270.0,  300.0,  350.0,  400.0,  450.0,  500.0,  500.0,  600.0
! l_edge_based    = .TRUE.       ! edge- or cell-based mimetic discretization
! l_partial_cells = .FALSE.      ! partial bottom cells=true: local varying bottom depth
! solver_tolerance = 1.0E-14              !  absolute (new) or relative (gmres_oce_old) - to be checked
  solver_max_iter_per_restart   = 28      !  inner solver loop without syncing (default: 200)
  solver_max_restart_iterations = 50      !  outer (restart solver) loop with syncing (default: 100)
    ! solver_max_iter_per_restart * solver_max_restart_iterations: maximum iterations before abort
  fast_performance_level        = 50      !  performance level 12: for cell-based; 5: default
  use_continuity_correction=.true.        !  height adjustment according to vertical velocity in dynamics
  cfl_write = .false.
/
&ocean_tracer_transport_nml
! no_tracer             = 2      ! tracer-transport: 0=no transport, 1=temperature, 2=temp. and salinity
! FLUX_CALCULATION_HORZ = 5      ! 1=upwind, 2=central, 3=Lax-Friedrichs, 4=Miura, 5=FCT with Zalesak limiter (default)
! FLUX_CALCULATION_VERT = 7      ! 6=adpo; 7=upwind biased ppm (default); 8=FCT with zalesak limiter
  ! define low and high order methods to be used in horizontal flux corrected transport methods (flux_calculation_horz=4,5)
! fct_low_order_flux    = 1      ! horizontal low  order method: 1=upwind (def), no other implemented
! fct_high_order_flux   = 2      ! horizontal high order method: 1=upwind, 2=central (def), 3=lax_friedrichs, 4=miura_order1
  threshold_min_T       = -6.0   ! to avoid abort
/
&ocean_diffusion_nml
!  k_veloc_h                   = 7.5E+4   ! [m2/s] constant horizontal viscosity coefficient for velocity
  HorizontalViscosity_type       = 3        ! 3: calculate varying horizontal viscosity coefficient according to Munk criterion
  k_veloc_v                   = 1.0E-5   ! [m/s]  vertical background viscosity coefficient for velocity
  MAX_VERT_DIFF_VELOC        = 1.1E-3   ! max vertical velocity viscosity for convection used in case of instability
  k_pot_temp_h               =  400.0   ! [m2/s] constant horizontal diffusion coefficient for temperature
  k_pot_temp_v               = 1.0E-5   ! [m/s]  vertical background diffusion coefficient for temperature
  k_sal_h                    =  400.0   ! [m2/s] constant horizontal diffusion coefficient for salinity
  k_sal_v                    = 1.0E-5   ! [m/s]  vertical background diffusion coefficient for salinity
  MAX_VERT_DIFF_TRAC        = 0.08      ! max vertical tracer diffusion for convection used in case of instability
  convection_InstabilityThreshold = -5.0E-8    ! used in update_ho_params
  RichardsonDiffusion_threshold   = 5.0E-7     ! used in update_ho_params
! veloc_diffusion_order       = 1        ! 1=harmonic, 2=biharmonic friction
! veloc_diffusion_form        = 1        ! 1: graddiv, 2: curlcurl form of laplacian horizontal velocity diffusion
/
&ocean_physics_nml
  ! i_sea_ice                   = 1        ! 0 = no sea ice; 1 = sea ice model on
!  richardson_veloc            = 2.0e-3   ! factor for vertical viscosity coefficient in PP scheme
!  richardson_tracer           = 2.0e-3   ! factor for vertical diffusion coefficient in PP scheme
  richardson_tracer    = 5.0E-3    ! factor for vertical diffusion coefficient in PP scheme
  richardson_veloc     = 1.0E-3    ! factor for vertical viscosity coefficient in PP scheme
  bottom_drag_coeff    = 1.0E-3
/    
&sea_ice_nml
  i_ice_therm   = 1              !  0: not allowed, 1=zero-layer, 2=Winton
  i_ice_dyn     = 0              !  1/0=switch on/off AWI ice dynamics
/
&ocean_forcing_nml
  iforc_oce                   = ${iforc}       ! ocean forcing
  forcing_windstress_u_type   = 1
  forcing_windstress_v_type   = 1
  forcing_fluxes_type         = 1
  forcing_timescale   = ${forcing_timescale}   ! length of ocean forcing data set, see above
  init_oce_relax              = ${init_relax}  ! read ocean surface relaxation file, see above
  type_surfRelax_Temp         = 0        ! 0: no relaxation used
                                         ! 1: relaxation switched on for reading (init_oce_relax=1) or some testcases only
  para_surfRelax_Temp         = 1.0      ! strength of 2-dim relaxation for temperature (months)
                                         ! this value is divided by number of seconds per month (=30*24*3600)
  type_surfRelax_Salt         = 1        ! 2-dim relaxation of salinity - see temperature relaxation for type values
  para_surfRelax_Salt         = 3.0      ! strength of 2-dim relaxation for salinity (months)
  forcing_enable_freshwater   = .TRUE.   ! apply freshwater forcing boundary condition (OMIP only)
  forcing_set_runoff_to_zero  = .TRUE.   ! set runoff to zero for comparison to MPIOM
  seaice_limit                = 0.4      ! maximum of 8m (0.4*dz) for both, ice and snow
/
&ocean_initialConditions_nml
  use_file_initialConditions = ${use_file_initialConditions}    ! read ocean initialization file, see above
  ! itestcase_oce      =   50      ! 50=zonally homogen temperature for APE SST (Williamson)
/
&ocean_diagnostics_nml
   diagnostics_level            = 1
! vertex list for R2B04 only
   gibraltar(1:10)              = 2371,2374
   denmark_strait(1:10)         = 2436,2471
   drake_passage(1:10)          = 9285,9319,9321,9412,9414,9655
   indonesian_throughflow(1:20) = 3554,3558,3557,3560,5778,5781,5900,5906,5897,5907,5786,6206,6202,6207
   scotland_iceland(1:10)       = 2240,2467,2238,2249,2248
/
&io_nml
  dt_checkpoint = ${dt_checkpoint}
  ! lkeep_in_sync = .TRUE.         ! sync after each timestep
/
EOF
#-----------------------------------------------------------------------------
# add required standard input files
. ${thisdir}/add_required_ocean_files
#-----------------------------------------------------------------------------
