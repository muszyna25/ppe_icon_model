#!/bin/ksh
#=============================================================================
# the namelist filename
ocean_namelist=NAMELIST_${EXPNAME}
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# ocean forcing (iforc=12) needs an additional flux file 
# NO_FORCING                 = 10
# ANALYT_FORC                = 11  - dependent on testcase
# FORCING_FROM_FILE_FLUX     = 12  - OMIP or NCEP type forcing
# FORCING_FROM_FILE_FIELD    = 13  - not yet
# FORCING_FROM_COUPLED_FLUX  = 14  - coupled experiments
# FORCING_FROM_COUPLED_FIELD = 15  - not yet
iforc=10
# global timing
start_date="2001-01-01T00:00:00Z"
  end_date="2001-01-05T00:00:00Z"
#-----------------------------------------------------------------------------
# model parameters
ocean_model_equations=-1     # equation system: -1=hydrost. ocean
#
#-----------------------------------------------------------------------------
#
LOC='othr'
# grids_folder=/pool/data/ICON/grids/private/leonidas/grids.ocean
#ocean_grids="iconR2B04-ocean_etopo40_planet_t-noinland.nc"
#grids_folder="/pool/data/ICON/ocean_data/ocean_grid/"
ocean_grids="iconR2B04-ocean_etopo40_planet_newgeom_noinland.nc"

#-----------------------------------------------------------------------------
#
# write namelist parameters
# -------------------------
# For a complete list see Namelist_overview.pdf
#
cat > ${ocean_namelist} << EOF
!
&parallel_nml
 nproma       = ${nproma}
 l_fast_sum   = .false.
 p_test_run   = .true.
 l_test_openmp= .true.
 l_log_checks=  .false.
 division_method = 102
/
&grid_nml
 dynamics_grid_filename = "${ocean_grids}",
 use_dummy_cell_closure = .true.
 use_duplicated_connectivity = .false.
/
&dynamics_nml
 iequations  = ${ocean_model_equations}       ! -1: hydrost. ocean model
/
&run_nml
 dtime       = 3600         ! model timestep in seconds
 output      = 'none' ! 'nml'        ! namelist controlled output scheme
 activate_sync_timers = .TRUE.
 profiling_output = 3
 test_mode     = 101
 ! msg_timestamp        = .TRUE.
/
&dbg_index_nml
  idbg_mxmn=1                     ! initialize MIN/MAX  debug output
  idbg_val =0                     ! initialize one cell debug output
  idbg_slev=1                     ! initialize start level for debug output
  idbg_elev=5                     ! initialize end level for debug output
  dbg_lat_in=   30.0              ! latitude location of one cell debug output
  dbg_lon_in=  -30.0              ! longitude location of one cell debug output
  str_mod_tst='all'               ! define modules to print out in debug mode
/
&ocean_dynamics_nml
! 20 unevenly spaced levels used by MPIOM/GR60, limited to 700m at bottom
  n_zlev             =   20      ! number of vertical levels and (dzlev_m) thicknesses
  dzlev_m(1:20)      =   20.0,   20.0,   20.0,   30.0,   40.0,   50.0,   70.0,   90.0,  120.0,  150.0,
                        180.0,  210.0,  250.0,  300.0,  400.0,  500.0,  600.0,  700.0,  700.0,  700.0
! 40 unevenly spaced levels used by MPIOM/GR30
! n_zlev             =   40
! dzlev_m(1:40)      =   12.0,   10.0,   10.0,   10.0,   10.0,   10.0,   13.0,   15.0,   20.0,   25.0,
!                        30.0,   35.0,   40.0,   45.0,   50.0,   55.0,   60.0,   70.0,   80.0,   90.0,
!                       100.0,  110.0,  120.0,  130.0,  140.0,  150.0,  170.0,  180.0,  190.0,  200.0,
!                       220.0,  250.0,  270.0,  300.0,  350.0,  400.0,  450.0,  500.0,  500.0,  600.0
  l_edge_based    = .FALSE.       ! edge- or cell-based mimetic discretization
  l_partial_cells = .FALSE.      ! partial bottom cells=true: local varying bottom depth
  solver_tolerance = 1.0E-13              !  absolute (new) or relative (gmres_oce_old) - to be checked
  solver_max_iter_per_restart = 26        !  outer solver loop with syncing
  solver_max_restart_iterations = 50      !  inner solver loop without syncing (30*50 iterations maximum)
  use_continuity_correction = .true.
  fast_performance_level = 50
/
&ocean_tracer_transport_nml
 !no_tracer                               =  2     ! tracer-transport: 0=no transport, 1=temperature, 2=temp. and salinity
 ! FLUX_CALCULATION_HORZ = 5      !5=FCT with Zalesak limiter
 ! FLUX_CALCULATION_VERT  = 7      ! 7=upwind biased ppm
/
&ocean_diffusion_nml
  !k_veloc_h                          = 7.5E+4   ! [m2/s] constant horizontal viscosity coefficient for velocity
  HORZ_VELOC_DIFF_TYPE = 3             ! 3: calculate varying horizontal viscosity coefficient according to Munk criterion
  k_veloc_v                            = 5.0E-5    ! [m/s]  vertical background viscosity coefficient for velocity
  MAX_VERT_DIFF_VELOC   = 1.0E-5    ! max vertical velocity viscosity for convection used in case of instability
  k_pot_temp_h                    = 1.0E+3   ! [m2/s] constant horizontal diffusion coefficient for temperature
  k_pot_temp_v                    = 1.0E-5     ! [m/s]  vertical background diffusion coefficient for temperature
  k_sal_h                                = 1.0E+3   ! [m2/s] constant horizontal diffusion coefficient for salinity
  k_sal_v                                = 1.0E-5     ! [m/s]  vertical background diffusion coefficient for salinity
  MAX_VERT_DIFF_TRAC     = 0.1           ! max vertical tracer diffusion for convection used in case of instability
  !veloc_diffusion_order      = 1             ! 1=harmonic, 2=biharmonic friction
  !veloc_diffusion_form       = 1             ! 1: graddiv, 2: curlcurl form of laplacian horizontal velocity diffusion
/
&ocean_physics_nml
  !i_sea_ice                =    1          ! 0 = no sea ice; 1 = Winton; 2 = Semtner
  richardson_veloc   = 2.0e-3    ! factor for vertical viscosity coefficient in PP scheme
  richardson_tracer  = 2.0e-3    ! factor for vertical diffusion coefficient in PP scheme
  physics_parameters_type = 1   ! physics_parameters_ICON_PPoptimized_type
/    
&ocean_forcing_nml
  iforc_oce = 11
  ! type_surfRelax_Temp= 0      !  0: no relaxation used
                                 !  1: relaxation switched on for reading (init_oce_relax=1) or some testcases only
                                 !  2: use SST read from bulk forcing (iforc=12);
                                 !     use atmospheric temperature in case of coupling (iforc=14)
                                 !  3: use initial prognostic T as 2-dim relax, copy SST on tracer_relax(1)
                                 ! -1: use net surface heat flux from atmosphere as boundary condition
  ! para_surfRelax_Temp   =    1.0    ! strength of 2-dim relaxation for temperature (months)
                                 ! this value is divided by number of seconds per month (=30*24*3600)
  forcing_windstress_u_type = 106
  forcing_windstress_v_type = 0
  forcing_windStress_u_amplitude = 0.3
  forcing_windstress_zonal_waveno      = 3.0
  forcing_windstress_merid_waveno = 3.0
/
&ocean_initialConditions_nml
  ! itestcase_oce = 1050
  initial_salinity_type      = 202    
  initial_salinity_top       = 34.1
  initial_salinity_bottom    = 35.0
  initial_temperature_type   = 200
  initial_temperature_top    = 10.0 
  initial_temperature_bottom = 10.0
/
&io_nml
  dt_checkpoint = ${dt_checkpoint}
  lkeep_in_sync = .TRUE.          ! sync after each timestep
/
EOF
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# add standard atmo_non-hydrostatic_files
. ${thisdir}/add_required_ocean_files
#-----------------------------------------------------------------------------

