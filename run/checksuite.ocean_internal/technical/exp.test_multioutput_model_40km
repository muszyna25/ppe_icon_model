#!/bin/bash
#=============================================================================
#-----------------------------------------------------------------------------
# the namelist filename
ocean_namelist=NAMELIST_${EXPNAME}_ocean
#-----------------------------------------------------------------------------
# global timing
start_date="2001-01-01T00:00:00Z"
  end_date="2001-01-01T01:00:00Z"  #  201 years to ensure write of restart at end
# restart=".true."
modelTimeStep="PT10M"
#-----------------------------------------------------------------------------
# model timing
restart_interval="P1Y"
checkpoint_interval="P1Y"
#
#-----------------------------------------------------------------------------
# calculate model timesteps using $days_data
output_interval="P1M"                  # ocean model output interval in days
daily="P1D"
monthly="P1M"
file_interval="P1Y"
restartSemaphoreFilename='isRestartRun.sem'

autoPostProcessing="false"                         # submit postprocessing job
#steps_per_file=610                               # assigned output intervals per file interval
#-----------------------------------------------------------------------------
# global resolution
iforc=12
forcing_timescale=365  # length of OMIP/NCEP dataset: 1 = annual; 12 = monthly data; 365/else = daily data
init_relax=1
grid_name="OceanOnly_Global_IcosSymmetric_0039km_rotatedZ37d_BlackSea_Greenland_modified_srtm30_1min"
ocean_grids="${grid_name}.nc"
ocean_data_InputFolder="/pool/data/ICON/oes/input/r0003/${grid_name}"
grids_folder=${ocean_data_InputFolder}
ocean_vertical_levels=64
vertical_levels="12,  10,  10,  10,  10,  10,  10,  10,  10,  10, 
                 11,  12,  13,  14,  15,  16,  17,  18,  20,  22, 
                 24,  26,  28,  30,  32,  35,  38,  41,  45,  49, 
                 53,  58,  62,  66,  71,  75,  80,  85,  91,  97, 
                104, 111, 118, 125, 132, 138, 145, 152, 160, 167, 
                175, 182, 188, 195, 201, 208, 213, 219, 224, 230, 
                235, 241, 250, 260"

#-----------------------------------------------------------------------------
#icon_data_rootFolder=/pool/data/ICON
#
# write namelist parameters
# -------------------------
cat > ${ocean_namelist} << EOF
!
&parallel_nml
 nproma         = $nproma
 p_test_run     = .false.
 l_fast_sum     = .true.
 num_prefetch_proc = 0 
 pio_type       = 0
 num_io_procs   = 0
/
&grid_nml
 dynamics_grid_filename = "${ocean_grids}",
 use_dummy_cell_closure = .true.
 use_duplicated_connectivity = .false.
/
&dynamics_nml
 iequations           = -1           ! -1: hydrost. ocean model
/
&run_nml
 modelTimeStep        = "${modelTimeStep}"       ! model timestep in seconds
 output               = 'nml'        ! namelist controlled output scheme
 activate_sync_timers = .TRUE.
 profiling_output     = 1
 msg_timestamp        = .false.
 timers_level         = 10
 debug_check_level    = 0
 restart_filename     = "${EXPNAME}_restart_oce_<rsttime>.nc"
/
&dbg_index_nml
  idbg_mxmn=0                     ! initialize MIN/MAX  debug output
  idbg_val =0                     ! initialize one cell debug output
  idbg_slev=1                     ! initialize start level for debug output
  idbg_elev=5                     ! initialize end level for debug output
  dbg_lat_in=   30.0              ! latitude location of one cell debug output
  dbg_lon_in=  -30.0              ! longitude location of one cell debug output
  str_mod_tst='all'               ! define modules to print out in debug mode
/
&ocean_dynamics_nml
 n_zlev         =  $ocean_vertical_levels
 dzlev_m(1:64)  =  $vertical_levels

  l_edge_based                    = .FALSE.   ! edge- or cell-based mimetic discretization
  l_partial_cells                 = .FALSE.   ! partial bottom cells=true: local varying bottom depth

  select_solver                   = 4       ! 1=gmres_oce_old; 2=ocean_restart_gmres, 3=mixed precisison restart 
                                            ! 4=CG (default) 5=CGJ 6=BiCG 7=GMRES restart (legacy) 8=MINRES
  use_absolute_solver_tolerance   = .true.
  solver_tolerance                = 1.0E-10 ! this may further be reduced
  select_lhs                      = 2       ! 1=operator based (default) 2=matrix based
  l_lhs_direct                    = .true. ! .true.= use lhs implementation directly  .false.= matrix scanner (default) 
  solver_FirstGuess               = 2       ! 0=start from zeros 1=last timestep smoothed 2=last timestep (default) 

  solver_max_iter_per_restart     =  14   
  solver_max_restart_iterations   = 100       ! outer (restart solver)

  fast_performance_level          = 200       ! performance level 12: for cell-based; 5: default
  use_continuity_correction       = .TRUE.    ! height adjustment according to vertical velocity in dynamics
  cfl_check                       = .FALSE.
  cfl_write                       = .FALSE.

  i_bc_veloc_top                  =   1
  i_bc_veloc_bot                  =   1       ! 0: (def) bottom friction off, 1: on
/
&ocean_tracer_transport_nml
  FLUX_CALCULATION_HORZ =  5 ! 5      ! 1=upwind, 2=central, 3=Lax-Friedrichs, 4=Miura, 5=FCT with Zalesak limiter (default)
  FLUX_CALCULATION_VERT =  7 ! 7      ! 6=adpo; 7=upwind biased ppm (default); 8=FCT with zalesak limiter
  ! define low and high order methods to be used in horizontal flux corrected transport methods (flux_calculation_horz=4,5)
  fct_low_order_flux    = 1      ! horizontal low  order method: 1=upwind (def), no other implemented
  fct_high_order_flux   = 5      ! horizontal high order method: 1=upwind, 2=central, 3=lax_friedrichs, 4=miura_order1
  fct_limiter_horz      = 100    ! zalesak
  threshold_min_T       = -2.0   ! to avoid abort
/
&ocean_horizontal_diffusion_nml
  laplacian_form = 1                   ! 1=curlcurl-graddiv
  VelocityDiffusion_order = 2          ! 21=biharmonic+laplacian (for the laplacian leith)

  BiharmonicViscosity_scaling     =  4
  BiharmonicViscosity_reference   =  4.0E-2  !  [m2/s] constant horizontal viscosity coefficient for velocity
  BiharmonicViscosity_background  =  0.0  ! [m2/s] constant horizontal viscosity coefficient for velocity

  TracerHorizontalDiffusion_scaling          = 1
  Temperature_HorizontalDiffusion_Background = 0.0
  Temperature_HorizontalDiffusion_Reference  = 0 !  40
  Salinity_HorizontalDiffusion_Background    = 0.0
  Salinity_HorizontalDiffusion_Reference     = 0 !  40
/
&ocean_vertical_diffusion_nml
  vert_mix_type                            = 1 ! 1=PP, 2=TKE, 3=KPP
  PPscheme_type                            = 4
  velocity_VerticalDiffusion_background    =   5.0E-5  ! [m2/s]  vertical background viscosity coefficient for velocity
  Temperature_VerticalDiffusion_background =   1.0E-5  ! [m2/s]  vertical background diffusion coefficient for temperature
  Salinity_VerticalDiffusion_background    =   1.0E-5  ! [m2/s]  vertical background diffusion coefficient for salinity
  tracer_convection_MixingCoefficient =   0.1 ! max vertical tracer diffusion for convection used in case of instability
  convection_InstabilityThreshold =  -1.0E-6  ! used in update_ho_params - default=-5e-8
  RichardsonDiffusion_threshold   =   0.0     ! used in update_ho_params - default=+5e-8
  tracer_RichardsonCoeff          =   2.0E-3  ! factor for vertical diffusion coefficient in PP scheme
  velocity_RichardsonCoeff        =   2.0E-3  ! factor for vertical viscosity coefficient in PP scheme
  bottom_drag_coeff               =   3.0E-3  ! default=2.5E-3; active for i_bc_veloc_bot=1
  use_wind_mixing                 = .true.    ! true: use wind mixing scheme in MPIOM-type pp-scheme
  lambda_wind                     = 0.03
  tracer_TopWindMixing            = 0.5E-3 ! [m2/s] windmixing diffusivity in MPIOM-type pp-scheme
  velocity_TopWindMixing          = 0.5E-3 ! [m2/s] windmixing viscosity in MPIOM-type pp-scheme
/
&ocean_GentMcWilliamsRedi_nml
  GMRedi_configuration           =   0       ! 0=cartesian diffusion 1=GM-Redi: bolus advection + isopycnal diffusion
/
&ocean_physics_nml
  i_sea_ice                       =   1       ! 0 = no sea ice; 1 = sea ice model on; default=1
/                                           
&sea_ice_nml
  i_ice_therm                     =   1       ! 1=zero-layer (default), 2=Winton, 0/2: not allowed
  i_ice_dyn                       =   1       ! 1/0=switch on/off AWI ice dynamics
 leadclose_1                     =   0.25     ! default: 0.5 - value of MPIOM: 0.25
 leadclose_2n                    =   0.666    ! default: 0.0 - value of MPIOM: 2/3
 Pstar        = 40000
/
&ocean_forcing_nml
  iforc_oce                       = ${iforc}            ! ocean forcing
  forcing_timescale               = $forcing_timescale  ! length of ocean forcing data set, see above
  forcing_frequency               = 86400.0
  init_oce_relax                  = $init_relax         ! read ocean surface relaxation file, see above
  type_surfRelax_Temp             =   0       ! 0: no relaxation used
                                              ! 1: relaxation switched on for reading (init_oce_relax=1) or some testcases only
  para_surfRelax_Temp             =   1.0     ! strength of 2-dim relaxation for temperature (months)
                                              ! this value is divided by number of seconds per month (=30*24*3600)
  type_surfRelax_Salt             =   1       ! 2-dim relaxation of salinity - see temperature relaxation for type values
  para_surfRelax_Salt             =   3.0     ! strength of 2-dim relaxation for salinity (months)
  forcing_windstress_u_type       =   1       ! read from file
  forcing_windstress_v_type       =   1       ! read from file
  forcing_fluxes_type             =   1       ! read from file
                                              ! salt-change due to internal fluxes only
  limit_seaice                    = .TRUE.    ! default: true
  seaice_limit                    =   0.8     ! hard limit set to 80% of upper layer for sea ice
  limit_elevation                 = .TRUE.
/
&ocean_initialConditions_nml
  initial_salinity_type           = 1         ! read from file
  initial_temperature_type        = 1         ! read from file
/                                    
&ocean_diagnostics_nml
  diagnostics_level            = 1
  diagnose_for_horizontalVelocity = .false.
/
&io_nml
  restart_file_type = 5
  write_last_restart = .false.
!  lkeep_in_sync = .true.          ! sync after each timestep
!  restart_write_mode = "joint procs multifile"
/
EOF
#-----------------------------------------------------------------------------
#
#  create the two output models
output_model_1="output_1"
output_model_2="output_2"
output_1_namelist=NAMELIST_${EXPNAME}_${output_model_1}
output_2_namelist=NAMELIST_${EXPNAME}_${output_model_2}


#-----------------------------------------------------------------------------
cat > ${output_1_namelist} << EOF
!
&parallel_nml
 nproma         = $nproma
 p_test_run     = .false.
 l_fast_sum     = .true.
 num_prefetch_proc = 0 
 pio_type       = 0
 num_io_procs   = 0
/
&grid_nml
 dynamics_grid_filename = "${ocean_grids}",
 use_dummy_cell_closure = .true.
 use_duplicated_connectivity = .false.
/
&dynamics_nml
 iequations           = -1           ! -1: hydrost. ocean model
/
&run_nml
 modelTimeStep        = "${modelTimeStep}"       ! model timestep in seconds
 output               = 'nml'        ! namelist controlled output scheme
 activate_sync_timers = .TRUE.
 profiling_output     = 1
 msg_timestamp        = .true.
 timers_level         = 10
 debug_check_level    = 0
/
&vertical_levels_nml
 zlevels = 64
 dz_full_level(1:64) = $vertical_levels
/
&output_nml
  filetype         =  5 ! output format: 2=GRIB2, 4=NETCDFv2
  output_filename  = "${EXPNAME}_${output_model_1}"
  output_start     = "${start_date}"                  ! start in ISO-format
  output_end       = "${end_date}"                    ! end in ISO-format
  output_interval  = "${modelTimeStep}"
  filename_format  = "<output_filename>_<datetime2>"
!  operation        = "mean"
  file_interval    = "${file_interval}"
  mode             =  1                               ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
  include_last     = .false.
  output_grid      = .false.
  filename_format  = "<output_filename>_<datetime2>"
  ml_varlist       = 'group:output_model'
/
&io_nml
  restart_file_type = 5
  write_last_restart = .false.
!  lkeep_in_sync = .true.          ! sync after each timestep
!  restart_write_mode = "joint procs multifile"
/
EOF
#-----------------------------------------------------------------------------

#-----------------------------------------------------------------------------
cat > ${output_2_namelist} << EOF
!
&parallel_nml
 nproma         = $nproma
 p_test_run     = .false.
 l_fast_sum     = .true.
 num_prefetch_proc = 0 
 pio_type       = 0
 num_io_procs   = 0
/
&grid_nml
 dynamics_grid_filename = "${ocean_grids}",
 use_dummy_cell_closure = .true.
 use_duplicated_connectivity = .false.
/
&dynamics_nml
 iequations           = -1           ! -1: hydrost. ocean model
/
&run_nml
 modelTimeStep        = "${modelTimeStep}"       ! model timestep in seconds
 output               = 'nml'        ! namelist controlled output scheme
 activate_sync_timers = .TRUE.
 profiling_output     = 1
 msg_timestamp        = .true.
 timers_level         = 10
 debug_check_level    = 0
/
&vertical_levels_nml
  zlevels = 64
  dz_full_level(1:64) = $vertical_levels
/
&output_nml
  filetype         =  5 ! output format: 2=GRIB2, 4=NETCDFv2
  output_filename  = "${EXPNAME}_${output_model_2}"
  output_start     = "${start_date}"                  ! start in ISO-format
  output_end       = "${end_date}"                    ! end in ISO-format
  output_interval  = "${modelTimeStep}"
  filename_format  = "<output_filename>_<datetime2>"
!  operation        = "mean"
  file_interval    = "${file_interval}"
  mode             =  1                               ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
  include_last     = .false.
  output_grid      = .false.
  filename_format  = "<output_filename>_<datetime2>"
  ml_varlist       = 'group:output_model'
/
&io_nml
  restart_file_type = 5
  write_last_restart = .false.
!  lkeep_in_sync = .true.          ! sync after each timestep
!  restart_write_mode = "joint procs multifile"
/
EOF
#-----------------------------------------------------------------------------

#--------------------------------------------------------------------------------------------------
#split the number of procs in two for each of the dummy component
max_rank=`expr ${mpi_total_procs} - 1`

((ocean_max_rank = max_rank  - 2))
ocean_min_rank=0
ocean_inc_rank=1

((output_1_min_rank = ocean_max_rank + 1))
output_1_max_rank=$output_1_min_rank
output_1_inc_rank=1

output_2_min_rank=$max_rank
output_2_max_rank=$output_2_min_rank
output_2_inc_rank=1
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
#
# fill model list
#
namelist_list[0]="$ocean_namelist"
modelname_list[0]="oce"
modeltype_list[0]=2
minrank_list[0]=$ocean_min_rank
maxrank_list[0]=$ocean_max_rank
incrank_list[0]=$ocean_inc_rank
#
namelist_list[1]="$output_1_namelist"
modelname_list[1]="output_1"
modeltype_list[1]=100
minrank_list[1]=$output_1_min_rank
maxrank_list[1]=$output_1_max_rank
incrank_list[1]=$output_1_inc_rank
#
namelist_list[2]="$output_2_namelist"
modelname_list[2]="output_2"
modeltype_list[2]=100
minrank_list[2]=$output_2_min_rank
maxrank_list[2]=$output_2_max_rank
incrank_list[2]=$output_2_inc_rank
#
#-----------------------------------------------------------------------------


#-----------------------------------------------------------------------------
# add standard atmo_non-hydrostatic_files
#. ${thisdir}/add_required_ocean_files

add_link_file $ocean_data_InputFolder/ts_phc3.0_annual_icon_OceanOnly_Global_IcosSymmetric_0039km_rotatedZ37d_BlackSea_Greenland_modified_srtm30_1min.nc_Ln64.nc initial_state.nc
add_link_file $ocean_data_InputFolder/omip_forcing_OceanOnly_Global_IcosSymmetric_0039km_rotatedZ37d_BlackSea_Greenland_modified_srtm30_1min.nc ocean-flux.nc
add_link_file $ocean_data_InputFolder/ts_phc3.0_annual_icon_OceanOnly_Global_IcosSymmetric_0039km_rotatedZ37d_BlackSea_Greenland_modified_srtm30_1min.nc_surf.nc ocean-relax.nc

#-----------------------------------------------------------------------------
#!/bin/ksh
#=============================================================================
. ./exec.iconrun
exit
#=============================================================================


