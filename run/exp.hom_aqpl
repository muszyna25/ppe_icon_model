#=============================================================================
#
# This section of the run script containes the specifications of the ocean experiment.
# The specifications are passed by namelist to the program.
# For a complete list see Namelist_overview.pdf
#
# Default EXPNAME is the suffix of this script after "exp."
#
#-----------------------------------------------------------------------------
# Basic specifications for the hydrostatic ocean model (hom) for aquaplanet configuration
# --------------------------------------
# Stephan Lorenz, MPI-M, 2011-01 / 2012-03
#
# Preliminary test phase: run on specific systems and compiler only
#  - 2011-01-31: mpipc/tornado/squall - all compilers
#  - 2011-03-03: blizzard serial run included
#  - 2011-12-13: SX9 and HPC_serial - all machines in serial mode included
#-----------------------------------------------------------------------------

#  exit all buildbot slaves that run in parallel mode:
if [ -z "$BB_SYSTEM" ]
then
  echo " ===== (no buildbot) ======="
  echo " Run ocean testcase $EXPNAME"
  echo " ==========================="
else
  echo " ================================================="
  echo " Run ocean testcase $EXPNAME on BB_SLAVE=$BB_SLAVE"
  echo " ================================================="
  if [ $mpi_total_procs -gt 1 ] ; then
     echo "The ocean test runs will not run in parallel MPI mode. Exiting."
     check_error 0
     exit
  fi
  if [ $OMP_NUM_THREADS -gt 1 ] ; then
     echo "The ocean test runs will not run in OpenMP mode. Exiting."
     check_error 0
     exit
  fi
fi

#-----------------------------------------------------------------------------
#
# Basic specifications of the simulation
# --------------------------------------
#
# These variables are set in the header section of the completed run script:
#
# EXPNAME = experiment name
# NPROMA  = array blocking length / inner loop length
#-----------------------------------------------------------------------------
#
#-----------------------------------------------------------------------------
# The following values must be set here as shell variables so that they can be used
# also in the executing section of the completed run script
#
#-----------------------------------------------------------------------------
# the namelist filename
ocean_namelist=NAMELIST_${EXPNAME}
#
#-----------------------------------------------------------------------------
# global resolution
R=2   # nroot
B=4   # number of bisections applied
#
#-----------------------------------------------------------------------------
# ocean initialization (init_oce=1) needs an additional file for prognostic variables
init_oce=0     # 1: use ocean initialization file; 0: init with constants or analytically
# prognostic ocean initialization files ust be provided and named as
# $HGRIDDIR/ts_phc_season-iconR${R}B0{B}-L11.nc
#
#-----------------------------------------------------------------------------
# ocean forcing = 12 needs an additional flux file 
# NO_FORCING                 = 10
# ANALYT_FORC                = 11  - dependent on testcase
# FORCING_FROM_FILE_FLUX     = 12  - OMIP or NCEP type forcing
# FORCING_FROM_FILE_FIELD    = 13  - not yet
# FORCING_FROM_COUPLED_FLUX  = 14  - coupled experiments
# FORCING_FROM_COUPLED_FIELD = 15  - not yet
iforc=10
#
#-----------------------------------------------------------------------------
# global timing
start_date="1001-01-01T00:00:00Z"
  end_date="1002-01-01T00:00:00Z"
#
#-----------------------------------------------------------------------------
# model timing
nhours_data=6        # ocean model output interval hours [hours]
ndays_file=1000      # new output file generation interval [days]
ndays_checkp=92      # write restart file interval [days]
ndays_restart=370    # stop model for restart [days]
#
#-----------------------------------------------------------------------------
# calculate model timesteps using $ndays
dt_data=`expr ${nhours_data} \* 3600`
dt_file=`expr ${ndays_file} \* 86400`
dt_checkpoint=`expr ${ndays_checkp} \* 86400`
dt_restart=`expr ${ndays_restart} \* 86400`
#
#-----------------------------------------------------------------------------
# model parameters
ocean_model_equations=-1 # equation system
#                      0=shallow water model
#                     -1=hydrost. ocean
#
#-----------------------------------------------------------------------------
# the grid files
# USE_BASIN="Y"      # "Y": ocean horizontal gridfile base is "bas0-60N"
  USE_AQUAP="Y"      # "Y": ocean horizontal gridfile base is "aqua_planet"
# USE_FLATB="Y"      # "Y": ocean horizontal gridfile base is "etopo40_flat"
# USE_BATHY="Y"      # "Y": ocean horizontal gridfile base is "etopo40_planet"
# USE_POOLD="Y"      # "Y": overwrite ocean gridfile from pool
#-----------------------------------------------------------------------------
if [ "x$USE_FLATB" = "xY"  ] ; then
  grid_ext="etopo40_flat"
  USE_POOLD="Y"
elif [ "x$USE_BATHY" = "xY"  ] ; then
  grid_ext="etopo40_planet"
  USE_POOLD="Y"
elif [ "x$USE_AQUAP" = "xY"  ] ; then
  grid_ext="aqua_planet"
elif [ "x$USE_BASIN" = "xY"  ] ; then
# grid_ext="bas10-80N"
  grid_ext="bas0-60N"
else
  echo " No ocean topography file chosen - exit now"
  exit 1
fi
ocean_grids="iconR${R}B0${B}-ocean_${grid_ext}.nc"
#-----------------------------------------------------------------------------
# 
#  USE_POOLD="Y"      # "Y": ocean gridfile is read from $POOLDIR/$OCEGRID
if [ "x$USE_POOLD" = "xY" ] ; then
   POOLDIR="/pool/data/ICON/grids"
   if [ "x$USE_FLATB" = "xY" ] ; then
     OCEGRID="ocegridR${R}B0${B}.cde3.3.flat.nc"
   fi
   if [ "x$USE_BATHY" = "xY" ] ; then
     OCEGRID="ocegridR${R}B0${B}.cde3.3.planet.nc"
   fi
   # other ocean grid files can be added here
fi
#
#-----------------------------------------------------------------------------
#
# write ICON namelist parameters
# ------------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#
cat > ${ocean_namelist} << EOF
!
&parallel_nml
 nproma         = ${nproma}
 p_test_run     = .false.
 l_test_openmp  = .false.
 l_log_checks   = .false.
/
&grid_nml
 cell_type = 3            ! triangular cells
 dynamics_grid_filename = "${ocean_grids}",
/
&dynamics_nml
 iequations  = ${ocean_model_equations}       ! -1: hydrost. ocean model
/
&run_nml
 dtime       = 1800         ! model timestep in seconds
/
&ocean_dynamics_nml
  n_zlev             =   10      ! number of vertical levels and (dzlev_m) thicknesses
! 10 unevenly spaced levels beginning with 50m depth
  dzlev_m(1:20)      =   50.0,  100.0,  200.0,  300.0,  450.0,  600.0,  800.0, 1000.0, 1000.0, 1000.0,
                       1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0
/
&ocean_physics_nml
  i_sea_ice          =    0      ! 0 = no sea ice; 1 = sea ice switched on
  no_tracer          =    1      ! tracer-transport: 0=no transport, 1=temperature, 2=temp. and salinity
  k_veloc_h          = 1.0E+5    ! [m2/s] horizontal viscosity coefficient for velocity
  k_veloc_v          = 1.0E-2    ! [m/s]  vertical viscosity coefficient for velocity
  MAX_VERT_DIFF_VELOC=    1.0    ! max diffusion coeff, used in impl.vert.velocity diffusion, if stabil. crit.is met
  k_pot_temp_h       = 5.0E+3    ! [m2/s] horizontal viscosity coefficient for temperature
  k_pot_temp_v       = 3.0E-5    ! [m/s]  vertical viscosity coefficient for temperature
  k_sal_h            = 5.0E+3    ! [m2/s] horizontal viscosity coefficient for salinity
  k_sal_v            = 3.0E-5    ! [m/s]  vertical viscosity coefficient for salinity
  MAX_VERT_DIFF_TRAC = 3.0E-3    ! max diffusion coeff, used in impl.vert.tracer diffusion, if stability crit.is met
/
&ocean_forcing_and_init_nml
  iforc_oce          = ${iforc}  ! ocean forcing:
  init_oce_prog      = ${init_oce}    ! read ocean initialization file, see above
  itestcase_oce      =   50      ! 25=shallow-water-Laeuter-Test; 26=shallow-water-Williamson test5;
                                 ! 30=3D-multilayer Stommel; 31=3D-gravity wave
                                 ! 32=Multilayer Munk-Gyre test (following Sergey Danilov)
                                 ! 33=Collapsing density front, requires realistic lsm and topography
                                 ! 34=Adjusting density front in an ocean basin
                                 ! 40=global temperature initialization for wind and temperature forcing tests
                                 ! 43=Collapsing density front at first level only with smaller amplitude (global)
                                 ! 45=horizontally homogen temperature
                                 ! 50=zonally homogen temperature for APE SST (Williamson)
  idiag_oce          =    1      !  0: no diagnostics; 1: write diagnostics to stderr
  temperature_relaxation= 3      !  1: switched on for some testcases only
                                 !  2: read 2m-temperature data for relaxation from bulk 
                                 !  3: use initial prognostic T and S as 2-dim relax (copy SST on omip-T)
                                 ! -1: use net surface heat flux from atmosphere as boundary condition
  relaxation_param   =    1.0    ! 2-dim relaxation of tracers, same value for temp. and salinity, months
                                 ! this value is divided by number of seconds per month (=30*24*3600)
/
&io_nml
  out_expname   = '${EXPNAME}'
  dt_data       = ${dt_data}
  dt_file       = ${dt_file}
  dt_checkpoint = ${dt_checkpoint}
  lkeep_in_sync = .TRUE.          ! sync after each timestep
/
EOF
#-----------------------------------------------------------------------------
