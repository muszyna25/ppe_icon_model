#=============================================================================
#
# This section of the run script containes the specifications of the ocean experiment.
# The specifications are passed by namelist to the program.
# For a complete list see Namelist_overview.pdf
#
# Default EXPNAME is the suffix of this script after "exp."
#
# Stephan Lorenz, MPI-M, 2011-01-26
#
#-----------------------------------------------------------------------------
#
# Preliminary test phase: run on specific systems and compiler only
#  - 2011-01-31: mpipc/tornado/squall - all compilers
#  - 2011-03-03: blizzard serial run included
#  - 2011-03-04: error test
if [ -z "$BB_SYSTEM" ]
then
  echo " ===== (no buildbot) ======="
  echo " Run ocean testcase $EXPNAME"
  echo " ==========================="
else
  if [ "$BB_SYSTEM" == "mpipc" -o "$BB_SYSTEM" == "squall" -o "$BB_SYSTEM" == "tornado" ]
  then 
# if [ "$BB_SYSTEM" == "mpipc" -o "$BB_SYSTEM" == "squall" -o "$BB_SYSTEM" == "tornado" -o [ "$BB_SYSTEM" == "blizzard" -a "$BB_SLAVE" == "blizz_nMnO" ] ]
    echo " ================================================="
    echo " Run ocean testcase $EXPNAME on BB_SLAVE=$BB_SLAVE"
    echo " ================================================="
  else
    if [ "$BB_SYSTEM" == "blizzard" -a "$BB_SLAVE" == "blizz_nMnO" ] 
    then
      echo " ================================================="
      echo " Run ocean testcase $EXPNAME on BB_SLAVE=$BB_SLAVE"
      echo " ================================================="
    else
      echo " ========================================================="
      echo " No ocean testcase is run on BB_SLAVE=$BB_SLAVE - exit now"
      echo " ========================================================="
      exit 0
    fi
  fi
fi
#
#-----------------------------------------------------------------------------
#
# Basic specifications of the simulation
# --------------------------------------
#
# These values are stored in variables, which are used in the namelist below
# Specific ocean parameters may be edited in the ocean_ctl at the end of this script
# 
R=2               # nroot
B=4               # number of bisections applied for the global grid
OPT=""            # grid optimization "hro", "spr0.90", "" default
#
IEQ=-1            # equation system
#                     1=hydrost. atm.
#                     2=non-hydrost. atm., 
#                     0=shallow water model
#                    -1=hydrost. ocean
#
# length of the integration in timesteps or days
NSTEPS=0             # for short model test - set NDAYS to zero when using NSTEPS
NDAYS=1              # number of model days to run - use alternatively to NSTEPS
#                    
DTIME=900            # time step in seconds
INIMONTH=3           # start month of integration
INIYEAR=2011         # start year of integration
# HGRIDDIR=""                                    # ocean grid path is default "$ICONDIR/grids"
# HGRIDDIR=/pool/data/ICON/grids                 # grid path is "pool"
# OGRIDNAME=""                                   # ocean horizontal grid file name is default
# OGRIDNAME=iconR${R}B0${B}-ocean_basin_0_60.nc  # grid file name for Peter's pentagonal basin
# USE_AQUAP="Y"      # "Y": ocean horizontal gridfile base is "aqua_planet"
  USE_ETOPO="Y"      # "Y": ocean horizontal gridfile base is "etopo40_flat"
# USE_BASIN="Y"      # "Y": ocean horizontal gridfile base is "bas10-80N"
#-----------------------------------------------------------------------------
#
# ICON namelist parameters
# ------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#
cat > NAMELIST_${EXPNAME} << EOF
!
&parallel_ctl
/
&testcase_ctl
/
&io_ctl
 out_expname = '${EXPNAME}' ! file name base
 dt_data     = 21600.       ! [s] output interval (6 hr)
 dt_file     = 3.1536e7     ! [s] interval for generation of new output file (3600*24*365 -> 1y)
 lkeep_in_sync = .TRUE.     ! sync after each timestep
/
&grid_ctl
 nroot       = ${R}         ! root division of icosahedron edges
 start_lev   = ${B}         ! number of bisections applied for the base grid
/
&run_ctl
 ! i_cell_type = 3          ! always triangular cells for ocean (default)
 iequations  = ${IEQ}       ! equation system
 dtime       = ${DTIME}     ! timestep in seconds
 nproma      = ${NPROMA}    ! array blocking length
 ini_year    = $INIYEAR     ! initial year
 ini_month   = $INIMONTH    ! initial month
 nsteps      = ${NSTEPS}    ! number of time steps to integrate
 run_day     = ${NDAYS}     ! number of days to integrate
 itopo       = 1            ! read bathymetry from gridfile
/
&nonhydrostatic_ctl
/
&dynamics_ctl
/
&transport_ctl
/
&diffusion_ctl
/
&interpol_ctl
/
&gridref_ctl
/
&regularization_ctl
/
&octst_ctl
  i_dbg_oce=1                    ! initialize MIN/MAX  debug output via mo_index_oce
  i_dbg_inx=0                    ! initialize one cell debug output via mo_index_oce
  str_proc_tst = 'abt',
    'vel', 'dif', 'trc', '   ', '   ', '   ', '   ', '   '
                                 ! define strings for processes to be printed out in debug mode
  rlat_in = 30.0 rlon_in = -70.0 ! lat/lon-location of one cell debug output
  h_val=1.0 t_val=1.0            ! initial values for elevation and temperature at one cell
/
&ocean_ctl
  n_zlev             =    4      ! number of vertical levels and (dzlev_m) thicknesses
  dzlev_m(1:20)      =  500.0,  500.0,  500.0,  500.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0,
                       1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0
  iswm_oce           =    0      ! switch for one layer shallow water model (iswm_oce=1) or 3-d
  i_oce_stepping     =    1      ! switch for different core formulations
  idisc_scheme       =    1      ! 1=mimetic discretization, 2=rbf discretization
  l_inverse_flip_flop = .FALSE.  ! within mimetic discretization:
                                 ! .TRUE. : full scalar product (slow)
                                 ! .FALSE.: reduced scalarproduct variant (fast and default)
  iforc_oce          =   11      ! ocean forcing: 0=no forcing, 11=stationary wind
  itestcase_oce      =   30      ! 25=shallow-water-Laeuter-Test; 26=shallow-water-Williamson test5;
                                 ! 30=3D-multilayer Stommel; 31=3D-gravity wave
                                 ! 32=Multilayer Munk-Gyre test (following Sergey Danilov)
                                 ! 33=Collapsing density front, requires realistic lsm and topography
  ab_beta            = 0.51      ! parameter for Adam-Bashforth time-stepping
  ab_gam             = 0.51      ! parameter for Adam-Bashforth time-stepping
  k_veloc_h          =  500.0    ! horizontal viscosity coefficient for velocity
  k_veloc_v          = 0.01      ! vertical viscosity coefficient for velocity
  k_pot_temp_h       =  200.0    ! horizontal viscosity coefficient for temperature
  k_pot_temp_v       = 0.01      ! vertical viscosity coefficient for temperature
  k_sal_h            = 0.0       ! horizontal viscosity coefficient for salinity
  k_sal_v            = 0.0       ! vertical viscosity coefficient for salinity
  solver_tolerance   = 1.0e-6
  EOS_TYPE           = 2         ! 1=linear EOS, 2= (nonlinear) Jacket-McDoudgall density-formulation
  no_tracer          = 1         ! tracer-transport: 0=no transport, 1=temperature, 2=temp. and salinity
  i_bc_veloc_lateral = 0         ! Boundary condition for normal velocity for lateral walls
  i_bc_veloc_top     = 1         ! Boundary condition for normal velocity for ocean top
  i_bc_veloc_bot     = 0         ! Boundary condition for normal velocity for ocean bottom
  bottom_drag_coeff  = 0.0025    ! Chezy coefficient for bottom friction
  wstress_coeff      = 0.2       ! wind stress coefficient for top boundary forcing
  basin_center_lat   = 30.0      ! lat-lon coordinate of basin center, used 
  basin_center_lon   =  0.0      ! in (non-global) basin configuration such as the Stommel-type tests
  basin_width_deg    = 80.0      ! basin extension in x-direction, units are degrees
  basin_height_deg   = 60.0      ! basin extension in y-direction, units are degrees
  coriolis_type      = 1         ! 0=zero Coriolis, the non-rotating case
                                 ! 1=full varying Coriolis
                                 ! 2=beta-plane (linear) approximation to Coriolis
                                 ! 3=f-plane (constant) approximation to Coriolis
                                 ! IMPORTANT: SOME TESTCASES REQUIRE SPECIFIC SETTINGS: 
                                 !  for Stommel-type basin (2D- and 3D, testcase 27 and/or 30) select
                                 !  f- or beta-plane.
  expl_vertical_velocity_diff = 0  ! 0=explicit, 1 = implicit  
  expl_vertical_tracer_diff   = 0  ! 0=explicit, 1 = implicit
/
EOF

# Different choices for parameters and levels:

# k_veloc_h       =   0.04
# k_veloc_v       =   0.01

# 4 level stommel test case
# n_zlev          =   4
# dzlev_m(1:20)   =  500.0,  500.0,  500.0,  500.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0,
#                   1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0

# 2 levels for shallow water - with 12m depth as in MPIOM and create_ocean_grid
# n_zlev          =   2
# dzlev_m(1:20)   =   12.0, 4976.0,  150.0,  300.0,  500.0,  500.0, 1000.0, 1000.0, 1000.0, 1000.0,
#                   1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0

# 5 levels for simple test case
# n_zlev          =   5
# dzlev_m(1:20)   =   50.0,  100.0,  350.0, 1500.0, 2000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0,
#                   1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0

# 5 levels for test case beginning with 12m depth as in MPIOM and create_ocean_grid
# n_zlev          =   5
# dzlev_m(1:20)   =   12.0,   38.0,  450.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0,
#                   1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0

# 10 levels for test case beginning with 12m depth as in MPIOM and create_ocean_grid
#  n_zlev         =   10
# dzlev_m(1:20)   =   12.0,   38.0,  150.0,  300.0,  500.0,  500.0, 1000.0, 1000.0, 1000.0, 1000.0,
#                   1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0

# 20 levels, low top resolution guess:
#  n_zlev         =   20
# dzlev_m(1:20)   =   20.0,   30.0,   50.0,   50.0,   50.0,  100.0,  150.0,  200.0,  250.0,  300.0,
#                    400.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0,  500.0
                  
# 20 levels MPIOM GR60 Helmuth
# n_zlev          =   20
# dzlev_m(1:20)   =   20.0,   20.0,   20.0,   30.0,   40.0,   50.0,   70.0,   90.0,  120.0,  150.0,
#                    180.0,  210.0,  250.0,  300.0,  400.0,  500.0,  600.0,  700.0,  900.0, 1400.0

# MPIOM 40 levels:
# n_zlev          =   40
# dzlev_m(1:40)   =   12.0,   10.0,   10.0,   10.0,   10.0,   10.0,   13.0,   15.0,   20.0,   25.0,
#                     30.0,   35.0,   40.0,   45.0,   50.0,   55.0,   60.0,   70.0,   80.0,   90.0,
#                    100.0,  110.0,  120.0,  130.0,  140.0,  150.0,  170.0,  180.0,  190.0,  200.0,
#                    220.0,  250.0,  270.0,  300.0,  350.0,  400.0,  450.0,  500.0,  500.0,  600.0

# MPIOM 80 levels:
# n_zlev          =   80
# dzlev_m(1:80)   =   12.0,   10.0,   10.0,   10.0,   10.0,   10.0,   10.0,   11.0,   11.0,   12.0,
#                     13.,13.,14.,14.,15.,16.,16.,17.,18.,19.,
#                     20.,21.,21.,22.,24.,25.,26.,27.,28.,29.,
#                     31.,32.,34.,35.,37.,39.,40.,42.,44.,46.,
#                     48.,50.,53.,55.,58.,60.,63.,66.,69.,72.,
#                     76.,79.,83.,87.,91.,95.,99.,104.,108.,113.,
#                     119.,124.,130.,136.,142.,149.,155.,163.,170.,178.,
#                     186.,195.,204.,213.,223.,233.,244.,255.,267.,279.,

