#!/bin/ksh
#-----------------------------------------------------------------------------
#
# Basic specifications of the simulation
# --------------------------------------
#
# These variables are set in the header section of the completed run script:
#
# EXPNAME = experiment name
# NPROMA  = array blocking length / inner loop length
# atmo_dyn_gridname
#
#
#-----------------------------------------------------------------------------
# the namelist filename
atmo_namelist=NAMELIST_${EXPNAME}
#
#-----------------------------------------------------------------------------
. ./nat_ape.default_values

#-----------------------------------------------------------------------------
# write ICON namelist parameters
# ------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
if [ x$lredgrid_phys = "x.true." ]; then
cat > ${atmo_namelist} << EOF
&grid_nml
 cell_type = ${cell_type}        ! triangular cells
 dynamics_grid_filename = "${atmo_dyn_grids}",
 radiation_grid_filename = "${atmo_rad_grids}",
 dynamics_radiation_grid_link = 1,
 lredgrid_phys   = ${lredgrid_phys},
/
EOF
else
cat > ${atmo_namelist} << EOF
&grid_nml
 cell_type = ${cell_type}        ! triangular cells
 dynamics_grid_filename = "${atmo_dyn_grids}",
/
EOF
fi
#
cat >> ${atmo_namelist} << EOF
&parallel_nml
 iorder_sendrecv = ${iorder_sendrecv}
 nproma         = ${nproma}
 use_icon_comm   = ${use_icon_comm}
 icon_comm_method = ${icon_comm_method} 
 max_send_recv_buffer_size = ${max_send_recv_buffer_size}
 max_mpi_message_size = ${max_mpi_message_size}
 p_test_run     = ${p_test_run}
 l_test_openmp  = ${l_test_openmp}
 l_log_checks   = ${l_log_checks}
 l_fast_sum     = .true.
 division_method=${division_method}
 division_file_name="$division_file_name"
 parallel_radiation_mode=$parallel_radiation_mode
 use_dycore_barrier = ${use_barrier}
 ! test_parallel_radiation = .true.
 ! icon_comm_debug = .true.
/
&run_nml
 num_lev     = ${nlevels},  ! number of full levels of vertical grid
 nsteps      = ${nsteps}    ! number of steps length of run
 dtime       = ${dtime}     ! [s] timestep in seconds
 ltestcase   = .TRUE.       ! run testcase                 --> testcase_ctl
 ldynamics   = .TRUE.       ! dynamics                     --> dynamics_ctl, diffusion_ctl
 ltransport  = .TRUE.       ! switch on tracer transport   --> transport_ctl
 ntracer     = ${ntracer}   ! number of tracers
 iforcing    = ${iforcing}  ! 
 ldump_states   = ${ldump_states}
 lrestore_states= ${lrestore_states}
 msg_level   =  $msg_level           ! detailed report during integration
 ltimer = ${ltimer}
 timers_level = ${timers_level}
 activate_sync_timers = ${activate_sync_timers}
 output       = ${output}
/
&dynamics_nml
 iequations      = 3  
 idiv_method     = 1
 divavg_cntrwgt  = 0.50
/
&nh_testcase_nml
 nh_test_name      = 'APE_nh'     ! test case identifier
 ape_sst_case      = 'sst1'
/
&nonhydrostatic_nml
 itime_scheme    = ${itime_scheme}    ! default 4; 5: modified Matsuno for better numerical stability of sound waves
 iadv_rhotheta   = 2
 ivctype         = 2        ! set vertical grid automatically using sleve_ctl
 igradp_method   = 3        ! new default
 iadv_rcf        = 2 ! ${advection_substepping}   ! microphysics and turb and sat adj 
 exner_expol     = 0.5    ! exner function extrapolation?
 rayleigh_coeff  = 0.10     ! Rayleigh coefficient for damping in upper levels
 vwind_offctr    = ${vwind_implicitness}     ! off-centering for time differencing (like alpha in turb)
 l_open_ubc      = .false.  ! top open upper boundary condition. might help to go higher
 damp_height     = 60000.   ! damping height (set about 10km below top)
 ! htop_moist_proc = 50000.   ! height above which moist physics and cld/precip advection off
 ! hbot_qvsubstep  = 60000.

 !damp_height     = 88000.   ! damping height (set about 10km below top)
 !htop_moist_proc = 45000.   ! height above which moist physics and cld/precip advection off
 !hbot_qvsubstep  = 86000.
/
&transport_nml
 ctracer_list='vwi456'       ! water vapour, cloud water, cloud ice, constant field, dummy for ozone
 ihadv_tracer  = 32,2,2,2,2,0
 ivadv_tracer  = 3,3,3,3,3,0
 ! igrad_c_miura = 1
 lvadv_tracer  = .TRUE.
 lstrang       = .FALSE.
 itype_hlimit = 3,4,4,4,4,0
 itype_vlimit  = 1
 iord_backtraj = 1          ! default: 1
/
&diffusion_nml
 hdiff_order      = 5
 ! hdiff_efdt_ratio = 8.0
 lhdiff_vn        = .TRUE.
 lhdiff_temp      = .TRUE.
 hdiff_multfac    = 1.0
 hdiff_tv_ratio   = 1.0
 ! hdiff_smag_fac   = 0.175
/
&sleve_nml                  ! vertical grid standard output for message level >= 15
 min_lay_thckn   = 20.      ! lowest level thickness (between half-levels)
 top_height      = 85000.
 flat_height     = 16000.
 stretch_fac     = 0.9      ! stretching towards model top (1.0 default; smaller - bigger top level thickness)
 decay_scale_1   = 4000.    ! decay scales for topography
 decay_scale_2   = 2500.
 decay_exp       = 1.2
/
&nwp_phy_nml
 inwp_gscp       = 10
 inwp_satad      = 1
 inwp_convection = 1
 inwp_cldcover   = 3        ! 0: no cld, 1: grid scale, 3: COSMO
 inwp_radiation  = 1        ! 1: RRTM, 2: Ritter-Geleyn
 inwp_turb       = 1        ! 1: Raschendorfer, 3: EDMF-DUALM, 4: ECHAM
 inwp_sso        = 0
 inwp_gwd        = 1
 inwp_surface    = 0
 dt_conv         = ${dt_conv},   ! every advection step
 dt_rad          = ${dt_rad},
 dt_sso          = ${dt_sso},    ! every advection step
 efdt_min_raylfric  = 7200.
/
&radiation_nml
 dt_rad     = ${dt_rad}     ! [s] compute radiative transfer every other hour
 irad_o3    = 7             ! 4= use APE ozone 0=no ozone 6: non-hydrostatic ozone
 izenith    = 3             ! circular orbit, no seasonal cycle but with diurnal cycle
 irad_h2o   = 1             ! prognostic vapor, liquid and ice
 irad_co2   = 2             ! constant co2 vmr
 irad_ch4   = 0             ! switch off ch4
 irad_n2o   = 0             ! switch off n2o
 irad_o2    = 0             ! switch off o2
 irad_cfc11 = 0             ! switch off cfc11
 irad_cfc12 = 0             ! switch off cfc12
 irad_aero  = 0             ! switch off aerosols
/
&io_nml
 out_expname      = '${EXPNAME}'     ! file name base
 dt_data          = ${dt_data}       ! [s] write output
 dt_file          = ${dt_file}       ! [s] trigger new output file
 dt_checkpoint    = ${dt_checkpoint} ! [s] trigger new restart file
 lwrite_vorticity   = .false.
 lwrite_divergence  = .false.
 lwrite_omega       = .false.
 lwrite_pres        = .false.
 lwrite_z3          = .true.
 lwrite_tracer      = .true.,.false.,.false.,.false.,.false.,.false.,
 lwrite_tend_phy  = .false.           ! add tendencies due to physics
 lwrite_radiation = .false.           ! add radiation fields to output
 lwrite_cloud     = .true.           ! add cloud fraction to output
 lwrite_precip    = .true.           ! add precipitation to output
 lwrite_pres      = .false.          ! remove pressure from output
 lwrite_extra     = .false.
 lwrite_surface    = .false.
/
&interpol_nml
 lsq_high_ord     = 2
/
EOF
#
#-----------------------------------------------------------------------------

run_atmo="true"
#-----------------------------------------------------------------------------
null_namelist="NAMELIST_null_${EXPNAME}"
cat > ${null_namelist} << EOF
&testbed_nml
  testbed_model = 0
/
EOF
#-----------------------------------------------------------------------------
dec_size=${dec_size:=$mpi_total_procs}
end_atmo_proc=`expr $dec_size - 1`
end_null_proc=`expr $mpi_total_procs - 1`
namelist_list=( "$atmo_namelist"  "$null_namelist" )
modelname_list=(   "atmo"          "null"          )
modeltype_list=(      1               99           )
minrank_list=(        0            $dec_size       )
maxrank_list=(  $end_atmo_proc    $end_null_proc   )
incrank_list=(        1                1           )
#-----------------------------------------------------------------------------


