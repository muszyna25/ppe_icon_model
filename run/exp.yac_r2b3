#!/bin/bash
#=============================================================================
#
# This section of the run script defines the experiment.
# The specifications are passed by namelist to the program.
# For a complete list see Namelist_overview.pdf
#
# Marco Giorgetta, MPI-M, 2011-01-29
# Hui Wan,         MPI-M, 2010-08-17
# Leonidas Linardakis, MPI-M, 2011-07-20
#
#-----------------------------------------------------------------------------
#
# Basic specifications of the simulation
# --------------------------------------
#
# These variables are set in the header section of the completed run script:
#   EXPNAME = experiment name
#   nproma  = array blocking length / inner loop length
# They may be overwritten here
#
#-----------------------------------------------------------------------------
# The following information is included to present some information on the buildbot-html main page
#
# _bb_table_Description_  coupled aqua planet, ocean with flat bottom
# _bb_table_Model_        hydrost. atm + ocean
# _bb_table_Grid_         triangle
#-----------------------------------------------------------------------------
# grids_folder=${icon_data_poolFolder}/grids/buildbot
grids_folder=${basedir}/grids
#
# Number of ocean processes
#
mpi_ocean_procs=${mpi_ocean_procs:=1}
#
#-----------------------------------------------------------------------------
if [ $mpi_total_procs -lt `expr $mpi_ocean_procs + 1` ] ; then
   echo "The coupled runs require at least 2 mpi procs. Exiting."
   check_error 0
   exit
fi
if [ $OMP_NUM_THREADS -gt 1 ] ; then
   echo "The coupled runs will not run in OpenMP mode . Exiting."
   check_error 0
   exit
fi

#-----------------------------------------------------------------------------
# ATMO
#-----------------------------------------------------------------------------
# The following values must be set here as shell variables so that they can be used
# also in the executing section of the completed run script
#-----------------------------------------------------------------------------
# the namelist filename
#
atmo_namelist=NAMELIST_${EXPNAME}_atmo
#
#-----------------------------------------------------------------------------
# global timing
#
start_date="2000-01-01T00:00:00Z"
  end_date="3000-01-01T00:00:00Z"
# global resolution
#
R=2   # nroot
B=3   # number of bisections applied
#
#time stepping
#
dtime_atmo=${dtime_atmo:=1200}
dtime_ocean=$hour
dtime_coupling=$dtime_ocean
#
#---------------------------------------------------------------------------
#model timing
# calculate model timesteps using $ndays
restart_units=1
(( dt_checkpoint = restart_units * month ))
(( dt_restart    = restart_units * month ))
#
atmo_output_interval="PT6H"
atmo_file_interval="P30D"   # 1 month
ocean_output_interval="PT12H"
ocean_file_interval="P30D"  # 1 month
#
#-----------------------------------------------------------------------------
# Dictionary
# 
dict_file="dict.${EXPNAME}"
cat dict.icoham.mpim > ${dict_file}
cat dict.echam.mpim >> ${dict_file}
#
#-----------------------------------------------------------------------------
# model parameters
#
atmo_model_equations=1   # equation system
#                        1=hydrost. atm.
#                        2=non-hydrost. atm., 
#                       -1=shallow water model
#                       -2=hydrost. ocean
nlev=31                  # nlev = number of full levels
iforcing=2               # ECHAM physics
#
#-----------------------------------------------------------------------------
# grid file
#
ocean_grids="iconR${R}B0${B}-ocean_aqua_planet.nc"
# atmo_dyn_grids="$ocean_grids" atmo uses the ocean grids
#-----------------------------------------------------------------------------
# ozon file
#
ozon_file="ape_o3_${ocean_grids}"
nproma=${nproma:=32}
#-----------------------------------------------------------------------------
#
# write YAC coupling xml file
#
atm_lag=2 # 2 for cold start, 1 for normal restart
#
cat > coupling.xml << EOF
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<coupling xmlns="http://www.w3schools.com"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.w3schools.com coupling.xsd">
   <redirect redirect_of_root="false" redirect_stdout="true"/>
   <components>
      <component id="1">
         <name>atmo</name>
         <model>ICON</model>
         <simulated>atmosphere</simulated>
         <transient_grid_refs>
            <transient_grid_ref collection_size="2" grid_ref="1" id="1" transient_ref="1"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="2" transient_ref="2"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="3" transient_ref="3"/>
            <transient_grid_ref collection_size="4" grid_ref="1" id="4" transient_ref="4"/>
            <transient_grid_ref collection_size="4" grid_ref="1" id="5" transient_ref="5"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="6" transient_ref="6"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="7" transient_ref="7"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="8" transient_ref="8"/>
            <transient_grid_ref collection_size="5" grid_ref="1" id="9" transient_ref="9"/>
         </transient_grid_refs>
      </component>
      <component id="2">
         <name>ocean</name>
         <model>ICON</model>
         <simulated>ocean</simulated>
         <transient_grid_refs>
            <transient_grid_ref collection_size="2" grid_ref="1" id="1" transient_ref="1"/>
            <transient_grid_ref collection_size="2" grid_ref="1" id="2" transient_ref="2"/>
            <transient_grid_ref collection_size="3" grid_ref="1" id="3" transient_ref="3"/>
            <transient_grid_ref collection_size="4" grid_ref="1" id="4" transient_ref="4"/>
            <transient_grid_ref collection_size="4" grid_ref="1" id="5" transient_ref="5"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="6" transient_ref="6"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="7" transient_ref="7"/>
            <transient_grid_ref collection_size="1" grid_ref="1" id="8" transient_ref="8"/>
            <transient_grid_ref collection_size="5" grid_ref="1" id="9" transient_ref="9"/>
         </transient_grid_refs>
      </component>
   </components>
   <transients>
      <transient id="1" transient_standard_name="surface_downward_eastward_stress"/>
      <transient id="2" transient_standard_name="surface_downward_northward_stress"/>
      <transient id="3" transient_standard_name="surface_fresh_water_flux"/>
      <transient id="4" transient_standard_name="total_heat_flux"/>
      <transient id="5" transient_standard_name="atmosphere_sea_ice_bundle"/>
      <transient id="6" transient_standard_name="sea_surface_temperature"/>
      <transient id="7" transient_standard_name="eastward_sea_water_velocity"/>
      <transient id="8" transient_standard_name="northward_sea_water_velocity"/>
      <transient id="9" transient_standard_name="ocean_sea_ice_bundle"/>
   </transients>
   <grids>
      <grid alias_name="grid1" id="1"/>
   </grids>
   <dates>
      <start_date>+2000-01-01T00:00:00.000</start_date>
      <end_date>+2100-01-01T00:00:00.000</end_date>
      <calendar>proleptic-gregorian</calendar>
   </dates>
   <timestep_unit>second</timestep_unit>
   <couples>
      <couple>
         <component1 component_id="1"/>
         <component2 component_id="2"/>
         <transient_couple transient_id="1">
            <source component_ref="1" transient_grid_ref="1"/>
            <target transient_grid_ref="1"/>
            <timestep>
               <source>${dtime_atmo}</source>
               <target>${dtime_ocean}</target>
               <coupling_period operation="average">${dtime_coupling}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.0"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="2">
            <source component_ref="1" transient_grid_ref="2"/>
            <target transient_grid_ref="2"/>
            <timestep>
               <source>${dtime_atmo}</source>
               <target>${dtime_ocean}</target>
               <coupling_period operation="average">${dtime_coupling}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.0"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="3">
            <source component_ref="1" transient_grid_ref="3"/>
            <target transient_grid_ref="3"/>
            <timestep>
               <source>${dtime_atmo}</source>
               <target>${dtime_ocean}</target>
               <coupling_period operation="average">${dtime_coupling}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.0"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="4">
            <source component_ref="1" transient_grid_ref="4"/>
            <target transient_grid_ref="4"/>
            <timestep>
               <source>${dtime_atmo}</source>
               <target>${dtime_ocean}</target>
               <coupling_period operation="average">${dtime_coupling}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.0"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="5">
            <source component_ref="1" transient_grid_ref="5"/>
            <target transient_grid_ref="5"/>
            <timestep>
               <source>${dtime_atmo}</source>
               <target>${dtime_ocean}</target>
               <coupling_period operation="average">${dtime_coupling}</coupling_period>
               <source_timelag>${atm_lag}</source_timelag>
               <target_timelag>1</target_timelag>
            </timestep>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.0"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="6">
            <source component_ref="2" transient_grid_ref="6"/>
            <target transient_grid_ref="6"/>
            <timestep>
               <source>${dtime_ocean}</source>
               <target>${dtime_atmo}</target>
               <coupling_period operation="none">${dtime_coupling}</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.0"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="7">
            <source component_ref="2" transient_grid_ref="7"/>
            <target transient_grid_ref="7"/>
            <timestep>
               <source>${dtime_ocean}</source>
               <target>${dtime_atmo}</target>
               <coupling_period operation="none">${dtime_coupling}</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.0"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="8">
            <source component_ref="2" transient_grid_ref="8"/>
            <target transient_grid_ref="8"/>
            <timestep>
               <source>${dtime_ocean}</source>
               <target>${dtime_atmo}</target>
               <coupling_period operation="none">${dtime_coupling}</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.0"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
         <transient_couple transient_id="9">
            <source component_ref="2" transient_grid_ref="9"/>
            <target transient_grid_ref="9"/>
            <timestep>
               <source>${dtime_ocean}</source>
               <target>${dtime_atmo}</target>
               <coupling_period operation="none">${dtime_coupling}</coupling_period>
               <source_timelag>1</source_timelag>
               <target_timelag>${atm_lag}</target_timelag>
            </timestep>
            <interpolation_requirements use_source_mask="true" use_target_mask="true">
               <interpolation method="n-nearest_neighbor" n="1" weighted="ARITHMETIC_AVERAGE"/>
               <interpolation method="fixed_value" user_value="-999.0"/>
            </interpolation_requirements>
            <debug_mode at_source_after_interpolation="false" at_source_before_interpolation="false" at_target="false"/>
            <enforce_write_restart>false</enforce_write_restart>
            <enforce_write_weight_file filename="">false</enforce_write_weight_file>
         </transient_couple>
      </couple>
   </couples>
</coupling>
EOF
#-----------------------------------------------------------------------------
# OCEAN
#-----------------------------------------------------------------------------
#
# The following values must be set here as shell variables so that they can be used
# also in the executing section of the completed run script
#
#-----------------------------------------------------------------------------
# the namelist filename
#
ocean_namelist=NAMELIST_${EXPNAME}_ocean
#
#-----------------------------------------------------------------------------
#
# prognostic ocean initialization files are named $HGRIDDIR/ts_phc_season-iconR${R}B0{B}-L11.nc
#
#-----------------------------------------------------------------------------
# ocean forcing = 14 is for coupling with the atmosphere, no forcing to be read
#
iforc_oce=14
#
# flux files are named $HGRIDDIR/omip4icon-R${R}B0{B}-monmean.nc
#
#-----------------------------------------------------------------------------
# model parameters
ocean_model_equations=-1 # equation system
#
#-----------------------------------------------------------------------------
#
# write ICON namelist parameters
# ------------------------------
# For a complete list see Namelist_overview and Namelist_overview.pdf
#
cat > ${ocean_namelist} << EOF
!
&coupling_mode_nml
  coupled_mode  = .TRUE.
/
&parallel_nml
 nproma         = ${nproma}
 p_test_run     = .FALSE.
 l_test_openmp  = .FALSE.
 l_log_checks   = .FALSE.
 l_fast_sum   = .TRUE.
/
&grid_nml
 dynamics_grid_filename = "${ocean_grids}",
 grid_angular_velocity = 7.29212e-5  !default earth angular velocity is 7.29212e-5
/
&run_nml
 output      = 'nml'
 dtime       = ${dtime_ocean}     ! [s] timestep in seconds
 ltimer      = .TRUE. 
 activate_sync_timers = .TRUE.
 profiling_output = 3
 msg_timestamp = .TRUE.
 msg_level     = 8
/
&output_nml
 filename_format  = "<output_filename>_<datetime2>"
 output_start     = "${start_date}"                  ! start in ISO-format
 output_end       = "${end_date}"                    ! end in ISO-format
 output_interval  = "${ocean_output_interval}"       ! interval in ISO-format
 file_interval    = "${ocean_file_interval}"
 ! include_last     = .TRUE.
 output_grid      = .TRUE.
 output_filename  = "${EXPNAME}_ocean"
 ml_varlist       = 'group:oce_default','group:ice_default'
/
&dbg_index_nml
  idbg_mxmn=1                     ! initialize MIN/MAX  debug output
  idbg_val =0                     ! initialize one cell debug output
  dbg_lat_in=30.0 dbg_lon_in=-20. ! lat/lon-location of one cell debug output
  str_mod_tst='all', 'module'     ! define modules to print out in debug mode
  idbg_slev=1                     ! initialize start level for debug output
  idbg_elev=5                     ! initialize end level for debug output
/
&dynamics_nml
 iequations  = ${ocean_model_equations}       ! 1: hydrost. atmosphere
/
&ocean_dynamics_nml
  n_zlev             =   20               ! number of vertical levels and (dzlev_m) thicknesses
  dzlev_m(1:20)      =   20.0,  20.0, 20.0 ,  30.0,  40.0,  50.0,  70.0,  90.0,
                        120.0, 150.0, 180.0, 210.0, 250.0, 300.0, 400.0, 500.0,
                        550.0, 600.0, 700.0, 700.0
 l_edge_based                   = .TRUE.  ! edge-(true) or cell-based (false) mimetic discretization
 l_partial_cells                = .FALSE. ! partial bottom cells=TRUE: local varying bottom depth
  select_solver                 = 2       ! 1=gmres_oce_old; 2=ocean_restart_gmres
  solver_tolerance              = 1.0E-14 ! absolute (new) or relative (gmres_oce_old) - to be checked
  solver_max_iter_per_restart   = 30      ! inner solver loop without syncing (default: 200)
  solver_max_restart_iterations = 50      ! outer (restart solver) loop with syncing (default: 100)
  use_continuity_correction     = .TRUE.
  i_bc_veloc_bot                = 1       !  0/1=bottom friction off/on
  i_bc_veloc_top                = 1       !  0/1/2=top
/
&ocean_tracer_transport_nml
  FLUX_CALCULATION_HORZ         = 1       ! 1=upwind, 2=central, 3=mimetic, 4=mimetic_miura, 5=FCT with Zalesak limiter
  FLUX_CALCULATION_VERT         = 1       ! 1=upwind, 2=central, 3=mimetic, 4=mimetic_miura, 7=upwind biased ppm
/
&ocean_diffusion_nml
  k_pot_temp_h         = 1.0E+3    ! [m2/s] constant horizontal diffusion coefficient for temperature - r2b4
  k_pot_temp_v         = 3.0E-5    ! [m/s]  vertical background diffusion coefficient for temperature - 20m
  k_sal_h              = 1.0E+3    ! [m2/s] constant horizontal diffusion coefficient for salinity - r2b4
  k_sal_v              = 3.0E-5    ! [m/s]  vertical background diffusion coefficient for salinity - 20m
  k_veloc_h            = 1.0E+5    ! [m2/s] horizontal viscosity coefficient for velocity
  k_veloc_v            = 5.0E-5    ! [m/s]  vertical background viscosity coefficient for velocity
  MAX_VERT_DIFF_TRAC   = 0.1       ! max vertical tracer diffusion for convection used in case of instability
  HORZ_VELOC_DIFF_TYPE = 1         ! 3: calculate varying horizontal viscosity coefficient according to Munk criterion
  MAX_VERT_DIFF_VELOC  = 1.0E-5    ! max vertical viscosity coefficient
/
&ocean_physics_nml
 !i_sea_ice            = 1         ! 0 = no sea ice; 1 = Winton; 2 = Semtner
 !no_tracer            = 2         ! tracer-transport: 0=no transport, 1=temperature, 2=temp. and salinity
  richardson_veloc     = 2.0e-3    ! factor for vertical viscosity coefficient in PP scheme
  richardson_tracer    = 2.0e-3    ! factor for vertical diffusion coefficient in PP scheme
  bottom_drag_coeff    = 2.5E-3  ! bottom drag coefficient default= 2.5E-3
/
&sea_ice_nml
  i_ice_therm   = 1
  i_ice_dyn     = 0                ! ice dynamics not yet ready for coupling
/
&ocean_forcing_nml
  iforc_oce              = ${iforc_oce} ! ocean forcing:
                                        ! NO_FORCING                 = 10
                                        ! FORCING_FROM_COUPLED_FLUX  = 14
  type_surfRelax_Temp    = -1           ! -1: use net surface heat flux from atmosphere as boundary condition
  para_surfRelax_Temp    = 3.0          ! strength of 2-dim relaxation for temperature (months)
                                        ! this value is divided by number of seconds per month (=30*24*3600)
  forcing_enable_freshwater = TRUE      ! enable freshwater flux
/
&ocean_initialConditions_nml
  ! itestcase_oce            = 50           ! 50=zonally homogen temperature for APE SST (Williamson)
  initial_salinity_type      = 402
  initial_temperature_type   = 207
  initial_sst_type           = 'sst1'
  initial_temperature_top    = 27.0
  initial_temperature_bottom = 0.0
/
&ocean_diagnostics_nml
  diagnostics_level  = 0
/
&io_nml
  dt_checkpoint=${dt_checkpoint}
  lkeep_in_sync = .TRUE.          ! sync after each timestep
 ! use_set_event_to_simstep = .false.
/
EOF
#-----------------------------------------------------------------------------

if [ $mpi_total_procs -lt 2 ] ; then
  check_error 0 "This setup requires at least 2 mpi processes. Exit"
fi

#-----------------------------------------------------------------------------
#split the number of procs in two for each of the dummy component
ocean_min_rank=`expr ${mpi_total_procs} - ${mpi_ocean_procs}`
ocean_max_rank=`expr ${ocean_min_rank} + ${mpi_ocean_procs} - 1`
ocean_inc_rank=1
atmo_min_rank=0
atmo_max_rank=`expr ${ocean_min_rank} - 1`
atmo_inc_rank=1
#-----------------------------------------------------------------------------
# fill model list
#namelist_list=( "$atmo_namelist"  "$ocean_namelist" )
#modelname_list=(   "atmo"           "ocean"         )
#modeltype_list=(     1                 2            )
#minrank_list=(  $atmo_min_rank   $ocean_min_rank    )
#maxrank_list=(  $atmo_max_rank   $ocean_max_rank    )
#incrank_list=(  $atmo_inc_rank   $ocean_inc_rank    )

namelist_list[0]="$atmo_namelist"
modelname_list[0]="atmo"
modeltype_list[0]=1
minrank_list[0]=$atmo_min_rank
maxrank_list[0]=$atmo_max_rank
incrank_list[0]=$atmo_inc_rank

namelist_list[1]="$ocean_namelist"
modelname_list[1]="ocean"
modeltype_list[1]=2
minrank_list[1]=$ocean_min_rank
maxrank_list[1]=$ocean_max_rank
incrank_list[1]=$ocean_inc_rank
#-----------------------------------------------------------------------------
# add standard atmo_hydrostatic_files
. ${thisdir}/add_required_atmo_hydrostatic_files
#-----------------------------------------------------------------------------
# copy dictionary file for variable names
add_required_file ${basedir}/run/${dict_file}                                ./
#-----------------------------------------------------------------------------
# copy xsd files for yac
add_required_file ${basedir}/run/coupling.xml  ./
add_required_file ${basedir}/run/coupling.xsd  ./
add_required_file ${basedir}/run/component.xsd ./
#-----------------------------------------------------------------------------

