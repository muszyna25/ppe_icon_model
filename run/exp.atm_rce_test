#--------------------------------------------------------------------------------------------------
#
# Radiative Convective Equilibrium experiment (RCE)
#
author_list="Marco Giorgetta, MPIM"
#
#--------------------------------------------------------------------------------------------------
#
# This file describes a radiative convective equilibrium experiment on the sphere based on the
# non-hydrostatic atmosphere and the ECHAM physics. The experiment is intialized analytically
# and uses constant-in-time boundary conditions for:
# - SST and sea ice
# - spectral solar irradiation
# - well mixed greenhouse gases CO2, CH4, N2O, CFCs
# - O3 concentration
#
# No aerosols are used
#
# _bb_table_Description_  radiative convective equilibrium
# _bb_table_Model_        non-hydrostatic atmosphere with ECHAM physics
#
#--------------------------------------------------------------------------------------------------

# (1) Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# icon_data_poolFolder          = base directory, where grids/, input/ and setup/ exist
# nproma                        = blocking length for array dimensioning and inner loop lengths
# second, minute, hour, day     = length of these intervals in [s]

#--------------------------------------------------------------------------------------------------

# (2) Set variables needed by the scripting mechanism

# horizontal grid(s)
grids_folder=${icon_data_poolFolder}/grids/private/r2b4_amip/r0002
atmo_dyn_grids='r2b4_amip.nc'

# start and end date+time
start_date="1979-01-01T00:00:00Z"
  end_date="1979-01-01T00:16:00Z"

# restart intervals
checkpoint_interval="PT8M"
restart_interval="PT16M"
#
# NEEDED TO KEEP THIS TEST WORKING WITHOUT "--enable-mtime-loop" CONFIGURATION.
# TO BE DELETED AFTER THE "mtime time loop" IS COMPLETELY IMPLEMENTED.
(( dt_checkpoint =  8 * minute))    # !! MUST BE EQUAL TO "checkpoint_interval"  !!
(( dt_restart    = 16 * minute))    # !! MUST BE EQUAL TO "restart_interval"     !!

# output intervals
output_interval_3d="PT4M"
output_interval_2d="PT4M"
file_interval="PT4M"

# namelist files
atmo_namelist=NAMELIST_${EXPNAME}_atm

#--------------------------------------------------------------------------------------------------

# (3) Define the model configuration

# atmospheric dynamics and physics
# --------------------------------
cat > ${atmo_namelist} << EOF
!
&parallel_nml
 nproma           = ${nproma}
/
&grid_nml
 dynamics_grid_filename = "${atmo_dyn_grids}",
/
&run_nml
 num_lev          = 47          ! number of full levels
 dtime            = 240         ! [s] time step   !! MUST BE EQUAL TO "modelTimeStep" !!
 modelTimeStep    = "PT4M"
 ltestcase        = .TRUE.      ! run testcase
 ldynamics        = .TRUE.      ! dynamics
 ltransport       = .TRUE.      ! transport
 ntracer          = 3           ! number of tracers
 iforcing         = 2           ! 0: none, 1: HS, 2: ECHAM, 3: NWP
 output           = 'nml'
 msg_level        = 15          ! level of details report during integration 
 restart_filename = "${EXPNAME}_restart_atm_<rsttime>.nc"
 irad_type        = 2
 activate_sync_timers = .TRUE.
/
&dynamics
 lcoriolis        = .FALSE.
/
&nh_testcase_nml
 nh_test_name     = 'APE_echam'
 ape_sst_case     = 'sst_const'
 ape_sst_val      = 29.0        ! [degC]
/
&nonhydrostatic_nml
 ndyn_substeps    = 2           ! dtime/dt_dyn
 damp_height      = 50000.      ! [m]
 rayleigh_coeff   = 0.10
 vwind_offctr     = 0.2
 divdamp_fac      = 0.004
/
&interpol_nml
 rbf_scale_mode_ll = 1
/
&sleve_nml
 min_lay_thckn    = 40.         ! [m]
 top_height       = 83000.      ! [m]
 stretch_fac      = 0.9
 decay_scale_1    = 4000.       ! [m]
 decay_scale_2    = 2500.       ! [m]
 decay_exp        = 1.2
 flat_height      = 16000.      ! [m]
/
&diffusion_nml
/
&transport_nml
 ivadv_tracer     = 3,3,3
 itype_hlimit     = 3,4,4
 ihadv_tracer     = 52,2,2
/
&echam_phy_nml
 dt_rad           =  480.       ! [s] radiation time step
 lrad             = .TRUE.
 lvdiff           = .TRUE.
 lconv            = .TRUE.
 lcond            = .TRUE.
 lgw_hines        = .TRUE.
 lssodrag         = .FALSE.
 lice             = .FALSE.
 ljsbach          = .FALSE.
 lebudget         = .FALSE.
 lmlo             = .FALSE.
 lamip            = .FALSE.
/
&radiation_nml
 irad_h2o         = 1           ! 1: prognostic vapor, liquid and ice
 irad_co2         = 2           ! 2: constant co2
 irad_ch4         = 0           ! 0: no ch4
 irad_n2o         = 0           ! 0: no n2o
 irad_o3          = 0           ! 0: no o3 FOR TESTING
 irad_o2          = 0           ! 0: no o2
 irad_cfc11       = 0           ! 0: no cfc11
 irad_cfc12       = 0           ! 0: no cfc12
 irad_aero        = 0           ! 0: no aerosol
 isolrad          = 0           ! 0: constant default solar irradiance (at 1 AE)
/
&psrad_nml
rad_perm          = 1           ! Integer for perturbing random number seeds
/
&echam_conv_nml
/
&echam_cloud_nml
/
&gw_hines_nml
/
EOF

#--------------------------------------------------------------------------------------------------

# (4) Define the input

# model files
#
add_link_file ${basedir}/data/rrtmg_lw.nc                               ./
add_link_file ${basedir}/data/rrtmg_sw.nc                               ./
add_link_file ${basedir}/data/ECHAM6_CldOptProps.nc                     ./

# namelist files
#
add_required_file ${basedir}/run/${atmo_namelist}                       ./

# dictionary file for output variable names
#
dict_file="dict.${EXPNAME}"
cat dict.iconam.mpim_inst  > ${dict_file}
add_required_file ${basedir}/run/${dict_file}                           ./

INDATA=${icon_data_poolFolder}/input/r0004

# boundary conditions
#
# range of years for yearly files
# assume start_date and end_date have the format yyyy-...
start_year=$(( ${start_date%%-*} - 1 ))
end_year=$(( ${end_date%%-*} + 1 ))
#
# - well mixed greenhouse gases
datadir=$INDATA/global/atm
add_link_file $datadir/bc_greenhouse_rcp45_1765-2500.nc                 ./bc_greenhouse_gases.nc
#
# - ozone
datadir=$INDATA/r2b4_amip/atm/bc_ozone_cmip5
year=$start_year
while [[ $year -le $end_year ]]
do
  add_link_file $datadir/bc_ozone_cmip5_${year}.nc                      ./bc_ozone_${year}.nc
  (( year = year+1 ))
done

#--------------------------------------------------------------------------------------------------

# (5) Define the output

# Parameters for all output files
# -------------------------------
cat >> ${atmo_namelist} << EOF
&io_nml
 dt_checkpoint    = ${dt_checkpoint}  !  NEEDED TO KEEP THIS TEST WORKING WITHOUT "--enable-mtime-loop" CONFIGURATION.
 output_nml_dict  = "${dict_file}"
 netcdf_dict      = "${dict_file}"
 lnetcdf_flt64_output = .TRUE.
 itype_pres_msl   = 4
/
EOF

# Define output files
# -------------------
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>

output_atm_3d=yes
#
if [[ "$output_atm_3d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval_3d}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ta','ua','va','wap','hus','hur','cl','clw','cli','rho',
                    'zg','pfull','ps'
/
EOF
fi


output_atm_2d=yes
#
if [[ "$output_atm_2d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval_2d}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'orog'    , 'ps'      , 'psl'     ,
                    'cosmu0'  , 'rsdt'    ,
                    'rsns'    , 'rlns'    , 'rsnt'    , 'rlnt'    ,
                    'ts'      ,
                    'sic'     , 'sit'     ,
                    'albedo'  ,
                    'clt'     ,
                    'prlr'    , 'prls'    , 'prcr'    , 'prcs'    ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'tauu'    , 'tauv'    ,
                    'tauu_sso', 'tauv_sso', 'diss_sso', 
/
EOF
fi


output_phy_3d=yes # "yes" increases the output volume significantly!
#
if [[ "$output_phy_3d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_phy_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval_3d}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'tend_ta'      , 'tend_ta_dyn'  , 'tend_ta_phy'  ,
                    'tend_ta_rlw'  , 'tend_ta_rsw'  ,
                    'tend_ta_vdf'  , 'tend_ta_gwh'  ,
                    'tend_ta_cnv'  , 'tend_ta_cld'  , 
                    'tend_ua'      , 'tend_ua_dyn'  , 'tend_ua_phy'  ,
                    'tend_ua_vdf'  , 'tend_ua_gwh'  ,
                    'tend_ua_cnv'  , 
                    'tend_va'      , 'tend_va_dyn'  , 'tend_va_phy'  ,
                    'tend_va_vdf'  , 'tend_va_gwh'  ,
                    'tend_va_cnv'  ,
                    'tend_hus'     , 'tend_hus_dyn' , 'tend_hus_phy' ,
                    'tend_hus_cld' , 'tend_hus_cnv' , 'tend_hus_vdf' ,
                    'pfull','ps'
/
EOF
fi

#--------------------------------------------------------------------------------------------------
