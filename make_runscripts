#!/bin/ksh
#==============================================================================
# Creates the ICON run scripts
# Leonidas Linardakis, MPI-M, 2011-25-1
#==============================================================================
#==============================================================================
# The basic command for creating an ICON experiment run script is
#   
#  $make_runscript in_script=exp.<name> in_script=exec.iconrun EXPNAME=<name>
#
# By default the folder in use is ./run, and the run script is named exp.<name>.run.
# 
# Basic optional parameters for the $make_runscript command are:
#
#    out_script=<output run script name>. By default is <in_script>.run
#
#    in_folder=<input folder>. By default is run
#
#    out_folder=<output folder>. By default is =<in_folder>
#
#    mpi_procs=<number of mpi processes>. In the case of MPI configuration,
#       defines how many processes per node will be used.
# 
#    no_of_nodes=<Number of nodes>. In the case of MPI configuration,
#       defines how many nodes will be used.
# 
#    openmp_threads=<Number of openmp threads>. In the case of OPENMP
#       configuration, defines how many OPENMP threads will be used.
#
#    cpu_time=<wall time>. Defines the expected run wall time.
#  
#    <free_variable>=<value> Free variables can be passed to the run script
#       using this syntax. For example: EXPNAME=test, will result the
#       definition of the variable EXPNAME=test in the run script. 
   

#
# For more details see the parameters in the ./config/make_target_runscript
#==============================================================================
# set -x
echo "-----------------------------------------------------------"
base_folder=$(pwd)
input_folder=run
#==============================================================================
. $base_folder/config/set-up.info
use_shell=${use_shell:="/bin/ksh"}
# The $make_runscript command directs to the ./config/make_target_runscript
make_runscript="$use_shell ./config/make_target_runscript"

#==============================================================================
# use express queue for builtbot experiments on blizzard
if [[ $use_target = "blizzard" && $use_mpi = "yes" ]] ; then
  use_queue="express"
else
  use_queue="default"
fi

#==============================================================================
#  Create the grid generator run scripts
#  NOTE: The grid generator runs with 1 MPI proccess, but can use the default OPENMP threads
#==============================================================================
cd $input_folder
file_list=`ls grid.*`
cd $base_folder
for filename in $file_list
do
  if [[ $filename != *.run && $filename != *~ && $filename != *.status ]] ; then
    $make_runscript in_folder=$input_folder in_script=${filename}  mpi_procs=1\
    queue="$use_queue" cpu_time="00:30:00"
  fi
done
#  Create the grid generator for builtbot
$make_runscript in_folder=$input_folder in_script=grid.create_atmo_grids\
  in_script=grid.create_ocean_grids out_script=grid.create_bb_grids.run\
  mpi_procs=1 queue="$use_queue" cpu_time="00:30:00"


#==============================================================================
# Create the ICON experiment run scripts
# These consist of the namelist definition in exp.<name> file and the
# run part, defined in the exec.iconrun file.
#
# Note: The ICON experiments require the definition of the EXPNAME=<name> variable
#==============================================================================
omp_stacksize=200M
cd $input_folder
file_list=`ls exp.*`
cd $base_folder
for filename in $file_list
do
  if [[ $filename != *.run && $filename != *~ &&  $filename != *.status ]] ; then
    # Note: hydrostatic ocean model (hom) not yet parallelized
    name=${filename#*.}
    if [[ ${name} == test* ]]; then
      queue="$use_queue"
    else
      queue="default"
    fi
    
    if [[ ${name} == test_hom_* ]]; then
      $make_runscript in_folder=$input_folder in_script=${filename} in_script=exec.iconrun EXPNAME=${name}\
      mpi_procs=1 memory_model="large" cpu_time="01:00:00" queue="express"
    elif [[ ${name} == *_hom_* ]]; then
      $make_runscript in_folder=$input_folder in_script=${filename} in_script=exec.iconrun EXPNAME=${name}\
      mpi_procs=1 memory_model="large" cpu_time="08:00:00"
    elif [[ ${name} == *_nwp_* ]] ; then
      $make_runscript in_folder=$input_folder in_script=${filename} in_script=exec.iconrun EXPNAME=${name}\
      cpu_time="04:00:00" memory_model="huge"  omp_stacksize="500M" queue="$queue"
    elif [[ ${name} == *_nah_jww* ]] ; then
      $make_runscript in_folder=$input_folder in_script=${filename} in_script=exec.iconrun EXPNAME=${name}\
      cpu_time="08:00:00" memory_model="large" omp_stacksize=$omp_stacksize queue="$queue"
    elif [[ ${name} == *_nh35_tri_jws* ]] ; then
      $make_runscript in_folder=$input_folder in_script=${filename} in_script=exec.iconrun EXPNAME=${name}\
      cpu_time="04:00:00" memory_model="small" queue="$queue"
    else
      $make_runscript in_folder=$input_folder in_script=${filename} in_script=exec.iconrun EXPNAME=${name}\
      cpu_time="04:00:00" memory_model="large" omp_stacksize=$omp_stacksize queue="$queue"
    fi
  fi
done
#==============================================================================

#==============================================================================
# use express queue for some of the builtbot seq,openmp experiments on blizzard
if [[ $use_target = "blizzard" ]] ; then

  name=test_nh3_tri_tracer_solid_body
  $make_runscript in_folder=$input_folder in_script=exp.$name in_script=exec.iconrun\
  EXPNAME="$name"  memory_model="large" omp_stacksize=$omp_stacksize queue="express"
  
  if [[ $use_openmp = "yes" ]] ; then

    name=test_nh35_tri_jws
    $make_runscript in_folder=$input_folder in_script=exp.$name in_script=exec.iconrun\
    EXPNAME="$name"  memory_model="small" queue="express"
    
  fi
fi

#==============================================================================
# special treatment for exp.couple_atmo-radiation
# if [[  $use_target == "mpipc" && $use_openmp == "yes" ]] ; then
#   name=couple_atmo-radiation
#   $make_runscript in_folder=$input_folder in_script=exp.$name in_script=exec.iconrun EXPNAME="$name" openmp_threads=3
# fi
#==============================================================================


#==============================================================================
# special treatment for exp.test_hom_lsm
# this includes the restart in the exp.test_hom_lsm_restart
#
queue="express"

name=test_hom_lsm

restart_script=${name}_restart.tmp
tmp_file=$input_folder/$restart_script
cat > $tmp_file << EOF
restart_from_folder="$name"
restart_ocean_from="restart.iconR2B04-ocean_etopo40_planet_20000101T120000Z_oce.nc"
EXPNAME=${name}_restart
EOF

$make_runscript in_folder=$input_folder in_script=exp.$name in_script=exec.iconrun\
  in_script=$restart_script in_script=exp.$name in_script=exec.iconrun EXPNAME="$name"\
  queue="$queue" cpu_time="01:00:00"

rm $tmp_file

#==============================================================================
# special treatment for test_hat_jww
# this includes the restart in the test_hat_jww_restart
#
name=test_hat_jww

restart_script=${name}_restart.tmp
tmp_file=$input_folder/$restart_script
cat > $tmp_file << EOF
restart_from_folder="$name"
restart_atmo_from="restart.iconR2B04-grid_20080906T000000Z_atm.nc"
EXPNAME=${name}_restart
EOF

$make_runscript in_folder=$input_folder in_script=exp.$name in_script=exec.iconrun\
  in_script=$restart_script in_script=exp.$name in_script=exec.iconrun EXPNAME="$name"\
  queue="$use_queue" cpu_time="01:00:00"

rm $tmp_file

#==============================================================================
# special treatment for test_hat_jww
# this includes the restart in the test_hat_jww_restart
#
name=test_hat_jww

restart_script=${name}_restart.tmp
tmp_file=$input_folder/$restart_script
cat > $tmp_file << EOF
restart_from_folder="$name"
restart_atmo_from="restart.iconR2B04-grid_20080906T000000Z_atm.nc"
EXPNAME=${name}_restart
EOF

$make_runscript in_folder=$input_folder in_script=exp.$name in_script=exec.iconrun\
  in_script=$restart_script in_script=exp.$name in_script=exec.iconrun EXPNAME="$name"\
  queue="$use_queue" cpu_time="01:00:00"

rm $tmp_file

#==============================================================================


#==============================================================================
# Create the postprocessing scripts
#
# NOTE: The postprocessing scripts are all sequential, so we define:
#    with_mpi="no" with_openmp="no"
#==============================================================================
cd $input_folder
file_list=`ls post.*`
cd $base_folder
for filename in $file_list
do
  if [[ $filename != *.run && $filename != *~ &&  $filename != *.status ]] ; then
    $make_runscript in_folder=$input_folder in_script=${filename} out_script=${filename}.run\
    with_mpi="no" with_openmp="no" queue="$use_queue" cpu_time="01:00:00"
  fi
done


echo "-----------------------------------------------------------"
