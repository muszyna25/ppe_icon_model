#! /bin/bash
#______________________________________________________________________________
#
# Creates the ICON run scripts
# Original version by Leonidas Linardakis, MPI-M, 2011-25-1
#______________________________________________________________________________
#______________________________________________________________________________
#
# The basic command for creating an ICON experiment run script is
#   
#  $make_runscript in_script=exp.<name> in_script=exec.iconrun EXPNAME=<name>
#
# By default the folder in use is ./run, and the run script is named
# exp.<name>.run.
# 
# Basic optional parameters for the $make_runscript command are:
#
#    out_script=<output run script name>. By default is
#    <in_script>.run
#
#    in_folder=<input folder>. By default is run
#
#    out_folder=<output folder>. By default is =<in_folder>
#
#    mpi_procs_pernode=<number of mpi processes>. In the case of MPI
#       configuration, defines how many processes per node will be
#       used.
# 
#    no_of_nodes=<Number of nodes>. In the case of MPI configuration,
#       defines how many nodes will be used.
# 
#    openmp_threads=<Number of openmp threads>. In the case of OPENMP
#       configuration, defines how many OPENMP threads will be used.
#
#    cpu_time=<wall time>. Defines the expected run wall time.
#  
#    <free_variable>=<value> Free variables can be passed to the run
#       script using this syntax. For example: EXPNAME=test, will
#       result the definition of the variable EXPNAME=test in the run
#       script.
#
# For more details see the parameters in the
#./run/make_target_runscript
#______________________________________________________________________________

set -eu

while getopts "hr:s:" opt
do
    case $opt in
        h) echo "usage: ./make_runscripts [-r <run directory to process>]"
           echo "                         [-s <experiment name>]"    
	   exit 0
	   ;;
        r) my_run_folder="${OPTARG}"
	   ;;
        s) my_experiment_name="${OPTARG}"
	   ;;
    esac
done

#______________________________________________________________________________
#==============================================================================

if [[ -f ./run/set-up.info ]]
then
    source ./run/set-up.info
else
    echo "ERROR: Could not find './run/set-up.info' file !"
    exit 1
fi

use_shell=${use_shell:="/bin/bash"}

# default for options

in_folder=${my_run_folder:="run"}
name=${my_experiment_name:="all"}

#______________________________________________________________________________
# define the runscripts to be created
name_found="no"

# experiment runscript

if [[ -r "${in_folder}/exp.${name}" ]]
then
    name_found="yes"
    
    #__________________________________________________________________________
    # Create the experiment run script
    #
    # This consist of a target specific header, the experiment description in
    # exp.<name> and the executing part in exec.iconrun.
    #
    # Note: The ICON experiments require the definition of the
    #       EXPNAME=<name> variable
    #__________________________________________________________________________
    
    ./run/make_target_runscript \
	in_folder=${in_folder} \
	in_script=exp.${name} \
	in_script=exec.iconrun EXPNAME=${name} \
	memory_model="large" \
	omp_stacksize=200M
fi

# post-processing runscript

if [[ -r "${in_folder}/post.${name}" ]]
then
    name_found="yes"

    #__________________________________________________________________________
    # Create the postprocessing script
    #
    # This consist of a target specific header and the executing part
    # in post.<name>.
    #
    # NOTE: The postprocessing script is sequential, so we define:
    #    with_mpi="no" with_openmp="no"
    #__________________________________________________________________________
    
    ./run/make_target_runscript \
	in_folder=${in_folder} \
	in_script=post.${name} \
	out_script=post.${name}.run \
	EXPNAME=${name} \
	with_mpi="no" \
	with_openmp="no" \
	queue="express"
fi

# do not remove the all case as this is heavily used in infrastructure testing

if [[ "${name}" == "all" ]]
then
    all_experiments=$( (cd ${in_folder} && ls -1 exp.* | egrep -v ".run$") )
    for experiment in $all_experiments
    do
	expname=${experiment##*.}
	./run/make_target_runscript \
	    in_folder=${in_folder} \
	    in_script=${experiment} \
	    in_script=exec.iconrun \
	    EXPNAME=${expname} \
	    memory_model="large" \
	    omp_stacksize=200M
    done
else
    # error message if nothing found
    if [[ "$name_found" = "no" ]]
    then
	echo
	echo "ERROR: Found neither exp.${name} nor post.${name} in ./${in_folder} !"
	echo "usage: ./make_runscripts [-r <run directory to process>]"
	echo "                         [-s <experiment name>]"
	echo
	exit 1
    fi
fi

exit 0
#______________________________________________________________________________
