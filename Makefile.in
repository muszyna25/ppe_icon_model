export

SHELL = /bin/bash

ARCH = @ARCH@
OS   = @OS@

HOST = @HOST@
SITE = @SITE@

srcdir = @srcdir@
VPATH = @srcdir@

prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
libdir = @libdir@

NETCDFFROOT    = @NETCDFFROOT@
NETCDFROOT     = @NETCDFROOT@
NETCDFLIBPATH  = @NETCDFLIBPATH@
NETCDF_LIB     = @NETCDF_LIB@
NETCDF_INCLUDE = @NETCDF_INCLUDE@

CDIROOT     = @CDIROOT@
CDILIBPATH  = @CDILIBPATH@
CDI_LIB     = @CDI_LIB@
CDI_INCLUDE = @CDI_INCLUDE@

HDF5ROOT       = @HDF5ROOT@
HDF5_LIB       = @HDF5_LIB@
HDF5_INCLUDE   = @HDF5_INCLUDE@

SZIPROOT       = @SZIPROOT@
SZIP_LIB       = @SZIP_LIB@
SZIP_INCLUDE   = @SZIP_INCLUDE@

ZLIBROOT       = @ZLIBROOT@
ZLIB_LIB       = @ZLIB_LIB@
ZLIB_INCLUDE   = @ZLIB_INCLUDE@

GRIBAPIROOT    = @GRIBAPIROOT@
GRIBAPI_LIB    = @GRIBAPI_LIB@
GRIBAPI_INCLUDE= @GRIBAPI_INCLUDE@

SCTROOT        = @SCTROOT@
SCT_LIB        = @SCT_LIB@
SCT_INCLUDE    = @SCT_INCLUDE@

XML2ROOT       = @XML2ROOT@
XML2_LIB       = @XML2_LIB@
XML2_INCLUDE   = @XML2_INCLUDE@

YAXTROOT        = @YAXTROOT@
YAXT_LIB        = @YAXT_LIB@
YAXT_INCLUDE    = @YAXT_INCLUDE@

MPIROOT        = @MPIROOT@
MPI_LIB        = @MPI_LIB@
MPI_INCLUDE    = @MPI_INCLUDE@

LAPACKROOT     = @LAPACKROOT@
LAPACK_LIB_PATH= @LAPACK_LIB_PATH@
LAPACK_LIB     = @LAPACK_LIB@

PROFILE_LIB     = @PROFILE_LIB@
PROFILE_INCLUDE = @PROFILE_INCLUDE@

SERIALBOX2ROOT        = @SERIALBOX2ROOT@
SERIALBOX2_LIB        = @SERIALBOX2_LIB@
SERIALBOX2_INCLUDE    = @SERIALBOX2_INCLUDE@

OTHER_LIBS     = @OTHER_LIBS@

LIBS           = @LIB@ $(LAPACK_LIB) $(NETCDF_LIB) $(CDI_LIB) $(HDF5_LIB) $(SZIP_LIB) $(ZLIB_LIB) $(GRIBAPI_LIB) $(XML2_LIB) $(YAXT_LIB) $(MPI_LIB) $(PROFILE_LIB) $(SCT_LIB) $(OTHER_LIBS) $(SERIALBOX2_LIB)
INCLUDE        = -I../include -I../../../src/include  $(YAXT_INCLUDE) $(MPI_INCLUDE) $(NETCDF_INCLUDE) $(CDI_INCLUDE) $(HDF5_INCLUDE) $(SZIP_INCLUDE) $(ZLIB_INCLUDE) $(GRIBAPI_INCLUDE) $(XML2_INCLUDE) $(PROFILE_INCLUDE) $(SCT_INCLUDE) $(SERIALBOX2_INCLUDE)
INCLUDES       = $(INCLUDE)

AS             = @AS@

CC             = @CC@
CFLAGS         = $(INCLUDE) @CFLAGS@

NVCC           = @NVCC@
NVCFLAGS       = @NVCFLAGS@

FC             = @FC@
FFLAGS         = $(INCLUDES) @MODDIR@ @FFLAGS@
FlibFLAGS      = $(INCLUDES) @MODDIR@ @FlibFLAGS@
F77            = @F77@
F77FLAGS       = @F77FLAGS@

AR             = @AR@
ARFLAGS        = @ARFLAGS@

LDFLAGS        = @LDFLAGS@

SRCDIRS        = @SRCDIRS@
OBJDIRS        = @OBJDIRS@

ECHO_N = @ECHO_N@

.PHONY: doc

all:
	@for DIR in $(OBJDIRS) ;\
	  do \
	    back=`pwd`; \
	    cd $$DIR && $(MAKE) ; status=$$? ; \
	    if [ $$status != 0 ] ; then \
	      echo "Exit status from make was $$status" ; exit $$status ; \
	    fi ; \
	    cd $$back ; \
	  done 
model:
	@for DIR in $(OBJDIRS) ;\
	  do LASTDIR=$$DIR ;\
	done ;\
	back=`pwd` ;\
	cd $$LASTDIR && $(MAKE) icon  ;\
	cd $$back

one:
	@for DIR in $(OBJDIRS) ;\
	  do LASTDIR=$$DIR ;\
	done ;\
	back=`pwd` ;\
	cd $$LASTDIR && $(MAKE) $(name)  ;\
	cd $$back


install:
	@for DIR in $(OBJDIRS) ;\
	  do \
	  (cd $$DIR && $(MAKE) install ; if [ $$? != 0 ] ; then \
	        echo "Exit status from make was $$?" ; exit 1 ; fi ;) ;\
	  done

clean:
	@for DIR in $(OBJDIRS) ;\
	  do \
	  (cd $$DIR && $(MAKE) clean ; if [ $$? != 0 ] ; then \
	        echo "Exit status from make was $$?" ; exit 1 ; fi ;) ;\
	  done
	-rm -f ${exec_prefix}/bin/*
	-rm -f ${exec_prefix}/lib/*.a
	-rm -f ${exec_prefix}/module/*.mod
	-rm -f ${exec_prefix}/src/*.o
	-rm -f ${exec_prefix}/src/*.a
	-rm -f ${exec_prefix}/src/*.f90
	-rm -rf html/[a-z]*

distclean:
	-rm -rf build
	-rm Makefile
	-rm build_command
	-rm config.log
	-rm config.status
	-rm config/config.h
	-rm -f config/mh-config-use
	-rm config/set-up.info
	-rm -rf doc/html
	-rm -rf doc/latex
	-rm -rf html/[a-z]*
	-rm -f src/messy_interface
	-rm -f src/lnd_phy_jsbach 
	-rm -f externals/ecrad/module/*
	-rm -f externals/ecrad/lib/*
	-rm -f externals/ecrad/*/*.o
	-rm -f externals/ecrad/*/*.i
	-rm -f externals/ecrad/*/*.lst
	-rm -f externals/ecrad/Makefile_include.ecradICON

doc:
	doxygen doc/resources/doxyfile_icon_html
	@echo 
	@echo "Start of HTML documentation: doc/html/index.html"
	@echo 

pdf: 
	doxygen doc/resources/doxyfile_icon_pdf

index:
	-rm -rf html/[a-z]*
	scripts/f2html_scripts/f2html.pl -f scripts/f2html_scripts/fgenrc -d html $(SRCDIRS)

checkstyle:
	scripts/code_processing/process_src -v


check:
	@. config/set-up.info ; \
	mpi_total_procs=4 ; \
	for testprog in $(exec_prefix)/bin/test_* ; do \
	echo $(ECHO_N) "$$testprog: " | sed -e 's/^.*\///'; \
	case "$$testprog" in  *_mp|*_mpi) \
	eval $$use_mpi_startrun \"\$$testprog\" && echo "SUCCESS" \
	|| echo "ERROR" ;; \
	*) "$$testprog" && echo "SUCCESS" || echo "ERROR" ;; \
	esac ; done
