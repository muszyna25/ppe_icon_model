# The resulting convenience library satisfies the following
# dependencies from the main code:
# ../.objs/mo_c_restart_util.o: .objs/util_multifile_restart.o
# ../.objs/mo_exception.o: .objs/util_backtrace.o util_system.o
# ../.objs/mo_expression.o: .objs/util_arithmetic_expr.o
# ../.objs/mo_fortran_tools.o: .objs/util_stride.o
# ../.objs/mo_hierarchy_management.o ../.objs/mo_real_timer.o: .objs/util_timer.o
# ../.objs/mo_name_list_output_init.o ../.objs/mo_var_list.o: .objs/util_hash.o
# ../.objs/mo_output_event_handler.o: .objs/util_string.o
# ../.objs/mo_util_file.o: .objs/util_file.o
# ../.objs/mo_util_nml.o: .objs/nml_annotate.o
# ../.objs/mo_util_string_parse.o: .objs/util_string_parse.o
# ../.objs/mo_util_sysinfo.o: .objs/util_sysinfo.o
# ../.objs/mo_util_uuid.o: .objs/util_uuid.o
# ../.objs/mo_util_vcs.o: .objs/version.o

# Source files:
SRC_FILES=                 \
  nml_annotate.c           \
  util_arithmetic_expr.c   \
  util_backtrace.c         \
  util_file.c              \
  util_hash.c              \
  util_multifile_restart.c \
  util_stride.c            \
  util_string.c            \
  util_string_parse.c      \
  util_sysinfo.c           \
  util_system.c            \
  util_timer.c             \
  util_uuid.c

# Build directories:
DEP_DIR=.deps
OBJ_DIR=.objs

# Output library file:
LIB_FILE=@builddir@/libicon_support.a

# Compilers and flags:
CC=@CC@
CFLAGS=@CFLAGS@
CPPFLAGS=-I@builddir@ @DEFS@ @CPPFLAGS@

# Dependency generation command:
DEPGEN=@PYTHON@ @top_srcdir@/utils/mkhelper/depgen.py $< -o $@ \
       --obj-name $(OBJ_DIR)/$(<F:.c=.o) --src-name $(<F) \
       --src-root='@srcdir@' --pp-enable --pp-eval-expr --

# Lists of the dependency and object files:
DEP_FILES=$(addprefix $(DEP_DIR)/, $(SRC_FILES:.c=.c.d))
OBJ_FILES=$(addprefix $(OBJ_DIR)/, $(SRC_FILES:.c=.o))

# Source file selective search paths:
vpath %.c @srcdir@

# Disable built-in suffix rules:
.SUFFIXES:
# Targets not associated with files:
.PHONY: all depend clean distclean maintainer-clean install create-version
# Keep sentinel files of created directories:
.PRECIOUS: %/.dirstamp

# User interface rules:
all: $(LIB_FILE)

depend: $(DEP_FILES)

clean:
	rm -rf $(DEP_DIR) $(OBJ_DIR) $(LIB_FILE)

distclean: clean
	rm -f Makefile config.h version.c

maintainer-clean: distclean
	rm -rf config.h.in~

install: all

# Main building rules:
$(LIB_FILE): $(OBJ_FILES) $(OBJ_DIR)/version.o
	rm -f $@ && $(AR) cru $@ $^

$(OBJ_DIR)/%.o: %.c | $(OBJ_DIR)/.dirstamp
	$(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<

# Recreate version.c each time make is called:
version.c: create-version
	@echo "Checking for repository, branch and revision..."; \
	@PERL@ @top_srcdir@/utils/pvcs.pl --srcdir @top_srcdir@

# Some old versions of GNU Make strip the trailing slash when
# searching for pattern rules, which is why we have to
# create sentinel files inside the created directories:
%/.dirstamp:
	@echo "Creating directory '$(@D)'..."; mkdir $(@D); touch $@

# Dependency generation rule:
$(DEP_DIR)/%.c.d: %.c | $(DEP_DIR)/.dirstamp
	@$(DEPGEN) $(CPPFLAGS) $(CFLAGS)

ifeq (,$(filter $(MAKECMDGOALS), depend clean distclean maintainer-clean))
-include $(DEP_FILES)
endif
