#!/bin/bash

set -eu

MPI_ROOT='/sw/rhel6-x64/mpi/openmpi-2.0.2p2_hpcx-intel14'
MPI_CPPFLAGS="-I${MPI_ROOT}/include"
MPI_FCFLAGS="-I${MPI_ROOT}/lib -I${MPI_ROOT}/include"
MPI_LDFLAGS="-L${MPI_ROOT}/lib"
MPI_LIBS='-lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi'
MPI_LAUNCH="${MPI_ROOT}/bin/mpiexec"

NETCDF_ROOT='/sw/rhel6-x64/netcdf/netcdf_c-4.4.0-parallel-openmpi2-intel14'
NETCDF_CPPFLAGS="-I${NETCDF_ROOT}/include"
NETCDF_LDFLAGS="-L${NETCDF_ROOT}/lib"
NETCDF_LIBS='-lnetcdf'

NETCDFF_ROOT='/sw/rhel6-x64/netcdf/netcdf_fortran-4.4.3-parallel-openmpi2-intel14'
NETCDFF_FCFLAGS="-I${NETCDFF_ROOT}/include"
NETCDFF_LDFLAGS="-L${NETCDFF_ROOT}/lib"
NETCDFF_LIBS='-lnetcdff'

GRIBAPI_ROOT='/sw/rhel6-x64/grib_api/grib_api-1.15.0-gcc48'
GRIBAPI_CPPFLAGS="-I${GRIBAPI_ROOT}/include"
GRIBAPI_LDFLAGS="-L${GRIBAPI_ROOT}/lib"
GRIBAPI_LIBS='-lgrib_api'

BLAS_LAPACK_LDFLAGS='-mkl=sequential'

XML_ROOT='/usr'
XML_CPPFLAGS="-I${XML_ROOT}/include/libxml2"
XML_LDFLAGS="-L${XML_ROOT}/lib64"
XML_LIBS='-lxml2'

AEC_ROOT='/sw/rhel6-x64/sys/libaec-0.3.2-gcc48'
AEC_CPPFLAGS="-I${AEC_ROOT}/include"
AEC_LDFLAGS="-L${AEC_ROOT}/lib"
AEC_LIBS="-lsz -laec"

######################

MY_DIR=$(cd "$(dirname "$0")"; pwd)
ICON_DIR="${MY_DIR}/../.."
PREFIX="${PWD}/install"

BUILD_ENV=". /sw/rhel6-x64/etc/profile.mistral ; . ${MY_DIR}/build_env_init.sh; switch_for_modules intel/18.0.4 openmpi/2.0.2p2_hpcx-intel14;"


FC='/sw/rhel6-x64/intel/intel-17.0.6/bin/ifort'
CC='/sw/rhel6-x64/intel/intel-17.0.6/bin/icc'
F77='/sw/rhel6-x64/intel/intel-17.0.6/bin/ifort'

PERL=perl

ICON_CFLAGS="-std=gnu99 -gdwarf-4 -O3 -qno-opt-dynamic-align -ftz -march=native -DHAVE_LIBNETCDF -DHAVE_NETCDF4 -DHAVE_NETCDF2 -DgFortran"
ICON_FCFLAGS="${MPI_FCFLAGS} ${NETCDFF_FCFLAGS} -fpp -assume realloc_lhs -DDO_NOT_COMBINE_PUT_AND_NOCHECK -D__NO_RTE_RRTMGP__ -qopenmp -ftz -O2 -march=native -pc64 -fp-model source -g "

CFLAGS=-qopenmp
FCFLAGS="${MPI_FCFLAGS} ${NETCDFF_FCFLAGS}"
CPPFLAGS="${MPI_CPPFLAGS} ${NETCDF_CPPFLAGS} ${GRIBAPI_CPPFLAGS} ${XML_CPPFLAGS}"

LDFLAGS="-gdwarf-4 ${MPI_LDFLAGS} ${NETCDF_LDFLAGS} ${NETCDFF_LDFLAGS} ${GRIBAPI_LDFLAGS} ${BLAS_LAPACK_LDFLAGS} ${XML_LDFLAGS}"
LIBS="${XML_LIBS} ${GRIBAPI_LIBS} ${NETCDFF_LIBS} ${NETCDF_LIBS} ${MPI_LIBS}"

# Set LD_LIBRARY_PATH inside BUILD_ENV to enable the location of dynamic
# libraries at the configure time and when running 'make check'. Note that
# some of the bundled libraries use libtool, which explicitly links to
# -lpnetcdf but does not set RPATH flags for it. The resulting executables
# fail because the library is not in the runtime library search path.
# Therefore, we need to add an additional path to LD_LIBRARY_PATH:
BUILD_ENV="$BUILD_ENV LD_LIBRARY_PATH=\"`echo " ${LDFLAGS}" | sed -e 's/[ ][ ]*-L[ ]*/:/g' -e 's/[ ][ ]*/:/g'`:/sw/rhel6-x64/netcdf/parallel_netcdf-1.6.1-openmpi2-intel14/lib:\$LD_LIBRARY_PATH\"; export LD_LIBRARY_PATH;"

${ICON_DIR}/configure BUILD_ENV="$BUILD_ENV" FC="$FC" FCFLAGS="$FCFLAGS" CC="$CC" CFLAGS="$CFLAGS" CPPFLAGS="$CPPFLAGS" LDFLAGS="$LDFLAGS" LIBS="$LIBS" MPI_LAUNCH="${MPI_LAUNCH}" ICON_CFLAGS="$ICON_CFLAGS" ICON_FCFLAGS="$ICON_FCFLAGS" --enable-grib2 --enable-active-target-sync --enable-parallel-netcdf --enable-openmp --enable-mixed-precision --enable-yaxt --prefix="${PREFIX}" "$@"

MAKE_PROCS=22
make -j ${MAKE_PROCS}

./config.status --file=run/create_target_header --file=run/exec.iconrun --file=run/add_run_routines --file=run/set-up.info

test -f make_runscripts ||  cp ${ICON_DIR}/make_runscripts .
test -d scripts ||  ln -s ${ICON_DIR}/scripts .
test -d data  || ln -s ${ICON_DIR}/data .
rsync -avz ${ICON_DIR}/externals . --del  --exclude='.git' --exclude='*.f90' --exclude='*.F90' --exclude='*.c' --exclude='*.h' --exclude='*.Po' --exclude='tests' --exclude='rrtmgp*.nc' --exclude='*.mod' --exclude='*.o'
