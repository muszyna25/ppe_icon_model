#!/bin/bash

set -eu
unset CDPATH

SCRIPT_DIR=$(cd "$(dirname "$0")"; pwd)
ICON_DIR=$(cd "${SCRIPT_DIR}/../.."; pwd)

MODULES='gcc/6.4.0 intelmpi/2017.2.174'

SW_ROOT='/sw/rhel6-x64'

HDF5_ROOT="${SW_ROOT}/hdf5/hdf5/hdf5-1.8.14-threadsafe-gcc48"
HDF5_LIBS='-lhdf5'

NETCDF_ROOT="${SW_ROOT}/netcdf/netcdf_c-4.4.0-gcc48"
NETCDF_LIBS='-lnetcdf'

NETCDFF_ROOT="${SW_ROOT}/netcdf/netcdf_fortran-4.4.3-gcc62"
NETCDFF_LIBS=$(${NETCDFF_ROOT}/bin/nf-config --flibs)

GRIBAPI_ROOT="${SW_ROOT}/grib_api/grib_api-1.15.0-gcc48"
GRIBAPI_LIBS='-lgrib_api'

MKL_ROOT="${SW_ROOT}/intel/intel-18.0.4/mkl"
MKL_LIBS='-lmkl_gf_lp64 -lmkl_sequential -lmkl_core'

XML2_ROOT='/usr'
XML2_LIBS='-lxml2'

################################################################################

BUILD_ENV=". /sw/rhel6-x64/etc/profile.mistral; . \"${SCRIPT_DIR}/module_switcher\"; switch_for_module ${MODULES};"

CC='mpicc'
CFLAGS='-g -march=native -mpc64'
ICON_CFLAGS='-O3'
ICON_BUNDLED_CFLAGS='-O2'
CPPFLAGS="-I${HDF5_ROOT}/include -I${NETCDF_ROOT}/include -I${GRIBAPI_ROOT}/include -I${XML2_ROOT}/include/libxml2"

FC='mpif90'
FCFLAGS="-I${NETCDFF_ROOT}/include -fmodule-private -fimplicit-none -fmax-identifier-length=63 -Wall -Wcharacter-truncation -Wconversion -Wunderflow -Wunused-parameter -Wno-surprising -fall-intrinsics -g -march=native -mpc64"
ICON_FCFLAGS='-std=f2008 -fbacktrace -fbounds-check -fstack-protector-all -finit-real=nan -finit-integer=-2147483648 -finit-character=127 -O2'
ICON_YAC_FCFLAGS='-std=gnu -fbacktrace -fbounds-check -fstack-protector-all -finit-real=nan -finit-integer=-2147483648 -finit-character=127 -O2'
ICON_OCEAN_FCFLAGS='-O3'

LDFLAGS="-L${HDF5_ROOT}/lib -L${NETCDF_ROOT}/lib -L${NETCDFF_ROOT}/lib -L${GRIBAPI_ROOT}/lib -L${MKL_ROOT}/lib/intel64"
LIBS="-Wl,--as-needed ${XML2_LIBS} ${MKL_LIBS} ${GRIBAPI_LIBS} ${NETCDFF_LIBS}"

MPI_LAUNCH='mpiexec'

EXTRA_CONFIG_ARGS='--enable-active-target-sync'

################################################################################

"${ICON_DIR}/configure" \
BUILD_ENV="${BUILD_ENV}" \
CC="${CC}" \
CFLAGS="${CFLAGS}" \
CPPFLAGS="${CPPFLAGS}" \
FC="${FC}" \
FCFLAGS="${FCFLAGS}" \
ICON_BUNDLED_CFLAGS="${ICON_BUNDLED_CFLAGS}" \
ICON_CFLAGS="${ICON_CFLAGS}" \
ICON_FCFLAGS="${ICON_FCFLAGS}" \
ICON_YAC_FCFLAGS="${ICON_YAC_FCFLAGS}" \
ICON_OCEAN_FCFLAGS="${ICON_OCEAN_FCFLAGS}" \
LDFLAGS="${LDFLAGS}" \
LIBS="${LIBS}" \
MPI_LAUNCH="${MPI_LAUNCH}" \
${EXTRA_CONFIG_ARGS} \
"$@"

for arg in "$@"; do
  case $arg in
    -help | --help | --hel | --he | -h | -help=r* | --help=r* | --hel=r* | --he=r* | -hr* | -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
      test -n "${EXTRA_CONFIG_ARGS}" && echo '' && echo "This wrapper script ('$0') calls the configure script with the following extra arguments, which might override the default values listed above: ${EXTRA_CONFIG_ARGS}"
      exit 0 ;;
  esac
done

# Copy runscript-related files when building out-of-source:
if test $(pwd) != $(cd "${ICON_DIR}"; pwd); then
  echo "Copying runscript input files from the source directory..."
  rsync -uavz ${ICON_DIR}/run . --exclude='*.in' --exclude='.*' --exclude='standard_*'
  ln -sf -t run/ ${ICON_DIR}/run/standard_*
  ln -sf set-up.info run/SETUP.config
  rsync -uavz ${ICON_DIR}/externals . --exclude='.git' --exclude='*.f90' --exclude='*.F90' --exclude='*.c' --exclude='*.h' --exclude='*.Po' --exclude='tests' --exclude='rrtmgp*.nc' --exclude='*.mod' --exclude='*.o'
  rsync -uavz ${ICON_DIR}/make_runscripts .
  ln -sf ${ICON_DIR}/data
  ln -sf ${ICON_DIR}/vertical_coord_tables
fi

