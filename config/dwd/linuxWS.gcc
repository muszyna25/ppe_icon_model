#!/bin/bash

set -eu

SCRIPT_DIR=$(cd "$(dirname "$0")"; pwd)
ICON_DIR=$(cd "${SCRIPT_DIR}/../.."; pwd)

# Base dir for (most of) the external libraries on a typical Linux workstation:
GLOBAL_LIB_ROOT="/usr"
GLOBAL_LIB_DIRS="-L${GLOBAL_LIB_ROOT}/lib64 -L${GLOBAL_LIB_ROOT}/lib"

RTTOV_LIB_ROOT="/home/ublahak/DACE/dace_play/misc/test_rttov_lib_building/rttov12.1_ub/linuxWS.gcc"
RTTOV_INCLUDE="${RTTOV_LIB_ROOT}/include"
RTTOV_LIB="-L${RTTOV_LIB_ROOT} -lrttov12"

# Assume that HDF5 resides under the GLOBAL_LIB_ROOT:
HDF5_INCLUDE="${GLOBAL_LIB_ROOT}/include"
HDF5_LIBS='-lhdf5_hl -lhdf5 -lhdf5hl_fortran -lhdf5_fortran'

# Assume that Netcdf resides under the GLOBAL_LIB_ROOT:
NETCDF_INCLUDE="${GLOBAL_LIB_ROOT}/include"
NETCDF_LIBS='-lnetcdff -lnetcdf'

# Assume that eccodes resides under the GLOBAL_LIB_ROOT:
ECCODES_INCLUDE="${GLOBAL_LIB_ROOT}/include"
ECCODES_LIBS='-lgrib_api_f90 -lgrib_api -laec'

# Assume that lapack and blas reside under the GLOBAL_LIB_ROOT:
BLAS_LAPACK_LIBS='-llapack -lblas'

# Assume that xml2 resides under the GLOBAL_LIB_ROOT:
XML2_INCLUDE="${GLOBAL_LIB_ROOT}/include"
XML2_LIBS='-lxml2'

# Assume that zlib (needed for EMVORADO) resides under the GLOBAL_LIB_ROOT:
ZLIB_LIBS='-lz'


################################################################################

BUILD_ENV=""

# C compiler wrapper on cray machine
CC='mpicc'
CFLAGS='-std=gnu99'
ICON_CFLAGS='-O2'
ICON_BUNDLED_CFLAGS='-O2'
CPPFLAGS="-I${ECCODES_INCLUDE} -I${HDF5_INCLUDE} -I${NETCDF_INCLUDE} -I${XML2_INCLUDE} -I${RTTOV_INCLUDE}"

# Fortran compiler wrapper on Linux workstation using OpenMPI
FC='mpif90'
FCFLAGS="-I${GLOBAL_LIB_ROOT}/include -I${RTTOV_INCLUDE} -cpp -std=f2008 -fimplicit-none -fmax-identifier-length=63 -fmax-errors=25 -Wall -Wcharacter-truncation -Wconversion -Wunderflow -Wunused-parameter -Wno-surprising -fall-intrinsics -ffree-line-length-132"

ICON_FCFLAGS='-fno-range-check -fopenmp -g -fbacktrace -fcheck=all -ffpe-trap=invalid,zero,overflow -fstack-protector-all -finit-real=nan -finit-integer=-2147483648 -finit-character=127 -O2'
ICON_OCEAN_FCFLAGS="${ICON_FCFLAGS}"

LDFLAGS="${GLOBAL_LIB_DIRS} -g -fbacktrace"
LIBS="${XML2_LIBS} ${BLAS_LAPACK_LIBS} ${NETCDF_LIBS} ${HDF5_LIBS} ${ECCODES_LIBS} ${ZLIB_LIBS} ${RTTOV_LIB}"

MPI_LAUNCH='mpiexec'

EXTRA_CONFIG_ARGS='--enable-grib2 --enable-openmp --disable-ocean --disable-jsbach --enable-rttov'

################################################################################

"${ICON_DIR}/configure" \
BUILD_ENV="${BUILD_ENV}" \
CC="${CC}" \
CFLAGS="${CFLAGS}" \
CPPFLAGS="${CPPFLAGS}" \
FC="${FC}" \
FCFLAGS="${FCFLAGS}" \
ICON_BUNDLED_CFLAGS="${ICON_BUNDLED_CFLAGS}" \
ICON_CFLAGS="${ICON_CFLAGS}" \
ICON_FCFLAGS="${ICON_FCFLAGS}" \
ICON_OCEAN_FCFLAGS="${ICON_OCEAN_FCFLAGS}" \
LDFLAGS="${LDFLAGS}" \
LIBS="${LIBS}" \
MPI_LAUNCH="${MPI_LAUNCH}" \
${EXTRA_CONFIG_ARGS} \
"$@"

for arg in "$@"; do
  case $arg in
    -help | --help | --hel | --he | -h | -help=r* | --help=r* | --hel=r* | --he=r* | -hr* | -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
      test -n "${EXTRA_CONFIG_ARGS}" && echo '' && echo "This wrapper script ('$0') calls the configure script with the following extra arguments, which might override the default values listed above: ${EXTRA_CONFIG_ARGS}"
      exit 0 ;;
  esac
done

# Generate input file for runscript generation:
./config.status --file=run/set-up.info
echo 'use_mpi_root="openmpi"' >> run/set-up.info

# Copy runscript-related files when building out-of-source:
if test $(pwd) != $(cd "${ICON_DIR}"; pwd); then
  echo "Copying runscript input files from the source directory..."
  rsync -uavz ${ICON_DIR}/run . --exclude='*in' --exclude='.*'
  rsync -uavz ${ICON_DIR}/externals . --exclude='.git' --exclude='*.f90' --exclude='*.F90' --exclude='*.c' --exclude='*.h' --exclude='*.Po' --exclude='tests' --exclude='rrtmgp*.nc' --exclude='*.mod' --exclude='*.o'
  rsync -uavz ${ICON_DIR}/make_runscripts .
  ln -sf ${ICON_DIR}/data
  ln -sf ${ICON_DIR}/vertical_coord_tables
fi

