#! /bin/ksh
#-----------------------------------------------------------------------------
#
# README file for simple plotting with NCL
# ========================================
# Marco Giorgetta, MPI-M,  2009-03-22
#
# Valid for icon-1.0.6_RESTRUCT
#
#-----------------------------------------------------------------------------
#
# General
# -------
# NCL is probably the plotting software on which we want to rely mostly
# for standard plotting of model data. The advantages are that (1) NCL
# has an active development team, (2) a broad user community, (3) can be
# used without licence fee, and (4) can handle data on unstructured grids,
# which is iomportant for ICON.
#
# Together with the model development we want to develop NCL scripts for
# standardized evaluation and plotting of experiments, especially of the
# 'test suite' experiments.
#
# In the longer term this should evolve into a postprocessing environment
# that uses NCL for plotting in a standardized setup, so that fonts, color
# tables etc. are preset in a nice and useful way, allowing for print
# quality output. Therefore a first step is to use a common default setting,
# as given by the '.hluresfile' in this directory. Please copy this file to
# your home directory or make otherwise sure that its setting are used in
# your NCL setup to avoid ugly plots or errors.
#
#-----------------------------------------------------------------------------
#
# Postprocessing and plotting scripts
# -----------------------------------
#
# (0) Primitive plotting scripts for horizontal plot of a 
#     variable on a specified timestep and model level
#
# Files: exportvars.bash, plotvar.ncl, plotdiff.ncl
#
# Edit exportvars.bash to set variable, file, timestep
# model level and output type (screen, ps, eps or pdf).
# Then:
. exportvars.bash ; ncl plotvar.ncl
#
#
# (1) Plotting scripts (will replace (0))
#
# Files: plot_scalar_and_vector, plot_single_contour.ncl
#        plot_diff_scalar_and_vector, plot_diff_contour.ncl
#
# Use 'plot_scalar_and_vector -h' and 'plot_diff_scalar_and_vector -h'
# for explanations of the script options, then:
plot_scalar_and_vector <your options> <input file>
#
# (2) Postprocessing and plotting for the Jablonowski Williamson
#     baroclinic wave test
#
# Files: JWw_postpro_driver.bash, JWw_postpro_scripts/*
#
# Edit the 'icon_path' variable in 'JWw_postpro_driver.bash'.
# Change other variables if necessary, then
JWw_postpro_driver.bash
# This will take a while. Then you find plots in the path
# defined by '$plot_file_path' in 'JWw_postpro_driver.bash'.
# 
#-----------------------------------------------------------------------------
