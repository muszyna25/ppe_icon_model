#!/bin/ksh
#=========================================================================
# MANUAL
# - produces monthly means
# - plots for climate experiments
# - selects ensembles of runs initiated in same month
# - cycles over periods (e.g. months, seasons, years)
# - plots difference map against a control and observations,
#   zonal means and winds against ERA40
# - plot_opt
#   101 (e.g.)
#   1  : single month means
#    1 : seasons means
#     1: whole experiment mean
#
# USAGE
# climplot.interactive
#   -m # 1,2,3=do the monthly means: 1=expver 2=control 3=both
#   -l # levels
#   -b # branch to get code from
#   -e # expver id
#   -c # control id
#   -i # start dates
#   -d # directory
#   -f # fc len
#   -r # fc range for average of operations or ERA40 (offline only)
#   -p # plot_control (see below)
# or redefine the defaults below
#
# examples:
# * era40 annual mean: 
#   ~/metview/climate/climplot.interactive -m 1 -l 60 -e era40 -c 1 -r 1 -f 9000 -i 19991230
#
#=========================================================================
# ORIGINAL POOPY-PANTS  VERSION  Martin Koehler  1  August 2002
# MODIFIED SLEAK-N-SEXY VERSION  Adrian Tompkins 21 May    2004
# MODIFIED FANCY ICON   VERSION  Martin Koehler  17 March  2011
#=========================================================================
  set -ex # 

  DIR=$SCRATCH  # default target location

  BRANCH=view_paw_CY29R1_climplot

  MMEANS=0 : switch monthly means off # 
#        1 : compute monthly means for EXPVER
#        2 : compute monthly means for EXPVER2
#        3 : compute monthly means for both EXPVER and EXPVER2

# Set the following to mimic prepifs
  EXPVER=ehar             # experiment ID (e.g. e9va)
  EXPVER2=ehar            # experiment ID2 - to compare (e.g. e9wo or 0 for none)

  USE_DATES_LIST="yes"    # yes/no - do not change this is u want to use command line
# case: USE_DATES_LIST="no" : for the moment ignore this
  INIBEGINDATE=20000801   # start
  INIENDDATE=20000803     # initial time (e.g. 1987050112 or 1987110112)
  INIBY=24                # interval between start dates [hours]
# case: USE_DATES_LIST="yes"
    INITIME=20000801/20000802/20000803   # set to datelist with "/" 
  FCLENGTH=9528           # forecast length
  FCRANGE=-99             # forecast range - !!!climate run set to -99 DO NOT CHANGE DEFAULT!!!
  LEVELS=91               # number of model levels (e.g. 50, 60 or 91)
  locclass1='rd'

# PLOT LEVEL - three digits zero or ones: 
#          x   - plot individual months(*)
#           x  - plot seasons 
#            x - plot experiment mean 
  PLOT_OPT=001
# (*) Note if you want to plot individual months you MUST 
#     recompute the monthly mean files for both the control and the 
#     sensivity experiment, since these are not done 
#     automatically under SMS, and will not be on ECFS   
#     (unless you have already computed them with this script)
#     call the script with 
#     -m 1 : compute monthly means for EXPVER
#     -m 2 : compute monthly means for EXPVER2
#     -m 3 : compute monthly means for both EXPVER and EXPVER2

#=========================================================================
#
# default command line options
#
while getopts m:b:l:i:f:r:e:d:c:p: option
do
   case $option in
    m) MMEANS=$OPTARG;;      # do the monthly means
    l) LEVELS=$OPTARG;;      # levels
    b) BRANCH=$OPTARG;;      # branch to get code from
    e) EXPVER=$OPTARG;;      # expver
    c) EXPVER2=$OPTARG;;     # control
    i) INITIME=$OPTARG;;     # start dates
    f) FCLENGTH=$OPTARG;;    # fc len
    r) FCRANGE=$OPTARG;;     # fc range
    d) DIR=$OPTARG;;         # directory location if not scratch
    p) PLOT_OPT=$OPTARG;;    # plot_control
   \?) errflg=1;;
   esac
done

# get source code
CODEDIR="~/scripts/postprocessing/climplot"
cp climplot_batch compvar_ens.met climate_obs.met Z500_bias_era_mm.met \
   zondia_seas_icon_batch.met zondia_def_axes zondia_def_contour zondia-seas_def_display_layout \
   zondia-seas_def_title zondia-seas-icon_mars wind_maps_clim.met save_mean_diurnal_flux.met \
   plot_amp_phase_clim.met cossinlon1.f90 dates.met avgtime.f monmeans_clim_batch monmeans_clim.met .
chmod u+x climplot_batch monmeans_clim_batch

#
# directory
#
export PLOTDATA=${DIR}/${EXPVER}    # working directory
mkdir $DIR || true
mkdir $PLOTDATA || true 
cd $PLOTDATA

unlimit || true                     # get more RAM

echo "====================================",$PLOT_OPT
if (( $PLOT_OPT > 99 )) ; then
  MONMEAN=111
echo "WRONG"
else
echo "====================================",$PLOT_OPT
  MONMEAN=011 
fi

exp=${EXPVER}
if [[ $FSFAMILY = "/climplot" ]] ; then
  exp=${VERFEXP1:-${EXPVER}}
  locfcrange=$FCRANGE
  locnumber=$NUMBER
  locclass1=$CLASS1
  lclassan=$CLASS2
else
  locfcrange=-99
  locnumber=-99
  locclass1='rd'
  lclassan='ei'
fi
if [[ $lclassan != 'ei' ]] && [[ $lclassan != 'e4' ]];then
  print lclassan=$lclassan but must be e4 or ei
  print therefore it is put to default ei
  lclassan='ei'
fi

if [[ $EXPVER2 = "0001" ]] ; then
  expver2=${EXPVER}  # experiment ID2 - to compare
else
  expver2=${EXPVER2} # experiment ID2 - to compare
fi

lclimatoplot=0
LCLIM=${LCLIM:-false}
if [[ $LCLIM = true ]] ; then
  lclimatoplot=1   # also plot against climatology
else
  lclimatoplot=0   # only plot for current year (period)
fi

# Plotting options: significance plotting, colour, titles, diurnal ccyle
NCLIMPL=${NCLIMPL:-21110}
lsigt=`print $NCLIMPL| cut -c1`
lcol=`print $NCLIMPL| cut -c2`
lartic=`print $NCLIMPL| cut -c3`
ldcycle=`print $NCLIMPL| cut -c4`
lmldif=`print $NCLIMPL| cut -c5`

integer i

INIDATE1=${INITIME}


#-------------------------------------
# turn start/end/int into a date list:
#-------------------------------------
if [ ${USE_DATES_LIST} = 'no' ] ; then
   date1=${INIBEGINDATE}
   INIDATE1=''
   while (( ${date1} <= ${INIENDDATE} )) ; do
     INIDATE1=${INIDATE1}"/"${date1}
     let date1=${date1}+${INIBY}/24*100
   done
   INIDATE1=`echo ${INIDATE1} | cut -c 2-`
fi

INIDATE1=${INIDATE1}/9999                    # add dummy date
INIDATE1=`echo ${INIDATE1} | sed 's/\// /g'` # Replace / with space
set -A INIDATE1 ${INIDATE1}                  # turn into array


#
# monthly means
#
if (( ${MMEANS} > 0 )) ; then
  i=0
  while (( ${i}+1 < ${#INIDATE1[*]} )) ; do

    inidate=`echo ${INIDATE1[i]} | cut -c 1-8`
    initime=`echo ${INIDATE1[i]} | cut -c 9-10`

    if (( $MMEANS < 2 || $MMEANS > 2 )) ; then
      monmeans_clim_batch -a $exp -c $locclass1 -l $LEVELS -f $FCLENGTH -r $locfcrange -d $inidate -p 111      -t sfc -n $locnumber -i $initime
      if [[ ${locfcrange} = -99 ]] ; then
      monmeans_clim_batch -a $exp -c $locclass1 -l $LEVELS -f $FCLENGTH -r $locfcrange -d $inidate -p $MONMEAN -t pl  -n $locnumber -i $initime
      monmeans_clim_batch -a $exp -c $locclass1 -l $LEVELS -f $FCLENGTH -r $locfcrange -d $inidate -p $MONMEAN -t ml  -n $locnumber -i $initime
      fi
    fi
    if (( $MMEANS < 1 || $MMEANS > 1 )) ; then
      monmeans_clim_batch -a $expver2 -c $locclass1 -l $LEVELS -f $FCLENGTH -r $locfcrange -d $inidate -p 111 -t sfc -n $locnumber -i $initime
      if [[ ${locfcrange} = -99 ]] ; then
      monmeans_clim_batch -a $expver2 -c $locclass1 -l $LEVELS -f $FCLENGTH -r $locfcrange -d $inidate -p $MONMEAN -t pl  -n $locnumber -i $initime
      monmeans_clim_batch -a $expver2 -c $locclass1 -l $LEVELS -f $FCLENGTH -r $locfcrange -d $inidate -p $MONMEAN -t ml  -n $locnumber -i $initime
      fi
    fi
    i=i+1
  done
fi


i=1
datestr=""
timestr=""
refdate=`echo ${INIDATE1[0]} | cut -c 1-6`

while (( ${i}+1 <= ${#INIDATE1[*]} )) ; do
  datestr=${datestr}"/"`echo ${INIDATE1[${i}-1]} | cut -c 1-8`
  timestr=${timestr}"/"`echo ${INIDATE1[${i}-1]} | cut -c 9-10`
  # NOTE: next date in list
  idate=`echo ${INIDATE1[${i}]} | cut -c 1-6`
  if (( idate != refdate )) ; then
    refdate=${idate}
    datestr=`echo $datestr | cut -c2-` # discard first hash
    timestr=`echo $timestr | cut -c2-` # discard first hash

# -----------------------------------------------------------
# Final plots: (after last simulation of each ensemble)
# -----------------------------------------------------------

    # use env to reduce the number of environment variables from ~400 (SMS) to solve Magics plotting issues
        env  SCRATCH=$SCRATCH ECFS_SYS_PATH=$ECFS_SYS_PATH FSROOT=$FSROOT TMPDIR=$TMPDIR \
               ARCH=$ARCH PATH=$PATH PLOTDATA=$PLOTDATA HOME=$HOME EMOSLIB="$EMOSLIB" \
               climplot_batch -a $exp -b $expver2 -c $locclass1 -l $LEVELS -f $FCLENGTH \
                              -r $locfcrange -n $locnumber -d $datestr -p $PLOT_OPT \
                              -m $lclimatoplot -t %TASK% -x %PLOTPERIOD% -i $timestr -v $lclassan \
                              -s $lsigt -o $lcol -y $lartic -z $ldcycle -e $lmldif

# -----------------------------------------------------------

    datestr="" # reset the datestr
    timestr="" # reset the datestr
  fi
  i=i+1
done

