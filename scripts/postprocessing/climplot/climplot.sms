#!/bin/ksh
%manual
  - plots for climate experiments
  - selects ensembles of runs initiated in same month
  - initiates plotting after first and last ensemble member
  - cycles over periods (e.g. months, seasons, years)
  - plots difference map against a control and observations,
    zonal means and winds against ERA40
  - plot_opt
    101 (e.g.)
    1  : single month means
     1 : seasons means
      1: whole experiment mean
%end

%include <qsub.h>
#=========================================================================
# AUTHOR  Martin Koehler Sept. 2003 & April 2004
# UPDATED Adrian Tompkins 29r1
#         Adrian Tompkins 29r2 = plots for operations/esuite 
#         Adrian Tompkins 30r1 = coupled model 
#         Adrian Tompkins 31r1 = plots against climatology
#         Peter  Bechtold 35r2 = remove -i in "env -i" as metview ecfs
#                                command didn't work anymore
#         Peter  Bechtold 35r3 = possibility of activating plotting of fields
#                                against climtology via prepIFS variable LCLIM 
#         Peter  Bechtold 36r3 = options for significance, color/bw, article plotting
#         Peter  Bechtold 37r1 = add diurnal cycle plots
#
#=========================================================================
#  Define environment variables and export them.
#==========================================================================

%include <config.h>
%include <rcp.h>
%include <trap.h>
%include <setup.h>

export TMPDIR=$PLOTDATA/$TASK.$SMSTRYNO
rm -rf $TMPDIR
mkdir -p -m 775 $TMPDIR

if [[ $SMSTRYNO -gt 1 ]] ; then
  previous=$(($SMSTRYNO - 1))
  rm -rf $PLOTDATA/$TASK.$previous
fi

cd $TMPDIR

#==========================================================================


cat > ./climplot_batch << \++end++
%include <climplot_batch>
++end++

cat > ./compvar_ens.met << \++end++
%include <compvar_ens.met>
++end++

cat > ./climate_obs.met << \++end++
%include <climate_obs.met>
++end++

cat > ./Z500_bias_era_mm.met << \++end++
%include <Z500_bias_era_mm.met>
++end++

cat > ./zondia_seas_icon_batch.met << \++end++
%include <zondia_seas_icon_batch.met>
++end++

cat > ./zondia_def_axes << \++end++
%include <zondia_def_axes>
++end++

cat > ./zondia_def_contour << \++end++
%include <zondia_def_contour>
++end++

cat > ./zondia-seas_def_display_layout << \++end++
%include <zondia-seas_def_display_layout>
++end++

cat > ./zondia-seas_def_title << \++end++
%include <zondia-seas_def_title>
++end++

cat > ./zondia-seas-icon_mars << \++end++
%include <zondia-seas-icon_mars>
++end++

cat > ./wind_maps_clim.met << \++end++
%include <wind_maps_clim.met>
++end++

cat > ./save_mean_diurnal_flux.met << \++end++
%include <save_mean_diurnal_flux.met>
++end++

cat > ./plot_amp_phase_clim.met << \++end++
%include <plot_amp_phase_clim.met>
++end++

cat > ./dates.met << \++end++
%include <dates.met>
++end++

cat > ./avgtime.f90 << \++end++
%include <avgtime.f90>
++end++

cat > ./ttest_thresh.f90 << \++end++
%include <ttest_thresh.f90>
++end++

cat > ./cossinlon1.f90 << \++end++
%include <cossinlon1.f90>
++end++


chmod u+x climplot_batch


exp=${EXPVER}
if [[ $FSFAMILY = "/climplot" ]] ; then
  exp=${VERFEXP1:-${EXPVER}}
  locfcrange=$FCRANGE
  locnumber=$NUMBER
  locclass1=$CLASS1
  lclassan=$CLASS2
else
  locfcrange=-99
  locnumber=-99
  locclass1='rd'
  lclassan='ei'
fi
if [[ $lclassan != 'ei' ]] && [[ $lclassan != 'e4' ]];then
  print lclassan=$lclassan but must be e4 or ei
  print therefore it is put to default ei
  lclassan='ei'
fi

if [[ $VERFEXP2 = "0001" ]] ; then
  expver2=${exp}   # experiment ID2 - to compare
else
  expver2=${VERFEXP2} # experiment ID2 - to compare
fi

lclimatoplot=0
LCLIM=${LCLIM:-false}
if [[ $LCLIM = true ]] ; then
  lclimatoplot=1   # also plot against climatology
else
  lclimatoplot=0   # only plot for current year (period)
fi

# Plotting options: significance plotting, colour, titles, diurnal ccyle
NCLIMPL=${NCLIMPL:-21110}
lsigt=`print $NCLIMPL| cut -c1`
lcol=`print $NCLIMPL| cut -c2`
lartic=`print $NCLIMPL| cut -c3`
ldcycle=`print $NCLIMPL| cut -c4`
lmldif=`print $NCLIMPL| cut -c5`

integer i

INIDATE1=${INITIME}


INIDATE1=${INIDATE1}/9999                    # add dummy date
INIDATE1=`echo ${INIDATE1} | sed 's/\// /g'` # Replace / with space
set -A INIDATE1 ${INIDATE1}                  # turn into array


if (( $BASETIME == ${INIDATE1[0]} )) ; then
#
# > 2 because of dummy date added.
#
  if (( ${#INIDATE1[*]} > 2  )) ; then

    datestr=`echo ${INIDATE1[0]} | cut -c 1-8`
    timestr=`echo ${INIDATE1[0]} | cut -c 9-10`

# ---------------------------------------------------------------
# First guess plots: (after first simulation of each ensemble)
# ---------------------------------------------------------------

    PLOT_OPT=001

    nperiods=`metview -b dates.met $FCLENGTH $datestr $PLOT_OPT | grep nmon | sed 's/nmon//' | sed 'y/[],/   /'`
  # use env to reduce the number of environment variables from ~400 (SMS) to solve Magics plotting issues
    if (( %PLOTPERIOD% <= ${nperiods} )) ; then
    # env -i SCRATCH=$SCRATCH ECFS_SYS_PATH=$ECFS_SYS_PATH FSROOT=$FSROOT TMPDIR=$TMPDIR \
      env  SCRATCH=$SCRATCH ECFS_SYS_PATH=$ECFS_SYS_PATH FSROOT=$FSROOT TMPDIR=$TMPDIR \
             ARCH=$ARCH PATH=$PATH PLOTDATA=$PLOTDATA HOME=$HOME EMOSLIB="$EMOSLIB" \
             climplot_batch -a $exp -b $expver2 -c $locclass1 -l $LEVELS -f $FCLENGTH \
                            -r $locfcrange -n $locnumber -d $datestr -p $PLOT_OPT  \
                            -m $lclimatoplot -t %TASK% -x %PLOTPERIOD% -i $timestr -v $lclassan \
                            -s $lsigt -o $lcol -y $lartic -z $ldcycle -e $lmldif
    fi


# -----------------------------------------------------------

  fi
fi


i=1
datestr=""
timestr=""
refdate=`echo ${INIDATE1[0]} | cut -c 1-6`

while (( ${i}+1 <= ${#INIDATE1[*]} )) ; do
  datestr=${datestr}"/"`echo ${INIDATE1[${i}-1]} | cut -c 1-8`
  timestr=${timestr}"/"`echo ${INIDATE1[${i}-1]} | cut -c 9-10`
  # NOTE: next date in list
  idate=`echo ${INIDATE1[${i}]} | cut -c 1-6`
  if (( idate != refdate )) ; then
    refdate=${idate}
    datestr=`echo $datestr | cut -c2-` # discard first hash
    timestr=`echo $timestr | cut -c2-` # discard first hash
    if (( BASETIME == INIDATE1[${i}-1] )) ; then

# -----------------------------------------------------------
# Final plots: (after last simulation of each ensemble)
# -----------------------------------------------------------

      PLOT_OPT=011
      nperiods=`metview -b dates.met $FCLENGTH $datestr $PLOT_OPT | grep nmon | sed 's/nmon//' | sed 'y/[],/   /'`
    # use env to reduce the number of environment variables from ~400 (SMS) to solve Magics plotting issues
      if (( %PLOTPERIOD% <= ${nperiods} )) ; then
      # env -i SCRATCH=$SCRATCH ECFS_SYS_PATH=$ECFS_SYS_PATH FSROOT=$FSROOT TMPDIR=$TMPDIR \
        env  SCRATCH=$SCRATCH ECFS_SYS_PATH=$ECFS_SYS_PATH FSROOT=$FSROOT TMPDIR=$TMPDIR \
               ARCH=$ARCH PATH=$PATH PLOTDATA=$PLOTDATA HOME=$HOME EMOSLIB="$EMOSLIB" \
               climplot_batch -a $exp -b $expver2 -c $locclass1 -l $LEVELS -f $FCLENGTH \
                              -r $locfcrange -n $locnumber -d $datestr -p $PLOT_OPT \
                              -m $lclimatoplot -t %TASK% -x %PLOTPERIOD% -i $timestr -v $lclassan \
                              -s $lsigt -o $lcol -y $lartic -z $ldcycle -e $lmldif
    fi

# -----------------------------------------------------------

    fi
    datestr="" # reset the datestr
    timestr="" # reset the datestr
  fi
  i=i+1
done


%include <endt.h>

