#!/bin/ksh

# usage get_icon <source icon-dev full path> <target icon-dev full path>
#  links the <source icon-dev full path> to <target icon-dev full path>.
#  useful for multiple setups, sharing the source code

set -x
thisfolder=`pwd`
icon_dev_from=$thisfolder/git/$1
icon_dev_to=$thisfolder/$2

if [ ! -d ${icon_dev_to} ] ; then
  mkdir -p ${icon_dev_to}
fi
  
# cd ${icon_dev_to}


#-----------------------------------------------------------------------------------
link_source_list()
{
  source_folder=$1
  source_files_list="$2"

  if [ x${source_folder} != "x" ] ; then
    if [ ! -d ${icon_dev_to}/${source_folder} ] ; then
      mkdir -p ${icon_dev_to}/${source_folder}
    fi
  fi
  
  if [ "${source_files_list}" == "all" ] ; then
    ln -s ${icon_dev_from}/${source_folder}*  ${icon_dev_to}/${source_folder}
  else 
    for source_file in ${source_files_list}
    do
      ln -s ${icon_dev_from}/${source_folder}${source_file}  ${icon_dev_to}/${source_folder}
    done
  fi
  
}

#-----------------------------------------------------------------------------------
#link folder
link_list=`ls $icon_dev_from`
link_source_list "" "$link_list"

rm $icon_dev_to/config $icon_dev_to/run 

link_source_list "config/" all
link_source_list "run/" all

ln -s ${icon_dev_to}/scripts/building/create_builds ${icon_dev_to}

#-----------------------------------------------------------------------------------

cat > ${icon_dev_to}/config/multiple_builds << EOF
#==============================================
# This file defines multiple builds for ICON
#==============================================

#==============================================
# Define the run scripts in run/ to be common along the following builds
run_scripts=*

#==============================================
# Define parameters for each build - examples:
build_folder=gcc_yMyO configure_options=--with-fortran=gcc --with-mpi  --with-openmp
build_folder=gcc_yMyO_hiopt configure_options=--with-fortran=gcc --with-mpi  --with-openmp --with-flags=hiopt
build_folder=gcc_nMnO configure_options=--with-fortran=gcc --without-mpi
build_folder=gcc_nMyO configure_options=--with-fortran=gcc --without-mpi --with-openmp
build_folder=gcc_yMnO configure_options=--with-fortran=gcc --with-mpi
build_folder=gcc_yMnO_hiopt configure_options=--with-fortran=gcc --with-mpi --with-flags=hiopt
build_folder=nag_nMnO configure_options=--with-fortran=nag --without-mpi
build_folder=nag_yMnO configure_options=--with-fortran=nag --with-mpi
build_folder=intel_nMyO configure_options=--with-fortran=intel --without-mpi --with-openmp
build_folder=intel_nMnO configure_options=--with-fortran=intel --without-mpi
build_folder=intel_yMnO configure_options=--with-fortran=intel --with-mpi
build_folder=intel_yMyO configure_options=--with-fortran=intel --with-mpi --with-openmp
build_folder=intel_yMnO_hiopt configure_options=--with-fortran=intel --with-mpi --with-flags=hiopt
build_folder=pgi_yMnO configure_options=--with-fortran=pgi  --with-mpi
EOF

exit






      