#!/bin/ksh
#
# MARS request to read data used in the ifs2icon utility.
# run as: mars4icon 2008123100 799 1/to/91
#
# attention: 
#   * requires data routine "datconv" by J. Foerster
#   * at DWD requires ECMWF login by eccert
# history:
#   Helmut Frank    201107  adopted from GME equivalent
#   Martin Koehler  201108  consmetics
# -------------------------------------------------------

# --- argument list ---

pdatin=${1:-g12}
resolutions="${2:-255 1279}"
levelist=${3:-1/to/91}

# --- data output ---

#datadir=${SCRATCH}
datadir=${work}/icon/ifs.data
mkdir -p $datadir

# --- date processing ---

cymdg=$(datconv -Cy ${pdatin})
typeset -L8 cymd=${cymdg}
typeset -R2 hh=${cymdg}

# --- read ---

for res in ${resolutions}
do
    case ${res} in
        255) grd=128 ;;
        799) grd=400 ;;
       1279) grd=640 ;;
    esac
    grib_file=${datadir}/eca${cymdg}.r${res}

    cat > ${TMPDIR}/MARS_IN.$$ << MARS_IFS2ICON_EOF.$$
# MARS request for ifs2icon
retrieve,
        padding  = 0,
        accuracy = 16,
        class    = od,
        expver   = 1,
        domain   = g,
        stream   = oper,
        type     = AN,
        date     = ${cymd},
        time     = ${hh},
        step     = 0,
        target   = "${grib_file}",
        param    = u/v/w/t/q/clwc/ciwc/crwc/cswc/o3,
        repres   = sh,                  # spherical harmonics,
        resol    = ${res},
        grid     =  ${grd},
        gaussian = regular,
        levtype  = ml,                  # model levels,
        levelist = ${levelist}
retrieve,
        param    = lnsp/z,
        levelist = 1
retrieve,
        param    = tsn/skt/stl1/stl2/stl3/stl4/sd/rsn/src/swvl1/swvl2/swvl3/swvl4/ci,
        repres   = gg, 
        resol    = off, 
        levtype  = surface 
retrieve,
        type     = analysis,
        step     = 0,
        repres   = gg,                  # gaussian grid,
        resol    = off,
        levtype  = surface,
        param    = sp/z/lsm/sr/cvl/cvh/sdor/isor/anor/slor
MARS_IFS2ICON_EOF.$$

    mars ${TMPDIR}/MARS_IN.$$
    rc_mars=$?

    if [ $rc_mars -ne 0 ]; then
        { print -- "Error $rc_mars executing mars"
          print -- "Input file to MARS:"
          cat ${TMPDIR}/MARS_IN.$$
        } >&2
        rm ${TMPDIR}/MARS_IN.$$
        exit $rc_mars
    fi

    print "Retrieved operational analysis for ${cymdg}. resol=${res} grid=${grd} levels=${levelist}"

    ls -al ${grib_file}
    rm -f ${TMPDIR}/MARS_IN.$$

done

exit 0
