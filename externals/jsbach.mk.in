# This file is included by @top_srcdir@/Makefile.

ifeq ($(V), 0)
silent_DSL4JSB= @echo "  DSL4JSB " $@;
endif

jsb_srcdir:= @abs_srcdir@/jsbach

# We want to make sure that we always use the post-processed files from the
# current build directory but not from the possibly "dirty" source directory.
# Therefore, we MUST use an absolute path here:
jsb_builddir:= @abs_builddir@/jsbach.dsl

jsb_DSL_srcs:= $(shell find $(jsb_srcdir)/src -name '*.f90')
jsb_FC_srcs:= $(patsubst $(jsb_srcdir)/%.f90, $(jsb_builddir)/%.f90, $(jsb_DSL_srcs))
jsb_dirstamps:= $(patsubst %, %.dirstamp, $(sort $(dir $(jsb_FC_srcs))))
jsb_depfiles:= $(patsubst %, %.d, $(jsb_FC_srcs))

.PHONY: jsb-mostlyclean jsb-clean jsb-distclean
.PRECIOUS: $(jsb_FC_srcs) $(jsb_dirstamps)

$(jsb_builddir)/%.f90: $(jsb_srcdir)/%.f90 | $(jsb_dirstamps)
	$(silent_DSL4JSB)$(PYTHON) $(jsb_srcdir)/scripts/dsl4jsb/dsl4jsb.py -i $< -o $@

jsb-mostlyclean:
	rm -f $(patsubst %.f90, %.o, $(jsb_FC_srcs)) $(patsubst %.f90, %.i, $(notdir $(jsb_FC_srcs)))

jsb-clean:
	rm -f $(jsb_FC_srcs) $(jsb_dirstamps)

jsb-distclean:
	rm -f @abs_builddir@/jsbach.mk

# Update targets and variables of @top_srcdir@/Makefile:
mostlyclean: jsb-mostlyclean
clean: jsb-clean
distclean: jsb-distclean
depfiles+= $(jsb_depfiles)
