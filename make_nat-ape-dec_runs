#!/bin/bash

#==============================================================================
# Creates the ICON run scripts
# Leonidas Linardakis, MPI-M, 2011-25-1
#==============================================================================
#==============================================================================
# The basic command for creating an ICON experiment run script is
#   
#  $make_runscript in_script=exp.<name> in_script=exec.iconrun EXPNAME=<name>
#
# By default the folder in use is ./run, and the run script is named exp.<name>.run.
# 
# Basic optional parameters for the $make_runscript command are:
#
#    out_script=<output run script name>. By default is <in_script>.run
#
#    in_folder=<input folder>. By default is run
#
#    out_folder=<output folder>. By default is =<in_folder>
#
#    mpi_procs=<number of mpi processes>. In the case of MPI configuration,
#       defines how many processes per node will be used.
# 
#    no_of_nodes=<Number of nodes>. In the case of MPI configuration,
#       defines how many nodes will be used.
# 
#    openmp_threads=<Number of openmp threads>. In the case of OPENMP
#       configuration, defines how many OPENMP threads will be used.
#
#    cpu_time=<wall time>. Defines the expected run wall time.
#  
#    <free_variable>=<value> Free variables can be passed to the run script
#       using this syntax. For example: EXPNAME=test, will result the
#       definition of the variable EXPNAME=test in the run script. 
   

#
# For more details see the parameters in the ./config/make_target_runscript
#==============================================================================
set -x
echo "-----------------------------------------------------------"
base_folder=$(pwd)
input_folder=run
#==============================================================================
. $base_folder/config/set-up.info
use_shell=${use_shell:="/bin/ksh"}
# The $make_runscript command directs to the ./config/make_target_runscript
make_runscript="$use_shell ./config/make_target_runscript"

#==============================================================================
create_dec()
{

  if [[ x$atmo_dyn_gridname == x ]] ; then  
    grid_base_level=$(eval "echo \$$(echo grid_base_level_dec_${dec_size})")
    grid_level=`expr ${grid_base_level} + ${add_grid_level}`  
    atmo_dyn_gridname="iconR2B0${grid_level}_dec-${dec_size}"
  fi

  
  mod=`expr ${dec_size} % ${mpi_procs_pernode}`
  if [ $mod -eq 0 ] ; then
    nodes=`expr ${dec_size} / ${mpi_procs_pernode}`
  else
    nodes=`expr ${dec_size} / ${mpi_procs_pernode} + 1`
  fi

  exp_name=${outname}.${dec_size}.${nodes}nodes.${nproma}nproma
  runname=exp.${exp_name}.run

  $make_runscript in_folder=$input_folder in_script=exp.$name in_script=exec.iconrun EXPNAME=${exp_name} out_script=${runname} \
    atmo_dyn_gridname="$atmo_dyn_gridname" atmo_rad_gridname="$atmo_rad_gridname" nproma=$nproma no_of_nodes=$nodes dec_size=$dec_size dt_rad=$dt_rad \
    mpi_procs=$mpi_procs_pernode openmp_threads=$openmp_threads cpu_time=$cpu_time use_barrier=$use_barrier testbed_mode=$testbed_mode division_method=$division_method \
    ndays=$ndays use_icon_comm=$use_icon_comm
  # queue="express"

  if [ $run = "true" ]; then
    cd $input_folder
    $use_submit ${runname}
    cd $base_folder
  fi

}
#==============================================================================

#==============================================================================
set_default_parameters()
{
  name=nat_ape-dec
  mpi_procs_pernode=32
  openmp_threads=2
  nproma=4
  rrad="false"
  division_method=1
  dt_rad=1800
  use_barrier=".false."
  testbed_mode=0
  timers_level=6
  use_icon_comm=".false."
  ndays=10
  #---------------------------------
  run="false"
}
#==============================================================================


#==============================================================================
create_std_exp_on_blizzard()
{
  set_default_parameters
  mpi_procs_pernode=32
  dec_size=32  # create a total of 32 mpi procs, ie one node 
  openmp_threads=2
  atmo_dyn_gridname="iconR2B04-grid"
  outname="nat-ape_std"
  ndays=10
  cpu_time="01:00:00"
  create_dec
}
#==============================================================================

create_std_exp_on_blizzard
exit

#==============================================================================
create_weak_scaling()
{
  grid_base_level_dec_32=1
  grid_base_level_dec_92=2
  grid_base_level_dec_162=2
  grid_base_level_dec_362=3
  grid_base_level_dec_642=3
  grid_base_level_dec_1082=4
  grid_base_level_dec_1442=4
  grid_base_level_dec_1922=4
  grid_base_level_dec_2432=5
  
  case $cells_per_domain in
    "6" )  add_grid_level=0
  ;;
    "24" ) add_grid_level=1
  ;;
    "96" ) add_grid_level=2
  ;;
    "384" ) add_grid_level=3
  ;;
  *)  
    echo "Wrong cells_per_domain: $cells_per_domain"
    exit
  ;;
  esac
 
  atmo_dyn_gridname=""
  atmo_rad_gridname=""

  dec_size=32
#  create_dec

  dec_size=92
#  create_dec

  dec_size=162
#  create_dec

  dec_size=362
#  create_dec

  dec_size=642
#  create_dec

  dec_size=1082
#  create_dec
  
  dec_size=1442
#  create_dec
  
  dec_size=1922
#  create_dec
  
  dec_size=2432
  create_dec
}



#==============================================================================
create_weak_scaling_on_blizzard()
{
  set_default_parameters
  cells_per_domain=24
  division_method=0
  outname="nat-ape_hexdec-24cells"
  ndays=30
  cpu_time="00:10:00"
  dt_rad=1800
  #---------------------------------
  run="true"
  #==============================================================================

  use_icon_comm=".true."
  outname="nat-ape_hexdec-24cells_30mrad_iconcomm"
  # create_weak_scaling
  #==============================================================================  
  use_icon_comm=".false."
  outname="nat-ape_hexdec-24cells_30mrad_no-iconcomm"
  create_weak_scaling
}


create_weak_scaling_on_blizzard
exit


#==============================================================================
# ignore these

# name=icon-testbed_communication-dec
# run="true"
# #---------------------------------
# use_barrier=".false."
# testbed_mode=0
# 
# division_method=0
# outname=icon-testbed_communication-hexdec
# create_scaling_dec_lowres
# 
# division_method=1
# outname=icon-testbed_communication-geomdec
# create_scaling_dec_lowres
# 
# exit
# 
# 
# #==============================================================================
# 
# #==============================================================================
# # special treatment for exp.icon-testbed_communication
# # this includes the restart in the test_hat_jww-moist_cld-cnv-vdf_restart
# #
# 
# run_script="true"
# 
# nodes_list=(  10 20 40 60 80 )
# nproma_list=( 37 37 33 29 33 )
# nodes_list_size=${#nodes_list[*]}
# 
# name=icon-testbed_communication
# 
# j=0
# while [ $j -lt ${nodes_list_size} ]
# do
#   nodes=${nodes_list[$j]}
#   nproma=${nproma_list[$j]}
#  
#   exp_name=${name}.${nodes}nodes
#   runname=exp.${exp_name}.run
#   $make_runscript in_folder=$input_folder in_script=exp.$name in_script=exec.iconrun EXPNAME=$exp_name out_script=$runname\
#   grid="iconR2B06-grid.nc"  nproma=$nproma no_of_nodes=$nodes mpi_procs=16 openmp_threads=4 cpu_time="00:10:00"
# 
#   if [[ $run_script == "true" ]] ; then
#      cd $input_folder
#      $use_submit ./$runname
#      cd ..
#   fi
# 
#   let j=j+1
# done
# #==============================================================================
# 
